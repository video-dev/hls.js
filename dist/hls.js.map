{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "node_modules/events/events.js",
    "node_modules/webworkify/index.js",
    "src/controller/abr-controller.js",
    "src/controller/audio-stream-controller.js",
    "src/controller/audio-track-controller.js",
    "src/controller/buffer-controller.js",
    "src/controller/cap-level-controller.js",
    "src/controller/ewma-bandwidth-estimator.js",
    "src/controller/fps-controller.js",
    "src/controller/level-controller.js",
    "src/controller/stream-controller.js",
    "src/controller/timeline-controller.js",
    "src/crypt/aes-crypto.js",
    "src/crypt/aes-decryptor.js",
    "src/crypt/decrypter.js",
    "src/crypt/fast-aes-key.js",
    "src/demux/aacdemuxer.js",
    "src/demux/adts.js",
    "src/demux/demuxer-inline.js",
    "src/demux/demuxer-worker.js",
    "src/demux/demuxer.js",
    "src/demux/exp-golomb.js",
    "src/demux/id3.js",
    "src/demux/tsdemuxer.js",
    "src/errors.js",
    "src/event-handler.js",
    "src/events.js",
    "src/helper/aac.js",
    "src/helper/buffer-helper.js",
    "src/helper/level-helper.js",
    "src/hls.js",
    "src/index.js",
    "src/loader/fragment-loader.js",
    "src/loader/key-loader.js",
    "src/loader/playlist-loader.js",
    "src/remux/mp4-generator.js",
    "src/remux/mp4-remuxer.js",
    "src/remux/passthrough-remuxer.js",
    "src/utils/attr-list.js",
    "src/utils/binary-search.js",
    "src/utils/cea-608-parser.js",
    "src/utils/cues.js",
    "src/utils/ewma.js",
    "src/utils/logger.js",
    "src/utils/polyfill.js",
    "src/utils/timeRanges.js",
    "src/utils/url.js",
    "src/utils/xhr-loader.js"
  ],
  "names": [],
  "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n",
    "var bundleFn = arguments[3];\nvar sources = arguments[4];\nvar cache = arguments[5];\n\nvar stringify = JSON.stringify;\n\nmodule.exports = function (fn, options) {\n    var wkey;\n    var cacheKeys = Object.keys(cache);\n\n    for (var i = 0, l = cacheKeys.length; i < l; i++) {\n        var key = cacheKeys[i];\n        var exp = cache[key].exports;\n        // Using babel as a transpiler to use esmodule, the export will always\n        // be an object with the default export as a property of it. To ensure\n        // the existing api and babel esmodule exports are both supported we\n        // check for both\n        if (exp === fn || exp && exp.default === fn) {\n            wkey = key;\n            break;\n        }\n    }\n\n    if (!wkey) {\n        wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n        var wcache = {};\n        for (var i = 0, l = cacheKeys.length; i < l; i++) {\n            var key = cacheKeys[i];\n            wcache[key] = key;\n        }\n        sources[wkey] = [\n            Function(['require','module','exports'], '(' + fn + ')(self)'),\n            wcache\n        ];\n    }\n    var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n\n    var scache = {}; scache[wkey] = wkey;\n    sources[skey] = [\n        Function(['require'], (\n            // try to call default if defined to also support babel esmodule\n            // exports\n            'var f = require(' + stringify(wkey) + ');' +\n            '(f.default ? f.default : f)(self);'\n        )),\n        scache\n    ];\n\n    var workerSources = {};\n    resolveSources(skey);\n\n    function resolveSources(key) {\n        workerSources[key] = true;\n\n        for (var depPath in sources[key][1]) {\n            var depKey = sources[key][1][depPath];\n            if (!workerSources[depKey]) {\n                resolveSources(depKey);\n            }\n        }\n    }\n\n    var src = '(' + bundleFn + ')({'\n        + Object.keys(workerSources).map(function (key) {\n            return stringify(key) + ':['\n                + sources[key][0]\n                + ',' + stringify(sources[key][1]) + ']'\n            ;\n        }).join(',')\n        + '},{},[' + stringify(skey) + '])'\n    ;\n\n    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n\n    var blob = new Blob([src], { type: 'text/javascript' });\n    if (options && options.bare) { return blob; }\n    var workerUrl = URL.createObjectURL(blob);\n    var worker = new Worker(workerUrl);\n    worker.objectURL = workerUrl;\n    return worker;\n};\n",
    "/*\n * simple ABR Controller\n *  - compute next level based on last fragment bw heuristics\n *  - implement an abandon rules triggered if we have less than 2 frag buffered and if computed bw shows that we risk buffer stalling\n */\n\nimport Event from '../events';\nimport EventHandler from '../event-handler';\nimport BufferHelper from '../helper/buffer-helper';\nimport {ErrorDetails} from '../errors';\nimport {logger} from '../utils/logger';\nimport EwmaBandWidthEstimator from './ewma-bandwidth-estimator';\n\nclass AbrController extends EventHandler {\n\n  constructor(hls) {\n    super(hls, Event.FRAG_LOADING,\n               Event.FRAG_LOADED,\n               Event.FRAG_BUFFERED,\n               Event.ERROR);\n    this.lastLoadedFragLevel = 0;\n    this._autoLevelCapping = -1;\n    this._nextAutoLevel = -1;\n    this.hls = hls;\n    this.onCheck = this.abandonRulesCheck.bind(this);\n  }\n\n  destroy() {\n    this.clearTimer();\n    EventHandler.prototype.destroy.call(this);\n  }\n\n  onFragLoading(data) {\n    let frag = data.frag;\n    if (frag.type === 'main') {\n      if (!this.timer) {\n        this.timer = setInterval(this.onCheck, 100);\n      }\n      // lazy init of bw Estimator, rationale is that we use different params for Live/VoD\n      // so we need to wait for stream manifest / playlist type to instantiate it.\n      if (!this.bwEstimator) {\n        let hls = this.hls,\n            level = data.frag.level,\n            isLive = hls.levels[level].details.live,\n            config = hls.config,\n            ewmaFast, ewmaSlow;\n\n        if (isLive) {\n          ewmaFast = config.abrEwmaFastLive;\n          ewmaSlow = config.abrEwmaSlowLive;\n        } else {\n          ewmaFast = config.abrEwmaFastVoD;\n          ewmaSlow = config.abrEwmaSlowVoD;\n        }\n        this.bwEstimator = new EwmaBandWidthEstimator(hls,ewmaSlow,ewmaFast,config.abrEwmaDefaultEstimate);\n      }\n      this.fragCurrent = frag;\n    }\n  }\n\n  abandonRulesCheck() {\n    /*\n      monitor fragment retrieval time...\n      we compute expected time of arrival of the complete fragment.\n      we compare it to expected time of buffer starvation\n    */\n    let hls = this.hls, v = hls.media,frag = this.fragCurrent, loader = frag.loader;\n\n    // if loader has been destroyed or loading has been aborted, stop timer and return\n    if(!loader || ( loader.stats && loader.stats.aborted)) {\n      logger.warn('frag loader destroy or aborted, disarm abandonRules');\n      this.clearTimer();\n      return;\n    }\n    let stats = loader.stats;\n    /* only monitor frag retrieval time if\n    (video not paused OR first fragment being loaded(ready state === HAVE_NOTHING = 0)) AND autoswitching enabled AND not lowest level (=> means that we have several levels) */\n    if (v && ((!v.paused && (v.playbackRate !== 0)) || !v.readyState) && frag.autoLevel && frag.level) {\n      let requestDelay = performance.now() - stats.trequest,\n          playbackRate = Math.abs(v.playbackRate);\n      // monitor fragment load progress after half of expected fragment duration,to stabilize bitrate\n      if (requestDelay > (500 * frag.duration / playbackRate)) {\n        let levels = hls.levels,\n            loadRate = Math.max(1, stats.bw ? stats.bw / 8 : stats.loaded * 1000 / requestDelay), // byte/s; at least 1 byte/s to avoid division by zero\n            // compute expected fragment length using frag duration and level bitrate. also ensure that expected len is gte than already loaded size\n            expectedLen = stats.total ? stats.total : Math.max(stats.loaded, Math.round(frag.duration * levels[frag.level].bitrate / 8)),\n            pos = v.currentTime,\n            fragLoadedDelay = (expectedLen - stats.loaded) / loadRate,\n            bufferStarvationDelay = (BufferHelper.bufferInfo(v,pos,hls.config.maxBufferHole).end - pos) / playbackRate;\n        // consider emergency switch down only if we have less than 2 frag buffered AND\n        // time to finish loading current fragment is bigger than buffer starvation delay\n        // ie if we risk buffer starvation if bw does not increase quickly\n        if ((bufferStarvationDelay < (2 * frag.duration / playbackRate)) && (fragLoadedDelay > bufferStarvationDelay)) {\n          let fragLevelNextLoadedDelay, nextLoadLevel;\n          // lets iterate through lower level and try to find the biggest one that could avoid rebuffering\n          // we start from current level - 1 and we step down , until we find a matching level\n          for (nextLoadLevel = frag.level - 1 ; nextLoadLevel >=0 ; nextLoadLevel--) {\n            // compute time to load next fragment at lower level\n            // 0.8 : consider only 80% of current bw to be conservative\n            // 8 = bits per byte (bps/Bps)\n            fragLevelNextLoadedDelay = frag.duration * levels[nextLoadLevel].bitrate / (8 * 0.8 * loadRate);\n            if (fragLevelNextLoadedDelay < bufferStarvationDelay) {\n              // we found a lower level that be rebuffering free with current estimated bw !\n              break;\n            }\n          }\n          // only emergency switch down if it takes less time to load new fragment at lowest level instead\n          // of finishing loading current one ...\n          if (fragLevelNextLoadedDelay < fragLoadedDelay) {\n            // ensure nextLoadLevel is not negative\n            nextLoadLevel = Math.max(0,nextLoadLevel);\n            logger.warn(`loading too slow, abort fragment loading and switch to level ${nextLoadLevel}:fragLoadedDelay[${nextLoadLevel}]<fragLoadedDelay[${frag.level-1}];bufferStarvationDelay:${fragLevelNextLoadedDelay.toFixed(1)}<${fragLoadedDelay.toFixed(1)}:${bufferStarvationDelay.toFixed(1)}`);\n            // force next load level in auto mode\n            hls.nextLoadLevel = nextLoadLevel;\n            // update bw estimate for this fragment before cancelling load (this will help reducing the bw)\n            this.bwEstimator.sample(requestDelay,stats.loaded);\n            //abort fragment loading\n            loader.abort();\n            // stop abandon rules timer\n            this.clearTimer();\n            hls.trigger(Event.FRAG_LOAD_EMERGENCY_ABORTED, {frag: frag, stats: stats });\n          }\n        }\n      }\n    }\n  }\n\n  onFragLoaded(data) {\n    let frag = data.frag;\n    if (frag.type === 'main') {\n      // stop monitoring bw once frag loaded\n      this.clearTimer();\n      // store level id after successful fragment load\n      this.lastLoadedFragLevel = frag.level;\n      // reset forced auto level value so that next level will be selected\n      this._nextAutoLevel = -1;\n      // if fragment has been loaded to perform a bitrate test,\n      if (data.frag.bitrateTest) {\n        let stats = data.stats;\n        stats.tparsed = stats.tbuffered = stats.tload;\n        this.onFragBuffered(data);\n      }\n    }\n  }\n\n  onFragBuffered(data) {\n    var stats = data.stats, frag = data.frag;\n    // only update stats on first frag buffering\n    // if same frag is loaded multiple times, it might be in browser cache, and loaded quickly\n    // and leading to wrong bw estimation\n    // on bitrate test, also only update stats once (if tload = tbuffered == on FRAG_LOADED)\n    if (stats.aborted !== true && frag.loadCounter === 1 && frag.type === 'main' && ((!frag.bitrateTest || stats.tload === stats.tbuffered))) {\n      let fragLoadingProcessingMs = stats.tbuffered - stats.trequest;\n      logger.log(`latency/loading/parsing/append/kbps:${Math.round(stats.tfirst-stats.trequest)}/${Math.round(stats.tload-stats.tfirst)}/${Math.round(stats.tparsed-stats.tload)}/${Math.round(stats.tbuffered-stats.tparsed)}/${Math.round(8*stats.loaded/(stats.tbuffered-stats.trequest))}`);\n      this.bwEstimator.sample(fragLoadingProcessingMs,stats.loaded);\n      // if fragment has been loaded to perform a bitrate test, (hls.startLevel = -1), store bitrate test delay duration\n      if (frag.bitrateTest) {\n        this.bitrateTestDelay = fragLoadingProcessingMs/1000;\n      } else {\n        this.bitrateTestDelay = 0;\n      }\n    }\n  }\n\n  onError(data) {\n    // stop timer in case of frag loading error\n    switch(data.details) {\n      case ErrorDetails.FRAG_LOAD_ERROR:\n      case ErrorDetails.FRAG_LOAD_TIMEOUT:\n        this.clearTimer();\n        break;\n      default:\n        break;\n    }\n  }\n\n clearTimer() {\n    if (this.timer) {\n      clearInterval(this.timer);\n      this.timer = null;\n    }\n }\n\n  /** Return the capping/max level value that could be used by automatic level selection algorithm **/\n  get autoLevelCapping() {\n    return this._autoLevelCapping;\n  }\n\n  /** set the capping/max level value that could be used by automatic level selection algorithm **/\n  set autoLevelCapping(newLevel) {\n    this._autoLevelCapping = newLevel;\n  }\n\n  get nextAutoLevel() {\n    let nextAutoLevel = this._nextAutoLevel, bwEstimator = this.bwEstimator, hls = this.hls,\n      levels = hls.levels, minAutoBitrate = hls.config.minAutoBitrate;\n    // in case next auto level has been forced, and bw not available or not reliable\n    if (nextAutoLevel !== -1 && (!bwEstimator || !bwEstimator.canEstimate())) {\n      // cap next auto level by max auto level\n      return Math.min(nextAutoLevel,this.maxAutoLevel);\n    }\n    // compute next level using ABR logic\n    let nextABRAutoLevel = this.nextABRAutoLevel;\n    if (nextAutoLevel !== -1) {\n      // nextAutoLevel is defined, use it to cap ABR computed quality level\n      nextABRAutoLevel = Math.min(nextAutoLevel,nextABRAutoLevel);\n    }\n    if(minAutoBitrate !== undefined) {\n      while (levels[nextABRAutoLevel].bitrate < minAutoBitrate) {\n        nextABRAutoLevel++;\n      }\n    }\n    return nextABRAutoLevel;\n  }\n\n  get minAutoLevel() {\n    let hls = this.hls, levels = hls.levels, minAutoBitrate = hls.config.minAutoBitrate;\n    for (let i = 0; i < levels.length; i++) {\n      if (levels[i].bitrate > minAutoBitrate) {\n        return i;\n      }\n    }\n    return 0;\n  }\n\n  get maxAutoLevel() {\n    var levels = this.hls.levels,autoLevelCapping = this._autoLevelCapping, maxAutoLevel;\n    if (autoLevelCapping=== -1 && levels && levels.length) {\n      maxAutoLevel = levels.length - 1;\n    } else {\n      maxAutoLevel = autoLevelCapping;\n    }\n    return maxAutoLevel;\n  }\n\n  get nextABRAutoLevel() {\n    var hls = this.hls, maxAutoLevel = this.maxAutoLevel, levels = hls.levels, config = hls.config, minAutoLevel = this.minAutoLevel;\n    const v = hls.media,\n          currentLevel = this.lastLoadedFragLevel,\n          currentFragDuration = this.fragCurrent ? this.fragCurrent.duration : 0,\n          pos = (v ? v.currentTime : 0),\n          // playbackRate is the absolute value of the playback rate; if v.playbackRate is 0, we use 1 to load as\n          // if we're playing back at the normal rate.\n          playbackRate = ((v && (v.playbackRate !== 0)) ? Math.abs(v.playbackRate) : 1.0),\n          avgbw = this.bwEstimator ? this.bwEstimator.getEstimate() : config.abrEwmaDefaultEstimate,\n          // bufferStarvationDelay is the wall-clock time left until the playback buffer is exhausted.\n          bufferStarvationDelay = (BufferHelper.bufferInfo(v, pos, config.maxBufferHole).end - pos) / playbackRate;\n\n    // First, look to see if we can find a level matching with our avg bandwidth AND that could also guarantee no rebuffering at all\n    let bestLevel = this.findBestLevel(currentLevel,currentFragDuration,avgbw,minAutoLevel,maxAutoLevel,bufferStarvationDelay,config.abrBandWidthFactor,config.abrBandWidthUpFactor,levels);\n    if (bestLevel >= 0) {\n      return bestLevel;\n    } else {\n      logger.trace('rebuffering expected to happen, lets try to find a quality level minimizing the rebuffering');\n      // not possible to get rid of rebuffering ... let's try to find level that will guarantee less than maxStarvationDelay of rebuffering\n      // if no matching level found, logic will return 0\n      let maxStarvationDelay = config.maxStarvationDelay,\n          bwFactor = config.abrBandWidthFactor,\n          bwUpFactor = config.abrBandWidthUpFactor;\n      if (bufferStarvationDelay === 0) {\n        // in case buffer is empty, let's check if previous fragment was loaded to perform a bitrate test\n        let bitrateTestDelay = this.bitrateTestDelay;\n        if (bitrateTestDelay) {\n          // if it is the case, then we need to adjust our max starvation delay using maxLoadingDelay config value\n          // max video loading delay used in  automatic start level selection :\n          // in that mode ABR controller will ensure that video loading time (ie the time to fetch the first fragment at lowest quality level +\n          // the time to fetch the fragment at the appropriate quality level is less than ```maxLoadingDelay``` )\n          maxStarvationDelay = config.maxLoadingDelay - bitrateTestDelay;\n          logger.trace(`bitrate test took ${Math.round(1000*bitrateTestDelay)}ms, set first fragment max fetchDuration to ${Math.round(1000*maxStarvationDelay)} ms`);\n          // don't use conservative factor on bitrate test\n          bwFactor = bwUpFactor = 1;\n        }\n      }\n      bestLevel = this.findBestLevel(currentLevel,currentFragDuration,avgbw,minAutoLevel,maxAutoLevel,bufferStarvationDelay+maxStarvationDelay,bwFactor,bwUpFactor,levels);\n      return Math.max(bestLevel,0);\n    }\n  }\n\n  findBestLevel(currentLevel,currentFragDuration,currentBw,minAutoLevel,maxAutoLevel,maxFetchDuration,bwFactor,bwUpFactor,levels) {\n    for (let i = maxAutoLevel; i >= minAutoLevel; i--) {\n      let levelInfo = levels[i],\n          levelDetails = levelInfo.details,\n          avgDuration = levelDetails ? levelDetails.totalduration/levelDetails.fragments.length : currentFragDuration,\n          live = levelDetails ? levelDetails.live : false,\n          adjustedbw;\n    // follow algorithm captured from stagefright :\n    // https://android.googlesource.com/platform/frameworks/av/+/master/media/libstagefright/httplive/LiveSession.cpp\n    // Pick the highest bandwidth stream below or equal to estimated bandwidth.\n    // consider only 80% of the available bandwidth, but if we are switching up,\n    // be even more conservative (70%) to avoid overestimating and immediately\n    // switching back.\n      if (i <= currentLevel) {\n        adjustedbw = bwFactor * currentBw;\n      } else {\n        adjustedbw = bwUpFactor * currentBw;\n      }\n      const bitrate = levels[i].bitrate,\n            fetchDuration = bitrate * avgDuration / adjustedbw;\n\n    logger.trace(`level/adjustedbw/bitrate/avgDuration/maxFetchDuration/fetchDuration: ${i}/${Math.round(adjustedbw)}/${bitrate}/${avgDuration}/${maxFetchDuration}/${fetchDuration}`);\n      // if adjusted bw is greater than level bitrate AND\n      if (adjustedbw > bitrate &&\n      // fragment fetchDuration unknown OR live stream OR fragment fetchDuration less than max allowed fetch duration, then this level matches\n      // we don't account for max Fetch Duration for live streams, this is to avoid switching down when near the edge of live sliding window ...\n        (!fetchDuration || live || fetchDuration < maxFetchDuration) ) {\n        // as we are looping from highest to lowest, this will return the best achievable quality level\n\n        return i;\n      }\n    }\n    // not enough time budget even with quality level 0 ... rebuffering might happen\n    return -1;\n  }\n\n  set nextAutoLevel(nextLevel) {\n    this._nextAutoLevel = nextLevel;\n  }\n}\n\nexport default AbrController;\n\n",
    "/*\n * Audio Stream Controller\n*/\n\nimport BinarySearch from '../utils/binary-search';\nimport BufferHelper from '../helper/buffer-helper';\nimport Demuxer from '../demux/demuxer';\nimport Event from '../events';\nimport EventHandler from '../event-handler';\nimport LevelHelper from '../helper/level-helper';\nimport TimeRanges from '../utils/timeRanges';\nimport {ErrorTypes, ErrorDetails} from '../errors';\nimport {logger} from '../utils/logger';\n\nconst State = {\n  STOPPED : 'STOPPED',\n  STARTING : 'STARTING',\n  IDLE : 'IDLE',\n  PAUSED : 'PAUSED',\n  KEY_LOADING : 'KEY_LOADING',\n  FRAG_LOADING : 'FRAG_LOADING',\n  FRAG_LOADING_WAITING_RETRY : 'FRAG_LOADING_WAITING_RETRY',\n  WAITING_TRACK : 'WAITING_TRACK',\n  PARSING : 'PARSING',\n  PARSED : 'PARSED',\n  ENDED : 'ENDED',\n  ERROR : 'ERROR'\n};\n\nclass AudioStreamController extends EventHandler {\n\n  constructor(hls) {\n    super(hls,\n      Event.MEDIA_ATTACHED,\n      Event.MEDIA_DETACHING,\n      Event.AUDIO_TRACKS_UPDATED,\n      Event.AUDIO_TRACK_SWITCH,\n      Event.AUDIO_TRACK_LOADED,\n      Event.KEY_LOADED,\n      Event.FRAG_LOADED,\n      Event.FRAG_PARSING_INIT_SEGMENT,\n      Event.FRAG_PARSING_DATA,\n      Event.FRAG_PARSED,\n      Event.ERROR,\n      Event.BUFFER_CREATED,\n      Event.BUFFER_APPENDED,\n      Event.BUFFER_FLUSHED);\n\n    this.config = hls.config;\n    this.audioCodecSwap = false;\n    this.ticks = 0;\n    this.ontick = this.tick.bind(this);\n  }\n\n  destroy() {\n    this.stopLoad();\n    if (this.timer) {\n      clearInterval(this.timer);\n      this.timer = null;\n    }\n    EventHandler.prototype.destroy.call(this);\n    this.state = State.STOPPED;\n  }\n\n  startLoad(startPosition) {\n    if (this.tracks) {\n      var media = this.media, lastCurrentTime = this.lastCurrentTime;\n      this.stopLoad();\n      if (!this.timer) {\n        this.timer = setInterval(this.ontick, 100);\n      }\n      this.fragLoadError = 0;\n      if (media && lastCurrentTime) {\n        logger.log(`configure startPosition @${lastCurrentTime}`);\n        this.state = State.IDLE;\n      } else {\n        this.lastCurrentTime = this.startPosition ? this.startPosition : startPosition;\n        this.state = State.STARTING;\n      }\n      this.nextLoadPosition = this.startPosition = this.lastCurrentTime;\n      this.tick();\n    } else {\n      this.startPosition = startPosition;\n      this.state = State.STOPPED;\n    }\n  }\n\n  stopLoad() {\n    var frag = this.fragCurrent;\n    if (frag) {\n      if (frag.loader) {\n        frag.loader.abort();\n      }\n      this.fragCurrent = null;\n    }\n    this.fragPrevious = null;\n    if (this.demuxer) {\n      this.demuxer.destroy();\n      this.demuxer = null;\n    }\n    this.state = State.STOPPED;\n  }\n\n  tick() {\n    this.ticks++;\n    if (this.ticks === 1) {\n      this.doTick();\n      if (this.ticks > 1) {\n        setTimeout(this.tick, 1);\n      }\n      this.ticks = 0;\n    }\n  }\n\n  doTick() {\n    var pos, track, trackDetails, hls = this.hls, config = hls.config;\n    //logger.log('audioStream:' + this.state);\n    switch(this.state) {\n      case State.ERROR:\n        //don't do anything in error state to avoid breaking further ...\n      case State.PAUSED:\n        //don't do anything in paused state either ...\n        break;\n      case State.STARTING:\n        this.state = State.WAITING_TRACK;\n        this.loadedmetadata = false;\n        break;\n      case State.IDLE:\n        // if video not attached AND\n        // start fragment already requested OR start frag prefetch disable\n        // exit loop\n        // => if media not attached but start frag prefetch is enabled and start frag not requested yet, we will not exit loop\n        if (!this.media &&\n          (this.startFragRequested || !config.startFragPrefetch)) {\n          break;\n        }\n        // determine next candidate fragment to be loaded, based on current position and\n        //  end of buffer position\n        // if we have not yet loaded any fragment, start loading from start position\n        if (this.loadedmetadata) {\n          pos = this.media.currentTime;\n        } else {\n          pos = this.nextLoadPosition;\n        }\n        let media = this.mediaBuffer ? this.mediaBuffer : this.media;\n        var bufferInfo = BufferHelper.bufferInfo(media,pos,config.maxBufferHole),\n            bufferLen = bufferInfo.len,\n            bufferEnd = bufferInfo.end,\n            fragPrevious = this.fragPrevious,\n            maxBufLen = config.maxMaxBufferLength;\n\n        // if buffer length is less than maxBufLen try to load a new fragment\n        if (bufferLen < maxBufLen && this.trackId < this.tracks.length) {\n          trackDetails = this.tracks[this.trackId].details;\n          // if track info not retrieved yet, switch state and wait for track retrieval\n          if (typeof trackDetails === 'undefined') {\n            this.state = State.WAITING_TRACK;\n            break;\n          }\n\n        // we just got done loading the final fragment, check if we need to finalize media stream\n        if (!trackDetails.live && fragPrevious && fragPrevious.sn === trackDetails.endSN) {\n            // if we are not seeking or if we are seeking but everything (almost) til the end is buffered, let's signal eos\n            // we don't compare exactly media.duration === bufferInfo.end as there could be some subtle media duration difference when switching\n            // between different renditions. using half frag duration should help cope with these cases.\n            if (!this.media.seeking || (this.media.duration-bufferEnd) < fragPrevious.duration/2) {\n            // Finalize the media stream\n            this.hls.trigger(Event.BUFFER_EOS,{ type : 'audio'});\n            this.state = State.ENDED;\n            break;\n          }\n        }\n\n          // find fragment index, contiguous with end of buffer position\n          let fragments = trackDetails.fragments,\n              fragLen = fragments.length,\n              start = fragments[0].start,\n              end = fragments[fragLen-1].start + fragments[fragLen-1].duration,\n              frag;\n\n          // if bufferEnd before start of playlist, load first fragment\n          if (bufferEnd < start) {\n            frag = fragments[0];\n          } else {\n            let foundFrag;\n            let maxFragLookUpTolerance = config.maxFragLookUpTolerance;\n            if (bufferEnd < end) {\n              if (bufferEnd > end - maxFragLookUpTolerance) {\n                maxFragLookUpTolerance = 0;\n              }\n              foundFrag = BinarySearch.search(fragments, (candidate) => {\n                // offset should be within fragment boundary - config.maxFragLookUpTolerance\n                // this is to cope with situations like\n                // bufferEnd = 9.991\n                // frag[Ø] : [0,10]\n                // frag[1] : [10,20]\n                // bufferEnd is within frag[0] range ... although what we are expecting is to return frag[1] here\n                    //              frag start               frag start+duration\n                    //                  |-----------------------------|\n                    //              <--->                         <--->\n                    //  ...--------><-----------------------------><---------....\n                    // previous frag         matching fragment         next frag\n                    //  return -1             return 0                 return 1\n                //logger.log(`level/sn/start/end/bufEnd:${level}/${candidate.sn}/${candidate.start}/${(candidate.start+candidate.duration)}/${bufferEnd}`);\n                if ((candidate.start + candidate.duration - maxFragLookUpTolerance) <= bufferEnd) {\n                  return 1;\n                }\n                else if (candidate.start - maxFragLookUpTolerance > bufferEnd) {\n                  return -1;\n                }\n                return 0;\n              });\n            } else {\n              // reach end of playlist\n              foundFrag = fragments[fragLen-1];\n            }\n            if (foundFrag) {\n              frag = foundFrag;\n              start = foundFrag.start;\n              //logger.log('find SN matching with pos:' +  bufferEnd + ':' + frag.sn);\n              if (fragPrevious && frag.level === fragPrevious.level && frag.sn === fragPrevious.sn) {\n                if (frag.sn < trackDetails.endSN) {\n                  frag = fragments[frag.sn + 1 - trackDetails.startSN];\n                  logger.log(`SN just loaded, load next one: ${frag.sn}`);\n                } else {\n                  frag = null;\n                }\n              }\n            }\n          }\n          if(frag) {\n            //logger.log('      loading frag ' + i +',pos/bufEnd:' + pos.toFixed(3) + '/' + bufferEnd.toFixed(3));\n            if ((frag.decryptdata.uri != null) && (frag.decryptdata.key == null)) {\n              logger.log(`Loading key for ${frag.sn} of [${trackDetails.startSN} ,${trackDetails.endSN}],track ${this.trackId}`);\n              this.state = State.KEY_LOADING;\n              hls.trigger(Event.KEY_LOADING, {frag: frag});\n            } else {\n              logger.log(`Loading ${frag.sn} of [${trackDetails.startSN} ,${trackDetails.endSN}],track ${this.trackId}, currentTime:${pos},bufferEnd:${bufferEnd.toFixed(3)}`);\n              // ensure that we are not reloading the same fragments in loop ...\n              if (this.fragLoadIdx !== undefined) {\n                this.fragLoadIdx++;\n              } else {\n                this.fragLoadIdx = 0;\n              }\n              if (frag.loadCounter) {\n                frag.loadCounter++;\n                let maxThreshold = config.fragLoadingLoopThreshold;\n                // if this frag has already been loaded 3 times, and if it has been reloaded recently\n                if (frag.loadCounter > maxThreshold && (Math.abs(this.fragLoadIdx - frag.loadIdx) < maxThreshold)) {\n                  hls.trigger(Event.ERROR, {type: ErrorTypes.MEDIA_ERROR, details: ErrorDetails.FRAG_LOOP_LOADING_ERROR, fatal: false, frag: frag});\n                  return;\n                }\n              } else {\n                frag.loadCounter = 1;\n              }\n              frag.loadIdx = this.fragLoadIdx;\n              this.fragCurrent = frag;\n              this.startFragRequested = true;\n              hls.trigger(Event.FRAG_LOADING, {frag: frag});\n              this.state = State.FRAG_LOADING;\n            }\n          }\n        }\n        break;\n      case State.WAITING_TRACK:\n        track = this.tracks[this.trackId];\n        // check if playlist is already loaded\n        if (track && track.details) {\n          this.state = State.IDLE;\n        }\n        break;\n      case State.FRAG_LOADING_WAITING_RETRY:\n        var now = performance.now();\n        var retryDate = this.retryDate;\n        media = this.media;\n        var isSeeking = media && media.seeking;\n        // if current time is gt than retryDate, or if media seeking let's switch to IDLE state to retry loading\n        if(!retryDate || (now >= retryDate) || isSeeking) {\n          logger.log(`audioStreamController: retryDate reached, switch back to IDLE state`);\n          this.state = State.IDLE;\n        }\n        break;\n      case State.STOPPED:\n      case State.FRAG_LOADING:\n      case State.PARSING:\n      case State.PARSED:\n      case State.ENDED:\n        break;\n      default:\n        break;\n    }\n  }\n\n  onMediaAttached(data) {\n    var media = this.media = this.mediaBuffer = data.media;\n    this.onvseeking = this.onMediaSeeking.bind(this);\n    this.onvended = this.onMediaEnded.bind(this);\n    media.addEventListener('seeking', this.onvseeking);\n    media.addEventListener('ended', this.onvended);\n    let config = this.config;\n    if(this.tracks && config.autoStartLoad) {\n      this.startLoad(config.startPosition);\n    }\n  }\n\n  onMediaDetaching() {\n    var media = this.media;\n    if (media && media.ended) {\n      logger.log('MSE detaching and video ended, reset startPosition');\n      this.startPosition = this.lastCurrentTime = 0;\n    }\n\n    // reset fragment loading counter on MSE detaching to avoid reporting FRAG_LOOP_LOADING_ERROR after error recovery\n    var tracks = this.tracks;\n    if (tracks) {\n      // reset fragment load counter\n        tracks.forEach(track => {\n          if(track.details) {\n            track.details.fragments.forEach(fragment => {\n              fragment.loadCounter = undefined;\n            });\n          }\n      });\n    }\n    // remove video listeners\n    if (media) {\n      media.removeEventListener('seeking', this.onvseeking);\n      media.removeEventListener('ended', this.onvended);\n      this.onvseeking = this.onvseeked  = this.onvended = null;\n    }\n    this.media = null;\n    this.loadedmetadata = false;\n    this.stopLoad();\n  }\n\n  onMediaSeeking() {\n    if (this.state === State.ENDED) {\n        // switch to IDLE state to check for potential new fragment\n        this.state = State.IDLE;\n    }\n    if (this.media) {\n      this.lastCurrentTime = this.media.currentTime;\n    }\n    // avoid reporting fragment loop loading error in case user is seeking several times on same position\n    if (this.fragLoadIdx !== undefined) {\n      this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;\n    }\n    // tick to speed up processing\n    this.tick();\n  }\n\n  onMediaEnded() {\n    // reset startPosition and lastCurrentTime to restart playback @ stream beginning\n    this.startPosition = this.lastCurrentTime = 0;\n  }\n\n\n  onAudioTracksUpdated(data) {\n    logger.log('audio tracks updated');\n    this.tracks = data.audioTracks;\n  }\n\n  onAudioTrackSwitch(data) {\n    // if any URL found on new audio track, it is an alternate audio track\n    var altAudio = !!data.url;\n    this.trackId = data.id;\n    this.state = State.IDLE;\n\n    this.fragCurrent = null;\n    this.state = State.PAUSED;\n    // destroy useless demuxer when switching audio to main\n    if (!altAudio) {\n      if (this.demuxer) {\n        this.demuxer.destroy();\n        this.demuxer = null;\n      }\n    } else {\n      // switching to audio track, start timer if not already started\n      if (!this.timer) {\n        this.timer = setInterval(this.ontick, 100);\n      }\n    }\n    // flush audio source buffer\n    this.hls.trigger(Event.BUFFER_FLUSHING, {startOffset: 0, endOffset: Number.POSITIVE_INFINITY, type : 'audio'});\n    this.tick();\n  }\n\n  onAudioTrackLoaded(data) {\n    var details = data.details,\n        trackId = data.id,\n        track = this.tracks[trackId],\n        duration = details.totalduration;\n\n    logger.log(`track ${trackId} loaded [${details.startSN},${details.endSN}],duration:${duration}`);\n    details.PTSKnown = false;\n    track.details = details;\n\n    // compute start position\n    if (!this.startFragRequested) {\n    // compute start position if set to -1. use it straight away if value is defined\n      if (this.startPosition === -1) {\n        // first, check if start time offset has been set in playlist, if yes, use this value\n        let startTimeOffset = details.startTimeOffset;\n        if(!isNaN(startTimeOffset)) {\n          logger.log(`start time offset found in playlist, adjust startPosition to ${startTimeOffset}`);\n          this.startPosition = startTimeOffset;\n        } else {\n          this.startPosition = 0;\n        }\n      }\n      this.nextLoadPosition = this.startPosition;\n    }\n    // only switch batck to IDLE state if we were waiting for track to start downloading a new fragment\n    if (this.state === State.WAITING_TRACK) {\n      this.state = State.IDLE;\n    }\n    //trigger handler right now\n    this.tick();\n  }\n\n  onKeyLoaded() {\n    if (this.state === State.KEY_LOADING) {\n      this.state = State.IDLE;\n      this.tick();\n    }\n  }\n\n  onFragLoaded(data) {\n    var fragCurrent = this.fragCurrent;\n    if (this.state === State.FRAG_LOADING &&\n        fragCurrent &&\n        data.frag.type === 'audio' &&\n        data.frag.level === fragCurrent.level &&\n        data.frag.sn === fragCurrent.sn) {\n        this.state = State.PARSING;\n        // transmux the MPEG-TS data to ISO-BMFF segments\n        this.stats = data.stats;\n        var track = this.tracks[this.trackId],\n            details = track.details,\n            duration = details.totalduration,\n            start = fragCurrent.start,\n            trackId = fragCurrent.level,\n            sn = fragCurrent.sn,\n            audioCodec = this.config.defaultAudioCodec || track.audioCodec;\n        this.pendingAppending = 0;\n        if(!this.demuxer) {\n          this.demuxer = new Demuxer(this.hls,'audio');\n        }\n        logger.log(`Demuxing ${sn} of [${details.startSN} ,${details.endSN}],track ${trackId}`);\n        // time Offset is accurate if level PTS is known, or if playlist is not sliding (not live)\n        let accurateTimeOffset = details.PTSKnown || !details.live;\n        this.demuxer.push(data.payload, audioCodec, null, start, fragCurrent.cc, trackId, sn, duration, fragCurrent.decryptdata,accurateTimeOffset);\n    }\n    this.fragLoadError = 0;\n  }\n\n  onFragParsingInitSegment(data) {\n    let fragCurrent = this.fragCurrent;\n    if (fragCurrent &&\n        data.id === 'audio' &&\n        data.sn === fragCurrent.sn &&\n        data.level === fragCurrent.level &&\n        this.state === State.PARSING) {\n      let tracks = data.tracks, track;\n\n      // include levelCodec in audio and video tracks\n      track = tracks.audio;\n      if(track) {\n        track.levelCodec = 'mp4a.40.2';\n        track.id = data.id;\n        this.hls.trigger(Event.BUFFER_CODECS,tracks);\n        logger.log(`audio track:audio,container:${track.container},codecs[level/parsed]=[${track.levelCodec}/${track.codec}]`);\n        let initSegment = track.initSegment;\n        if (initSegment) {\n          this.pendingAppending++;\n          this.hls.trigger(Event.BUFFER_APPENDING, {type: 'audio', data: initSegment, parent : 'audio',content : 'initSegment'});\n        }\n        //trigger handler right now\n        this.tick();\n      }\n    }\n  }\n\n  onFragParsingData(data) {\n    let fragCurrent = this.fragCurrent;\n    if (fragCurrent &&\n        data.id === 'audio' &&\n        data.sn === fragCurrent.sn &&\n        data.level === fragCurrent.level &&\n        this.state === State.PARSING) {\n      var track = this.tracks[this.trackId],\n          frag = this.fragCurrent;\n\n      logger.log(`parsed ${data.type},PTS:[${data.startPTS.toFixed(3)},${data.endPTS.toFixed(3)}],DTS:[${data.startDTS.toFixed(3)}/${data.endDTS.toFixed(3)}],nb:${data.nb}`);\n      LevelHelper.updateFragPTSDTS(track.details,frag.sn,data.startPTS,data.endPTS);\n\n      [data.data1, data.data2].forEach(buffer => {\n        if (buffer) {\n          this.pendingAppending++;\n          this.hls.trigger(Event.BUFFER_APPENDING, {type: data.type, data: buffer, parent : 'audio',content : 'data'});\n        }\n      });\n      this.nextLoadPosition = data.endPTS;\n      //trigger handler right now\n      this.tick();\n    }\n  }\n\n  onFragParsed(data) {\n    let fragCurrent = this.fragCurrent;\n    if (fragCurrent &&\n        data.id === 'audio' &&\n        data.sn === fragCurrent.sn &&\n        data.level === fragCurrent.level &&\n        this.state === State.PARSING) {\n      this.stats.tparsed = performance.now();\n      this.state = State.PARSED;\n      this._checkAppendedParsed();\n    }\n  }\n\n\n  onBufferCreated(data) {\n    let audioTrack = data.tracks.audio;\n    if (audioTrack) {\n      this.mediaBuffer = audioTrack.buffer;\n      this.loadedmetadata = true;\n    }\n  }\n\n  onBufferAppended(data) {\n    if (data.parent === 'audio') {\n      switch (this.state) {\n        case State.PARSING:\n        case State.PARSED:\n          this.pendingAppending--;\n          this._checkAppendedParsed();\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  _checkAppendedParsed() {\n    //trigger handler right now\n    if (this.state === State.PARSED && this.pendingAppending === 0)  {\n      var frag = this.fragCurrent, stats = this.stats;\n      if (frag) {\n        this.fragPrevious = frag;\n        stats.tbuffered = performance.now();\n        this.hls.trigger(Event.FRAG_BUFFERED, {stats: stats, frag: frag, id : 'audio'});\n        let media = this.mediaBuffer ? this.mediaBuffer : this.media;\n        logger.log(`audio buffered : ${TimeRanges.toString(media.buffered)}`);\n        this.state = State.IDLE;\n      }\n      this.tick();\n    }\n  }\n\n  onError(data) {\n    let frag = data.frag;\n    // don't handle frag error not related to audio fragment\n    if (frag && frag.type !== 'audio') {\n      return;\n    }\n    switch(data.details) {\n      case ErrorDetails.FRAG_LOAD_ERROR:\n      case ErrorDetails.FRAG_LOAD_TIMEOUT:\n        if(!data.fatal) {\n          var loadError = this.fragLoadError;\n          if(loadError) {\n            loadError++;\n          } else {\n            loadError=1;\n          }\n          let config = this.config;\n          if (loadError <= config.fragLoadingMaxRetry) {\n            this.fragLoadError = loadError;\n            // reset load counter to avoid frag loop loading error\n            frag.loadCounter = 0;\n            // exponential backoff capped to config.fragLoadingMaxRetryTimeout\n            var delay = Math.min(Math.pow(2,loadError-1)*config.fragLoadingRetryDelay,config.fragLoadingMaxRetryTimeout);\n            logger.warn(`audioStreamController: frag loading failed, retry in ${delay} ms`);\n            this.retryDate = performance.now() + delay;\n            // retry loading state\n            this.state = State.FRAG_LOADING_WAITING_RETRY;\n          } else {\n            logger.error(`audioStreamController: ${data.details} reaches max retry, redispatch as fatal ...`);\n            // redispatch same error but with fatal set to true\n            data.fatal = true;\n            this.hls.trigger(Event.ERROR, data);\n            this.state = State.ERROR;\n          }\n        }\n        break;\n      case ErrorDetails.FRAG_LOOP_LOADING_ERROR:\n      case ErrorDetails.AUDIO_TRACK_LOAD_ERROR:\n      case ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT:\n      case ErrorDetails.KEY_LOAD_ERROR:\n      case ErrorDetails.KEY_LOAD_TIMEOUT:\n        //  when in ERROR state, don't switch back to IDLE state in case a non-fatal error is received\n        if(this.state !== State.ERROR) {\n            // if fatal error, stop processing, otherwise move to IDLE to retry loading\n            this.state = data.fatal ? State.ERROR : State.IDLE;\n            logger.warn(`audioStreamController: ${data.details} while loading frag,switch to ${this.state} state ...`);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  onBufferFlushed() {\n    // increase fragment load Index to avoid frag loop loading error after buffer flush\n    this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;\n    // move to IDLE once flush complete. this should trigger new fragment loading\n    this.state = State.IDLE;\n    // reset reference to frag\n    this.fragPrevious = null;\n    this.tick();\n  }\n}\nexport default AudioStreamController;\n\n",
    "/*\n * audio track controller\n*/\n\nimport Event from '../events';\nimport EventHandler from '../event-handler';\nimport {logger} from '../utils/logger';\n\nclass AudioTrackController extends EventHandler {\n\n  constructor(hls) {\n    super(hls, Event.MANIFEST_LOADING,\n               Event.MANIFEST_LOADED,\n               Event.AUDIO_TRACK_LOADED);\n  }\n\n  destroy() {\n    EventHandler.prototype.destroy.call(this);\n  }\n\n  onManifestLoading() {\n    // reset audio tracks on manifest loading\n    this.tracks = [];\n    this.trackId = -1;\n  }\n\n  onManifestLoaded(data) {\n    let tracks = data.audioTracks || [];\n    let defaultFound = false;\n    this.tracks = tracks;\n    this.hls.trigger(Event.AUDIO_TRACKS_UPDATED, {audioTracks : tracks});\n    // loop through available audio tracks and autoselect default if needed\n    let id = 0;\n    tracks.forEach(track => {\n      if(track.default) {\n        this.audioTrack = id;\n        defaultFound = true;\n        return;\n      }\n      id++;\n    });\n    if (defaultFound === false && tracks.length) {\n      logger.log('no default audio track defined, use first audio track as default');\n      this.audioTrack = 0;\n    }\n  }\n\n  onAudioTrackLoaded(data) {\n    if (data.id < this.tracks.length) {\n      logger.log(`audioTrack ${data.id} loaded`);\n      this.tracks[data.id].details = data.details;\n      // check if current playlist is a live playlist\n      if (data.details.live && !this.timer) {\n        // if live playlist we will have to reload it periodically\n        // set reload period to playlist target duration\n        this.timer = setInterval(this.ontick, 1000 * data.details.targetduration);\n      }\n      if (!data.details.live && this.timer) {\n        // playlist is not live and timer is armed : stopping it\n        clearInterval(this.timer);\n        this.timer = null;\n      }\n    }\n  }\n\n  /** get alternate audio tracks list from playlist **/\n  get audioTracks() {\n    return this.tracks;\n  }\n\n  /** get index of the selected audio track (index in audio track lists) **/\n  get audioTrack() {\n   return this.trackId;\n  }\n\n  /** select an audio track, based on its index in audio track lists**/\n  set audioTrack(audioTrackId) {\n    if (this.trackId !== audioTrackId || this.tracks[audioTrackId].details === undefined) {\n      this.setAudioTrackInternal(audioTrackId);\n    }\n  }\n\n setAudioTrackInternal(newId) {\n    // check if level idx is valid\n    if (newId >= 0 && newId < this.tracks.length) {\n      // stopping live reloading timer if any\n      if (this.timer) {\n       clearInterval(this.timer);\n       this.timer = null;\n      }\n      this.trackId = newId;\n      logger.log(`switching to audioTrack ${newId}`);\n      let audioTrack = this.tracks[newId], type = audioTrack.type,url = audioTrack.url;\n      this.hls.trigger(Event.AUDIO_TRACK_SWITCH, {id: newId, type : type, url : url});\n       // check if we need to load playlist for this audio Track\n       let details = audioTrack.details;\n      if (url && (details === undefined || details.live === true)) {\n        // track not retrieved yet, or live playlist we need to (re)load it\n        logger.log(`(re)loading playlist for audioTrack ${newId}`);\n        this.hls.trigger(Event.AUDIO_TRACK_LOADING, {url: url, id: newId});\n      }\n    }\n  }\n}\n\nexport default AudioTrackController;\n",
    "/*\n * Buffer Controller\n*/\n\nimport Event from '../events';\nimport EventHandler from '../event-handler';\nimport {logger} from '../utils/logger';\nimport {ErrorTypes, ErrorDetails} from '../errors';\n\n\nclass BufferController extends EventHandler {\n\n  constructor(hls) {\n    super(hls,\n      Event.MEDIA_ATTACHING,\n      Event.MEDIA_DETACHING,\n      Event.MANIFEST_PARSED,\n      Event.BUFFER_RESET,\n      Event.BUFFER_APPENDING,\n      Event.BUFFER_CODECS,\n      Event.BUFFER_EOS,\n      Event.BUFFER_FLUSHING,\n      Event.LEVEL_UPDATED);\n\n    // the value that we have set mediasource.duration to\n    // (the actual duration may be tweaked slighly by the browser)\n    this._msDuration = null;\n    // the value that we want to set mediaSource.duration to\n    this._levelDuration = null;\n\n    // Source Buffer listeners\n    this.onsbue = this.onSBUpdateEnd.bind(this);\n    this.onsbe  = this.onSBUpdateError.bind(this);\n    this.pendingTracks = {};\n  }\n\n  destroy() {\n    EventHandler.prototype.destroy.call(this);\n  }\n\n  onManifestParsed(data) {\n    let audioExpected = data.audio,\n        videoExpected = data.video,\n        sourceBufferNb = 0;\n    // in case of alt audio 2 BUFFER_CODECS events will be triggered, one per stream controller\n    // sourcebuffers will be created all at once when the expected nb of tracks will be reached\n    // in case alt audio is not used, only one BUFFER_CODEC event will be fired from main stream controller\n    // it will contain the expected nb of source buffers, no need to compute it\n    if (data.altAudio && (audioExpected || videoExpected)) {\n      sourceBufferNb = (audioExpected ? 1 : 0) + (videoExpected ? 1 : 0);\n      logger.log(`${sourceBufferNb} sourceBuffer(s) expected`);\n    }\n    this.sourceBufferNb = sourceBufferNb;\n  }\n\n  onMediaAttaching(data) {\n    let media = this.media = data.media;\n    if (media) {\n      // setup the media source\n      var ms = this.mediaSource = new MediaSource();\n      //Media Source listeners\n      this.onmso = this.onMediaSourceOpen.bind(this);\n      this.onmse = this.onMediaSourceEnded.bind(this);\n      this.onmsc = this.onMediaSourceClose.bind(this);\n      ms.addEventListener('sourceopen', this.onmso);\n      ms.addEventListener('sourceended', this.onmse);\n      ms.addEventListener('sourceclose', this.onmsc);\n      // link video and media Source\n      media.src = URL.createObjectURL(ms);\n    }\n  }\n\n  onMediaDetaching() {\n    logger.log('media source detaching');\n    var ms = this.mediaSource;\n    if (ms) {\n      if (ms.readyState === 'open') {\n        try {\n          // endOfStream could trigger exception if any sourcebuffer is in updating state\n          // we don't really care about checking sourcebuffer state here,\n          // as we are anyway detaching the MediaSource\n          // let's just avoid this exception to propagate\n          ms.endOfStream();\n        } catch(err) {\n          logger.warn(`onMediaDetaching:${err.message} while calling endOfStream`);\n        }\n      }\n      ms.removeEventListener('sourceopen', this.onmso);\n      ms.removeEventListener('sourceended', this.onmse);\n      ms.removeEventListener('sourceclose', this.onmsc);\n\n      // Detach properly the MediaSource from the HTMLMediaElement as\n      // suggested in https://github.com/w3c/media-source/issues/53.\n      if (this.media) {\n        this.media.removeAttribute('src');\n        this.media.load();\n      }\n\n      this.mediaSource = null;\n      this.media = null;\n      this.pendingTracks = {};\n      this.sourceBuffer = {};\n      this.flushRange = [];\n      this.segments = [];\n      this.appended = 0;\n    }\n    this.onmso = this.onmse = this.onmsc = null;\n    this.hls.trigger(Event.MEDIA_DETACHED);\n  }\n\n  onMediaSourceOpen() {\n    logger.log('media source opened');\n    this.hls.trigger(Event.MEDIA_ATTACHED, { media : this.media });\n    let mediaSource = this.mediaSource;\n    if (mediaSource) {\n      // once received, don't listen anymore to sourceopen event\n      mediaSource.removeEventListener('sourceopen', this.onmso);\n    }\n    this.checkPendingTracks();\n  }\n\n  checkPendingTracks() {\n    // if any buffer codecs pending, check if we have enough to create sourceBuffers\n    let pendingTracks = this.pendingTracks,\n        pendingTracksNb = Object.keys(pendingTracks).length;\n    // if any pending tracks and (if nb of pending tracks gt or equal than expected nb or if unknown expected nb)\n    if (pendingTracksNb && (\n        this.sourceBufferNb <= pendingTracksNb ||\n        this.sourceBufferNb === 0)) {\n      // ok, let's create them now !\n      this.createSourceBuffers(pendingTracks);\n      this.pendingTracks = {};\n      // append any pending segments now !\n      this.doAppending();\n    }\n  }\n\n  onMediaSourceClose() {\n    logger.log('media source closed');\n  }\n\n  onMediaSourceEnded() {\n    logger.log('media source ended');\n  }\n\n\n  onSBUpdateEnd() {\n\n    if (this._needsFlush) {\n      this.doFlush();\n    }\n\n    if (this._needsEos) {\n      this.checkEos();\n    }\n    this.appending = false;\n    this.hls.trigger(Event.BUFFER_APPENDED, { parent : this.parent});\n\n    // don't append in flushing mode\n    if (!this._needsFlush) {\n      this.doAppending();\n    }\n\n    this.updateMediaElementDuration();\n  }\n\n  onSBUpdateError(event) {\n    logger.error(`sourceBuffer error:${event}`);\n    // according to http://www.w3.org/TR/media-source/#sourcebuffer-append-error\n    // this error might not always be fatal (it is fatal if decode error is set, in that case\n    // it will be followed by a mediaElement error ...)\n    this.hls.trigger(Event.ERROR, {type: ErrorTypes.MEDIA_ERROR, details: ErrorDetails.BUFFER_APPENDING_ERROR, fatal: false});\n    // we don't need to do more than that, as accordin to the spec, updateend will be fired just after\n  }\n\n  onBufferReset() {\n    var sourceBuffer = this.sourceBuffer;\n    for(var type in sourceBuffer) {\n      var sb = sourceBuffer[type];\n      try {\n        this.mediaSource.removeSourceBuffer(sb);\n        sb.removeEventListener('updateend', this.onsbue);\n        sb.removeEventListener('error', this.onsbe);\n      } catch(err) {\n      }\n    }\n    this.sourceBuffer = {};\n    this.flushRange = [];\n    this.segments = [];\n    this.appended = 0;\n  }\n\n  onBufferCodecs(tracks) {\n    // if source buffer(s) not created yet, appended buffer tracks in this.pendingTracks\n    // if sourcebuffers already created, do nothing ...\n    if (Object.keys(this.sourceBuffer).length === 0) {\n      for (var trackName in tracks) { this.pendingTracks[trackName] = tracks[trackName]; }\n      let mediaSource = this.mediaSource;\n      if (mediaSource && mediaSource.readyState === 'open') {\n        // try to create sourcebuffers if mediasource opened\n        this.checkPendingTracks();\n      }\n    }\n  }\n\n\n  createSourceBuffers(tracks) {\n    var sourceBuffer = this.sourceBuffer,mediaSource = this.mediaSource;\n\n    for (let trackName in tracks) {\n      if(!sourceBuffer[trackName]) {\n        let track = tracks[trackName];\n        // use levelCodec as first priority\n        let codec = track.levelCodec || track.codec;\n        let mimeType = `${track.container};codecs=${codec}`;\n        logger.log(`creating sourceBuffer(${mimeType})`);\n        try {\n          let sb = sourceBuffer[trackName] = mediaSource.addSourceBuffer(mimeType);\n          sb.addEventListener('updateend', this.onsbue);\n          sb.addEventListener('error', this.onsbe);\n          track.buffer = sb;\n        } catch(err) {\n          logger.error(`error while trying to add sourceBuffer:${err.message}`);\n          this.hls.trigger(Event.ERROR, {type: ErrorTypes.MEDIA_ERROR, details: ErrorDetails.BUFFER_ADD_CODEC_ERROR, fatal: false, err: err, mimeType : mimeType});\n        }\n      }\n    }\n    this.hls.trigger(Event.BUFFER_CREATED, { tracks : tracks } );\n  }\n\n  onBufferAppending(data) {\n    if (!this._needsFlush) {\n      if (!this.segments) {\n        this.segments = [ data ];\n      } else {\n        this.segments.push(data);\n      }\n      this.doAppending();\n    }\n  }\n\n  onBufferAppendFail(data) {\n    logger.error(`sourceBuffer error:${data.event}`);\n    // according to http://www.w3.org/TR/media-source/#sourcebuffer-append-error\n    // this error might not always be fatal (it is fatal if decode error is set, in that case\n    // it will be followed by a mediaElement error ...)\n    this.hls.trigger(Event.ERROR, {type: ErrorTypes.MEDIA_ERROR, details: ErrorDetails.BUFFER_APPENDING_ERROR, fatal: false, frag: this.fragCurrent});\n  }\n\n  // on BUFFER_EOS mark matching sourcebuffer(s) as ended and trigger checkEos()\n  onBufferEos(data) {\n    var sb = this.sourceBuffer;\n    let dataType = data.type;\n    for(let type in sb) {\n      if (!dataType || type === dataType) {\n        if (!sb[type].ended) {\n          sb[type].ended = true;\n          logger.log(`${type} sourceBuffer now EOS`);\n        }\n      }\n    }\n    this.checkEos();\n  }\n\n // if all source buffers are marked as ended, signal endOfStream() to MediaSource.\n checkEos() {\n    var sb = this.sourceBuffer, mediaSource = this.mediaSource;\n    if (!mediaSource || mediaSource.readyState !== 'open') {\n      this._needsEos = false;\n      return;\n    }\n    for(let type in sb) {\n      if (!sb[type].ended) {\n        return;\n      }\n      if(sb[type].updating) {\n        this._needsEos = true;\n        return;\n      }\n    }\n    logger.log('all media data available, signal endOfStream() to MediaSource and stop loading fragment');\n    //Notify the media element that it now has all of the media data\n    mediaSource.endOfStream();\n    this._needsEos = false;\n }\n\n\n  onBufferFlushing(data) {\n    this.flushRange.push({start: data.startOffset, end: data.endOffset, type : data.type});\n    // attempt flush immediatly\n    this.flushBufferCounter = 0;\n    this.doFlush();\n  }\n\n  onLevelUpdated(event) {\n    let details = event.details;\n    if (details.fragments.length === 0) {\n      return;\n    }\n    this._levelDuration = details.totalduration + details.fragments[0].start;\n    this.updateMediaElementDuration();\n  }\n\n  // https://github.com/dailymotion/hls.js/issues/355\n  updateMediaElementDuration() {\n    let media = this.media,\n        mediaSource = this.mediaSource,\n        sourceBuffer = this.sourceBuffer,\n        levelDuration = this._levelDuration;\n    if (levelDuration === null || !media || !mediaSource || !sourceBuffer || media.readyState === 0 || mediaSource.readyState !== 'open') {\n      return;\n    }\n    for (let type in sourceBuffer) {\n      if (sourceBuffer[type].updating) {\n        // can't set duration whilst a buffer is updating\n        return;\n      }\n    }\n    if (this._msDuration === null) {\n      // initialise to the value that the media source is reporting\n      this._msDuration = mediaSource.duration;\n    }\n    // levelDuration was the last value we set.\n    // not using mediaSource.duration as the browser may tweak this value\n    // only update mediasource duration if its value increase, this is to avoid\n    // flushing already buffered portion when switching between quality level\n    if (levelDuration > this._msDuration && levelDuration > media.duration) {\n      logger.log(`Updating mediasource duration to ${levelDuration.toFixed(3)}`);\n      this._msDuration = mediaSource.duration = levelDuration;\n    }\n  }\n\n  doFlush() {\n    // loop through all buffer ranges to flush\n    while(this.flushRange.length) {\n      var range = this.flushRange[0];\n      // flushBuffer will abort any buffer append in progress and flush Audio/Video Buffer\n      if (this.flushBuffer(range.start, range.end, range.type)) {\n        // range flushed, remove from flush array\n        this.flushRange.shift();\n        this.flushBufferCounter = 0;\n      } else {\n        this._needsFlush = true;\n        // avoid looping, wait for SB update end to retrigger a flush\n        return;\n      }\n    }\n    if (this.flushRange.length === 0) {\n      // everything flushed\n      this._needsFlush = false;\n\n      // let's recompute this.appended, which is used to avoid flush looping\n      var appended = 0;\n      var sourceBuffer = this.sourceBuffer;\n      for (var type in sourceBuffer) {\n        appended += sourceBuffer[type].buffered.length;\n      }\n      this.appended = appended;\n      this.hls.trigger(Event.BUFFER_FLUSHED);\n    }\n  }\n\n  doAppending() {\n    var hls = this.hls, sourceBuffer = this.sourceBuffer, segments = this.segments;\n    if (Object.keys(sourceBuffer).length) {\n      if (this.media.error) {\n        this.segments = [];\n        logger.error('trying to append although a media error occured, flush segment and abort');\n        return;\n      }\n      if (this.appending) {\n        //logger.log(`sb appending in progress`);\n        return;\n      }\n      if (segments && segments.length) {\n        var segment = segments.shift();\n        try {\n          let type = segment.type;\n          if(sourceBuffer[type]) {\n            // reset sourceBuffer ended flag before appending segment\n            sourceBuffer[type].ended = false;\n            //logger.log(`appending ${segment.content} ${segment.type} SB, size:${segment.data.length}, ${segment.parent}`);\n            this.parent = segment.parent;\n            sourceBuffer[type].appendBuffer(segment.data);\n            this.appendError = 0;\n            this.appended++;\n            this.appending = true;\n          } else {\n            // in case we don't have any source buffer matching with this segment type,\n            // it means that Mediasource fails to create sourcebuffer\n            // discard this segment, and trigger update end\n            this.onSBUpdateEnd();\n          }\n        } catch(err) {\n          // in case any error occured while appending, put back segment in segments table\n          logger.error(`error while trying to append buffer:${err.message}`);\n          segments.unshift(segment);\n          var event = {type: ErrorTypes.MEDIA_ERROR};\n          if(err.code !== 22) {\n            if (this.appendError) {\n              this.appendError++;\n            } else {\n              this.appendError = 1;\n            }\n            event.details = ErrorDetails.BUFFER_APPEND_ERROR;\n            event.frag = this.fragCurrent;\n            /* with UHD content, we could get loop of quota exceeded error until\n              browser is able to evict some data from sourcebuffer. retrying help recovering this\n            */\n            if (this.appendError > hls.config.appendErrorMaxRetry) {\n              logger.log(`fail ${hls.config.appendErrorMaxRetry} times to append segment in sourceBuffer`);\n              segments = [];\n              event.fatal = true;\n              hls.trigger(Event.ERROR, event);\n              return;\n            } else {\n              event.fatal = false;\n              hls.trigger(Event.ERROR, event);\n            }\n          } else {\n            // QuotaExceededError: http://www.w3.org/TR/html5/infrastructure.html#quotaexceedederror\n            // let's stop appending any segments, and report BUFFER_FULL_ERROR error\n            this.segments = [];\n            event.details = ErrorDetails.BUFFER_FULL_ERROR;\n            hls.trigger(Event.ERROR,event);\n            return;\n          }\n        }\n      }\n    }\n  }\n\n  /*\n    flush specified buffered range,\n    return true once range has been flushed.\n    as sourceBuffer.remove() is asynchronous, flushBuffer will be retriggered on sourceBuffer update end\n  */\n  flushBuffer(startOffset, endOffset, typeIn) {\n    var sb, i, bufStart, bufEnd, flushStart, flushEnd, sourceBuffer = this.sourceBuffer;\n    if (Object.keys(sourceBuffer).length) {\n      logger.log('flushBuffer,pos/start/end: ' + this.media.currentTime + '/' + startOffset + '/' + endOffset);\n      // safeguard to avoid infinite looping : don't try to flush more than the nb of appended segments\n      if (this.flushBufferCounter < this.appended) {\n        for (var type in sourceBuffer) {\n          // check if sourcebuffer type is defined (typeIn): if yes, let's only flush this one\n          // if no, let's flush all sourcebuffers\n          if (typeIn && type !== typeIn) {\n            continue;\n          }\n          sb = sourceBuffer[type];\n          // we are going to flush buffer, mark source buffer as 'not ended'\n          sb.ended = false;\n          if (!sb.updating) {\n            for (i = 0; i < sb.buffered.length; i++) {\n              bufStart = sb.buffered.start(i);\n              bufEnd = sb.buffered.end(i);\n              // workaround firefox not able to properly flush multiple buffered range.\n              if (navigator.userAgent.toLowerCase().indexOf('firefox') !== -1 && endOffset === Number.POSITIVE_INFINITY) {\n                flushStart = startOffset;\n                flushEnd = endOffset;\n              } else {\n                flushStart = Math.max(bufStart, startOffset);\n                flushEnd = Math.min(bufEnd, endOffset);\n              }\n              /* sometimes sourcebuffer.remove() does not flush\n                 the exact expected time range.\n                 to avoid rounding issues/infinite loop,\n                 only flush buffer range of length greater than 500ms.\n              */\n              if (Math.min(flushEnd,bufEnd) - flushStart > 0.5 ) {\n                this.flushBufferCounter++;\n                logger.log(`flush ${type} [${flushStart},${flushEnd}], of [${bufStart},${bufEnd}], pos:${this.media.currentTime}`);\n                sb.remove(flushStart, flushEnd);\n                return false;\n              }\n            }\n          } else {\n            //logger.log('abort ' + type + ' append in progress');\n            // this will abort any appending in progress\n            //sb.abort();\n            logger.warn('cannot flush, sb updating in progress');\n            return false;\n          }\n        }\n      } else {\n        logger.warn('abort flushing too many retries');\n      }\n      logger.log('buffer flushed');\n    }\n    // everything flushed !\n    return true;\n  }\n}\n\nexport default BufferController;\n",
    "/*\n * cap stream level to media size dimension controller\n*/\n\nimport Event from '../events';\nimport EventHandler from '../event-handler';\n\nclass CapLevelController extends EventHandler {\n\tconstructor(hls) {\n    super(hls,\n      Event.FPS_DROP_LEVEL_CAPPING,\n      Event.MEDIA_ATTACHING,\n      Event.MANIFEST_PARSED);   \n\t}\n\t\n\tdestroy() {\n    if (this.hls.config.capLevelToPlayerSize) {\n      this.media = this.restrictedLevels = null;\n      this.autoLevelCapping = Number.POSITIVE_INFINITY;\n      if (this.timer) {\n        this.timer = clearInterval(this.timer);\n      }\n    }\n  }\n\t\n  onFpsDropLevelCapping(data) {\n    if (!this.restrictedLevels) {\n      this.restrictedLevels = [];\n    }\n    if (!this.isLevelRestricted(data.droppedLevel)) {\n      this.restrictedLevels.push(data.droppedLevel);\n    }\n  }\n  \n\tonMediaAttaching(data) {\n    this.media = data.media instanceof HTMLVideoElement ? data.media : null;  \n  }\n\n  onManifestParsed(data) {\n    if (this.hls.config.capLevelToPlayerSize) {\n      this.autoLevelCapping = Number.POSITIVE_INFINITY;\n      this.levels = data.levels;\n      this.hls.firstLevel = this.getMaxLevel(data.firstLevel);\n      clearInterval(this.timer);\n      this.timer = setInterval(this.detectPlayerSize.bind(this), 1000);\n      this.detectPlayerSize();\n    }\n  }\n  \n  detectPlayerSize() {\n    if (this.media) {\n      let levelsLength = this.levels ? this.levels.length : 0;\n      if (levelsLength) {\n        this.hls.autoLevelCapping = this.getMaxLevel(levelsLength - 1);\n        if (this.hls.autoLevelCapping > this.autoLevelCapping) {\n          // if auto level capping has a higher value for the previous one, flush the buffer using nextLevelSwitch\n          // usually happen when the user go to the fullscreen mode.\n          this.hls.streamController.nextLevelSwitch();\n        }\n        this.autoLevelCapping = this.hls.autoLevelCapping;        \n      }  \n    }\n  }\n  \n  /*\n  * returns level should be the one with the dimensions equal or greater than the media (player) dimensions (so the video will be downscaled)\n  */\n  getMaxLevel(capLevelIndex) {\n    let result = 0,\n        i,\n        level,\n        mWidth = this.mediaWidth,\n        mHeight = this.mediaHeight,\n        lWidth = 0,\n        lHeight = 0;\n        \n    for (i = 0; i <= capLevelIndex; i++) {\n      level = this.levels[i];\n      if (this.isLevelRestricted(i)) {\n        break;\n      }\n      result = i;\n      lWidth = level.width;\n      lHeight = level.height;\n      if (mWidth <= lWidth || mHeight <= lHeight) {\n        break;\n      }\n    }  \n    return result;\n  }\n  \n  isLevelRestricted(level) {\n    return (this.restrictedLevels && this.restrictedLevels.indexOf(level) !== -1) ? true : false;\n  }\n  \n  get contentScaleFactor() {\n    let pixelRatio = 1;\n    try {\n      pixelRatio =  window.devicePixelRatio;\n    } catch(e) {}\n    return pixelRatio;\n  }\n  \n  get mediaWidth() {\n    let width;\n    if (this.media) {\n      width = this.media.width || this.media.clientWidth || this.media.offsetWidth;\n      width *= this.contentScaleFactor;\n    }\n    return width;\n  }\n  \n  get mediaHeight() {\n    let height;\n    if (this.media) {\n      height = this.media.height || this.media.clientHeight || this.media.offsetHeight;\n      height *= this.contentScaleFactor; \n    }\n    return height;\n  }\n}\n\nexport default CapLevelController;",
    "/*\n * EWMA Bandwidth Estimator\n *  - heavily inspired from shaka-player\n * Tracks bandwidth samples and estimates available bandwidth.\n * Based on the minimum of two exponentially-weighted moving averages with\n * different half-lives.\n */\n\nimport EWMA from '../utils/ewma';\n\n\nclass EwmaBandWidthEstimator {\n\n  constructor(hls,slow,fast,defaultEstimate) {\n    this.hls = hls;\n    this.defaultEstimate_ = defaultEstimate;\n    this.minWeight_ = 0.001;\n    this.minDelayMs_ = 50;\n    this.slow_ = new EWMA(slow);\n    this.fast_ = new EWMA(fast);\n  }\n\n  sample(durationMs,numBytes) {\n    durationMs = Math.max(durationMs, this.minDelayMs_);\n    var bandwidth = 8000* numBytes / durationMs,\n    //console.log('instant bw:'+ Math.round(bandwidth));\n    // we weight sample using loading duration....\n        weight = durationMs / 1000;\n    this.fast_.sample(weight,bandwidth);\n    this.slow_.sample(weight,bandwidth);\n  }\n\n  canEstimate() {\n    let fast = this.fast_;\n    return (fast && fast.getTotalWeight() >= this.minWeight_);\n  }\n\n\n  getEstimate() {\n    if (this.canEstimate()) {\n      //console.log('slow estimate:'+ Math.round(this.slow_.getEstimate()));\n      //console.log('fast estimate:'+ Math.round(this.fast_.getEstimate()));\n      // Take the minimum of these two estimates.  This should have the effect of\n      // adapting down quickly, but up more slowly.\n      return Math.min(this.fast_.getEstimate(),this.slow_.getEstimate());\n    } else {\n      return this.defaultEstimate_;\n    }\n  }\n\n  destroy() {\n  }\n}\nexport default EwmaBandWidthEstimator;\n\n",
    "/*\n * FPS Controller\n*/\n\nimport Event from '../events';\nimport EventHandler from '../event-handler';\nimport {logger} from '../utils/logger';\n\nclass FPSController extends EventHandler{\n\n  constructor(hls) {\n    super(hls, Event.MEDIA_ATTACHING);\n  }\n\n  destroy() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n    this.isVideoPlaybackQualityAvailable = false;\n  }\n  \n  onMediaAttaching(data) {\n    if (this.hls.config.capLevelOnFPSDrop) {\n      this.video = data.media instanceof HTMLVideoElement ? data.media : null;\n      if (typeof this.video.getVideoPlaybackQuality === 'function') {\n        this.isVideoPlaybackQualityAvailable = true;\n      }\n      clearInterval(this.timer);\n      this.timer = setInterval(this.checkFPSInterval.bind(this), this.hls.config.fpsDroppedMonitoringPeriod);\n    } \n  }\n  \n  checkFPS(video, decodedFrames, droppedFrames) {\n    let currentTime = performance.now();\n    if (decodedFrames) {\n      if (this.lastTime) {\n        let currentPeriod = currentTime - this.lastTime,\n            currentDropped = droppedFrames - this.lastDroppedFrames,\n            currentDecoded = decodedFrames - this.lastDecodedFrames,\n            droppedFPS = 1000 * currentDropped / currentPeriod;\n        this.hls.trigger(Event.FPS_DROP, {currentDropped: currentDropped, currentDecoded: currentDecoded, totalDroppedFrames: droppedFrames});\n        if (droppedFPS > 0) {\n          //logger.log('checkFPS : droppedFPS/decodedFPS:' + droppedFPS/(1000 * currentDecoded / currentPeriod));\n          if (currentDropped > this.hls.config.fpsDroppedMonitoringThreshold * currentDecoded) {\n            let currentLevel = this.hls.currentLevel;\n            logger.warn('drop FPS ratio greater than max allowed value for currentLevel: ' + currentLevel);\n            if (currentLevel > 0 && (this.hls.autoLevelCapping === -1 || this.hls.autoLevelCapping >= currentLevel)) {\n              currentLevel = currentLevel - 1;\n              this.hls.trigger(Event.FPS_DROP_LEVEL_CAPPING, {level: currentLevel, droppedLevel: this.hls.currentLevel});\n              this.hls.autoLevelCapping = currentLevel;\n              this.hls.streamController.nextLevelSwitch();\n            }\n          }\n        }\n      }\n      this.lastTime = currentTime;\n      this.lastDroppedFrames = droppedFrames;\n      this.lastDecodedFrames = decodedFrames;\n    }\n  }\n  \n  checkFPSInterval() {\n    if (this.video) {\n      if (this.isVideoPlaybackQualityAvailable) {\n        let videoPlaybackQuality = this.video.getVideoPlaybackQuality();\n        this.checkFPS(this.video, videoPlaybackQuality.totalVideoFrames, videoPlaybackQuality.droppedVideoFrames);\n      } else {\n        this.checkFPS(this.video, this.video.webkitDecodedFrameCount, this.video.webkitDroppedFrameCount);  \n      }\n    }\n  } \n}\n\nexport default FPSController;\n\n",
    "/*\n * Level Controller\n*/\n\nimport Event from '../events';\nimport EventHandler from '../event-handler';\nimport {logger} from '../utils/logger';\nimport {ErrorTypes, ErrorDetails} from '../errors';\nimport BufferHelper from '../helper/buffer-helper';\n\nclass LevelController extends EventHandler {\n\n  constructor(hls) {\n    super(hls,\n      Event.MANIFEST_LOADED,\n      Event.LEVEL_LOADED,\n      Event.ERROR);\n    this.ontick = this.tick.bind(this);\n    this._manualLevel = this._autoLevelCapping = -1;\n  }\n\n  destroy() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n      this.timer = null;\n    }\n    this._manualLevel = -1;\n  }\n\n  startLoad() {\n    this.canload = true;\n    // speed up live playlist refresh if timer exists\n    if (this.timer) {\n      this.tick();\n    }\n  }\n\n  stopLoad() {\n    this.canload = false;\n  }\n\n  onManifestLoaded(data) {\n    var levels0 = [], levels = [], bitrateStart, i, bitrateSet = {}, videoCodecFound = false, audioCodecFound = false, hls = this.hls;\n\n    // regroup redundant level together\n    data.levels.forEach(level => {\n      if(level.videoCodec) {\n        videoCodecFound = true;\n      }\n      if(level.audioCodec || (level.attrs && level.attrs.AUDIO)) {\n        audioCodecFound = true;\n      }\n      var redundantLevelId = bitrateSet[level.bitrate];\n      if (redundantLevelId === undefined) {\n        bitrateSet[level.bitrate] = levels0.length;\n        level.url = [level.url];\n        level.urlId = 0;\n        levels0.push(level);\n      } else {\n        levels0[redundantLevelId].url.push(level.url);\n      }\n    });\n\n    // remove audio-only level if we also have levels with audio+video codecs signalled\n    if(videoCodecFound && audioCodecFound) {\n      levels0.forEach(level => {\n        if(level.videoCodec) {\n          levels.push(level);\n        }\n      });\n    } else {\n      levels = levels0;\n    }\n\n    // only keep level with supported audio/video codecs\n    levels = levels.filter(function(level) {\n      var checkSupportedAudio = function(codec) { return MediaSource.isTypeSupported(`audio/mp4;codecs=${codec}`);};\n      var checkSupportedVideo = function(codec) { return MediaSource.isTypeSupported(`video/mp4;codecs=${codec}`);};\n      var audioCodec = level.audioCodec, videoCodec = level.videoCodec;\n\n      return (!audioCodec || checkSupportedAudio(audioCodec)) &&\n             (!videoCodec || checkSupportedVideo(videoCodec));\n    });\n\n    if(levels.length) {\n      // start bitrate is the first bitrate of the manifest\n      bitrateStart = levels[0].bitrate;\n      // sort level on bitrate\n      levels.sort(function (a, b) {\n        return a.bitrate - b.bitrate;\n      });\n      this._levels = levels;\n      // find index of first level in sorted levels\n      for (i = 0; i < levels.length; i++) {\n        if (levels[i].bitrate === bitrateStart) {\n          this._firstLevel = i;\n          logger.log(`manifest loaded,${levels.length} level(s) found, first bitrate:${bitrateStart}`);\n          break;\n        }\n      }\n      hls.trigger(Event.MANIFEST_PARSED, {levels: this._levels, firstLevel: this._firstLevel, stats: data.stats, audio : audioCodecFound, video : videoCodecFound, altAudio : data.audioTracks.length > 0});\n    } else {\n      hls.trigger(Event.ERROR, {type: ErrorTypes.MEDIA_ERROR, details: ErrorDetails.MANIFEST_INCOMPATIBLE_CODECS_ERROR, fatal: true, url: hls.url, reason: 'no level with compatible codecs found in manifest'});\n    }\n    return;\n  }\n\n  get levels() {\n    return this._levels;\n  }\n\n  get level() {\n    return this._level;\n  }\n\n  set level(newLevel) {\n    let levels = this._levels;\n    if (levels && levels.length > newLevel) {\n      if (this._level !== newLevel || levels[newLevel].details === undefined) {\n        this.setLevelInternal(newLevel);\n      }\n    }\n  }\n\n setLevelInternal(newLevel) {\n    let levels = this._levels;\n    // check if level idx is valid\n    if (newLevel >= 0 && newLevel < levels.length) {\n      // stopping live reloading timer if any\n      if (this.timer) {\n       clearTimeout(this.timer);\n       this.timer = null;\n      }\n      if (this._level !== newLevel) {\n        logger.log(`switching to level ${newLevel}`);\n        this._level = newLevel;\n      }\n      this.hls.trigger(Event.LEVEL_SWITCH, {level: newLevel});\n      var level = levels[newLevel], levelDetails = level.details;\n       // check if we need to load playlist for this level\n      if (!levelDetails || levelDetails.live === true) {\n        // level not retrieved yet, or live playlist we need to (re)load it\n        var urlId = level.urlId;\n        this.hls.trigger(Event.LEVEL_LOADING, {url: level.url[urlId], level: newLevel, id: urlId});\n      }\n    } else {\n      // invalid level id given, trigger error\n      this.hls.trigger(Event.ERROR, {type : ErrorTypes.OTHER_ERROR, details: ErrorDetails.LEVEL_SWITCH_ERROR, level: newLevel, fatal: false, reason: 'invalid level idx'});\n    }\n }\n\n  get manualLevel() {\n    return this._manualLevel;\n  }\n\n  set manualLevel(newLevel) {\n    this._manualLevel = newLevel;\n    if (this._startLevel === undefined) {\n      this._startLevel = newLevel;\n    }\n    if (newLevel !== -1) {\n      this.level = newLevel;\n    }\n  }\n\n  get firstLevel() {\n    return this._firstLevel;\n  }\n\n  set firstLevel(newLevel) {\n    this._firstLevel = newLevel;\n  }\n\n  get startLevel() {\n    // hls.startLevel takes precedence over config.startLevel\n    // if none of these values are defined, fallback on this._firstLevel (first quality level appearing in variant manifest)\n    if (this._startLevel === undefined) {\n      let configStartLevel = this.hls.config.startLevel;\n      if (configStartLevel !== undefined) {\n        return configStartLevel;\n      } else {\n        return this._firstLevel;\n      }\n    } else {\n      return this._startLevel;\n    }\n  }\n\n  set startLevel(newLevel) {\n    this._startLevel = newLevel;\n  }\n\n  onError(data) {\n    if(data.fatal) {\n      return;\n    }\n\n    let details = data.details, hls = this.hls, levelId, level, levelError = false;\n    // try to recover not fatal errors\n    switch(details) {\n      case ErrorDetails.FRAG_LOAD_ERROR:\n      case ErrorDetails.FRAG_LOAD_TIMEOUT:\n      case ErrorDetails.FRAG_LOOP_LOADING_ERROR:\n      case ErrorDetails.KEY_LOAD_ERROR:\n      case ErrorDetails.KEY_LOAD_TIMEOUT:\n         levelId = data.frag.level;\n         break;\n      case ErrorDetails.LEVEL_LOAD_ERROR:\n      case ErrorDetails.LEVEL_LOAD_TIMEOUT:\n        levelId = data.context.level;\n        levelError = true;\n        break;\n      default:\n        break;\n    }\n    /* try to switch to a redundant stream if any available.\n     * if no redundant stream available, emergency switch down (if in auto mode and current level not 0)\n     * otherwise, we cannot recover this network error ...\n     */\n    if (levelId !== undefined) {\n      level = this._levels[levelId];\n      if (level.urlId < (level.url.length - 1)) {\n        level.urlId++;\n        level.details = undefined;\n        logger.warn(`level controller,${details} for level ${levelId}: switching to redundant stream id ${level.urlId}`);\n      } else {\n        // we could try to recover if in auto mode and current level not lowest level (0)\n        let recoverable = ((this._manualLevel === -1) && levelId);\n        if (recoverable) {\n          logger.warn(`level controller,${details}: emergency switch-down for next fragment`);\n          hls.abrController.nextAutoLevel = 0;\n        } else if(level && level.details && level.details.live) {\n          logger.warn(`level controller,${details} on live stream, discard`);\n          if (levelError) {\n            // reset this._level so that another call to set level() will retrigger a frag load\n            this._level = undefined;\n          }\n          // other errors are handled by stream controller\n        } else if (details === ErrorDetails.LEVEL_LOAD_ERROR ||\n                   details === ErrorDetails.LEVEL_LOAD_TIMEOUT) {\n          let hls = this.hls,\n              media = hls.media,\n            // 0.5 : tolerance needed as some browsers stalls playback before reaching buffered end\n              mediaBuffered = media && BufferHelper.isBuffered(media,media.currentTime) && BufferHelper.isBuffered(media,media.currentTime+0.5);\n          if (mediaBuffered) {\n            let retryDelay = hls.config.levelLoadingRetryDelay;\n            logger.warn(`level controller,${details}, but media buffered, retry in ${retryDelay}ms`);\n            this.timer = setTimeout(this.ontick,retryDelay);\n          } else {\n            logger.error(`cannot recover ${details} error`);\n            this._level = undefined;\n            // stopping live reloading timer if any\n            if (this.timer) {\n              clearTimeout(this.timer);\n              this.timer = null;\n            }\n            // redispatch same error but with fatal set to true\n            data.fatal = true;\n            hls.trigger(Event.ERROR, data);\n          }\n        }\n      }\n    }\n  }\n\n  onLevelLoaded(data) {\n     // only process level loaded events matching with expected level\n     if (data.level === this._level) {\n      let newDetails = data.details;\n      // if current playlist is a live playlist, arm a timer to reload it\n      if (newDetails.live) {\n        let reloadInterval = 1000*( newDetails.averagetargetduration ? newDetails.averagetargetduration : newDetails.targetduration),\n            curLevel = this._levels[data.level],\n            curDetails = curLevel.details;\n        if (curDetails && newDetails.endSN === curDetails.endSN) {\n          // follow HLS Spec, If the client reloads a Playlist file and finds that it has not\n          // changed then it MUST wait for a period of one-half the target\n          // duration before retrying.\n          reloadInterval /=2;\n          logger.log(`same live playlist, reload twice faster`);\n        }\n        // decrement reloadInterval with level loading delay\n        reloadInterval -= performance.now() - data.stats.trequest;\n        // in any case, don't reload more than every second\n        reloadInterval = Math.max(1000,Math.round(reloadInterval));\n        logger.log(`live playlist, reload in ${reloadInterval} ms`);\n        this.timer = setTimeout(this.ontick,reloadInterval);\n      } else {\n        this.timer = null;\n      }\n    }\n  }\n\n  tick() {\n    var levelId = this._level;\n    if (levelId !== undefined && this.canload) {\n      var level = this._levels[levelId], urlId = level.urlId;\n      this.hls.trigger(Event.LEVEL_LOADING, {url: level.url[urlId], level: levelId, id: urlId});\n    }\n  }\n\n  get nextLoadLevel() {\n    if (this._manualLevel !== -1) {\n      return this._manualLevel;\n    } else {\n     return this.hls.abrController.nextAutoLevel;\n    }\n  }\n\n  set nextLoadLevel(nextLevel) {\n    this.level = nextLevel;\n    if (this._manualLevel === -1) {\n      this.hls.abrController.nextAutoLevel = nextLevel;\n    }\n  }\n}\n\nexport default LevelController;\n\n",
    "/*\n * Stream Controller\n*/\n\nimport BinarySearch from '../utils/binary-search';\nimport BufferHelper from '../helper/buffer-helper';\nimport Demuxer from '../demux/demuxer';\nimport Event from '../events';\nimport EventHandler from '../event-handler';\nimport LevelHelper from '../helper/level-helper';\nimport TimeRanges from '../utils/timeRanges';\nimport {ErrorTypes, ErrorDetails} from '../errors';\nimport {logger} from '../utils/logger';\n\nconst State = {\n  STOPPED : 'STOPPED',\n  IDLE : 'IDLE',\n  KEY_LOADING : 'KEY_LOADING',\n  FRAG_LOADING : 'FRAG_LOADING',\n  FRAG_LOADING_WAITING_RETRY : 'FRAG_LOADING_WAITING_RETRY',\n  WAITING_LEVEL : 'WAITING_LEVEL',\n  PARSING : 'PARSING',\n  PARSED : 'PARSED',\n  BUFFER_FLUSHING : 'BUFFER_FLUSHING',\n  ENDED : 'ENDED',\n  ERROR : 'ERROR'\n};\n\nclass StreamController extends EventHandler {\n\n  constructor(hls) {\n    super(hls,\n      Event.MEDIA_ATTACHED,\n      Event.MEDIA_DETACHING,\n      Event.MANIFEST_LOADING,\n      Event.MANIFEST_PARSED,\n      Event.LEVEL_LOADED,\n      Event.KEY_LOADED,\n      Event.FRAG_LOADED,\n      Event.FRAG_LOAD_EMERGENCY_ABORTED,\n      Event.FRAG_PARSING_INIT_SEGMENT,\n      Event.FRAG_PARSING_DATA,\n      Event.FRAG_PARSED,\n      Event.ERROR,\n      Event.AUDIO_TRACK_SWITCH,\n      Event.BUFFER_CREATED,\n      Event.BUFFER_APPENDED,\n      Event.BUFFER_FLUSHED);\n\n    this.config = hls.config;\n    this.audioCodecSwap = false;\n    this.ticks = 0;\n    this.ontick = this.tick.bind(this);\n  }\n\n  destroy() {\n    this.stopLoad();\n    if (this.timer) {\n      clearInterval(this.timer);\n      this.timer = null;\n    }\n    EventHandler.prototype.destroy.call(this);\n    this.state = State.STOPPED;\n  }\n\n  startLoad(startPosition) {\n    if (this.levels) {\n      let media = this.media, lastCurrentTime = this.lastCurrentTime, hls = this.hls;\n      this.stopLoad();\n      if (!this.timer) {\n        this.timer = setInterval(this.ontick, 100);\n      }\n      this.level = -1;\n      this.fragLoadError = 0;\n      if (media && lastCurrentTime > 0) {\n        logger.log(`configure startPosition @${lastCurrentTime.toFixed(3)}`);\n        if (!this.lastPaused) {\n          logger.log('resuming video');\n          media.play();\n        }\n      } else {\n        this.lastCurrentTime = this.startPosition ? this.startPosition : startPosition;\n      }\n      if (!this.startFragRequested) {\n        // determine load level\n        let startLevel = hls.startLevel;\n        if (startLevel === -1) {\n          // -1 : guess start Level by doing a bitrate test by loading first fragment of lowest quality level\n          startLevel = 0;\n          this.bitrateTest = true;\n        }\n        // set new level to playlist loader : this will trigger start level load\n        // hls.nextLoadLevel remains until it is set to a new value or until a new frag is successfully loaded\n        this.level = hls.nextLoadLevel = startLevel;\n        this.loadedmetadata = false;\n      }\n      this.state = State.IDLE;\n      this.nextLoadPosition = this.startPosition = this.lastCurrentTime;\n      this.tick();\n    } else {\n      logger.warn('cannot start loading as manifest not parsed yet');\n      this.state = State.STOPPED;\n    }\n  }\n\n  stopLoad() {\n    var frag = this.fragCurrent;\n    if (frag) {\n      if (frag.loader) {\n        frag.loader.abort();\n      }\n      this.fragCurrent = null;\n    }\n    this.fragPrevious = null;\n    if (this.demuxer) {\n      this.demuxer.destroy();\n      this.demuxer = null;\n    }\n    this.state = State.STOPPED;\n  }\n\n  tick() {\n    this.ticks++;\n    if (this.ticks === 1) {\n      this.doTick();\n      if (this.ticks > 1) {\n        setTimeout(this.tick, 1);\n      }\n      this.ticks = 0;\n    }\n  }\n\n  doTick() {\n    switch(this.state) {\n      case State.ERROR:\n        //don't do anything in error state to avoid breaking further ...\n        break;\n      case State.BUFFER_FLUSHING:\n      // in buffer flushing state, reset fragLoadError counter\n        this.fragLoadError = 0;\n        break;\n      case State.IDLE:\n        // when this returns false there was an error and we shall return immediatly\n        // from current tick\n        if (!this._doTickIdle()) {\n          return;\n        }\n        break;\n      case State.WAITING_LEVEL:\n        var level = this.levels[this.level];\n        // check if playlist is already loaded\n        if (level && level.details) {\n          this.state = State.IDLE;\n        }\n        break;\n      case State.FRAG_LOADING_WAITING_RETRY:\n        var now = performance.now();\n        var retryDate = this.retryDate;\n        // if current time is gt than retryDate, or if media seeking let's switch to IDLE state to retry loading\n        if(!retryDate || (now >= retryDate) || (this.media && this.media.seeking)) {\n          logger.log(`mediaController: retryDate reached, switch back to IDLE state`);\n          this.state = State.IDLE;\n        }\n        break;\n      case State.ERROR:\n      case State.PAUSED:\n      case State.STOPPED:\n      case State.FRAG_LOADING:\n      case State.PARSING:\n      case State.PARSED:\n      case State.ENDED:\n        break;\n      default:\n        break;\n    }\n    // check buffer\n    this._checkBuffer();\n    // check/update current fragment\n    this._checkFragmentChanged();\n  }\n\n  // Ironically the \"idle\" state is the on we do the most logic in it seems ....\n  // NOTE: Maybe we could rather schedule a check for buffer length after half of the currently\n  //       played segment, or on pause/play/seek instead of naively checking every 100ms?\n  _doTickIdle() {\n    const hls = this.hls,\n          config = hls.config,\n          media = this.media;\n\n    // if video not attached AND\n    // start fragment already requested OR start frag prefetch disable\n    // exit loop\n    // => if start level loaded and media not attached but start frag prefetch is enabled and start frag not requested yet, we will not exit loop\n    if (this.levelLastLoaded !== undefined && !media &&\n      (this.startFragRequested || !config.startFragPrefetch)) {\n      return true;\n    }\n\n    // if we have not yet loaded any fragment, start loading from start position\n    let pos;\n    if (this.loadedmetadata) {\n      pos = media.currentTime;\n    } else {\n      pos = this.nextLoadPosition;\n    }\n    // determine next load level\n    let level = hls.nextLoadLevel,\n        levelInfo = this.levels[level],\n        levelBitrate = levelInfo.bitrate,\n        maxBufLen;\n\n    // compute max Buffer Length that we could get from this load level, based on level bitrate. don't buffer more than 60 MB and more than 30s\n    if (levelBitrate) {\n      maxBufLen = Math.max(8 * config.maxBufferSize / levelBitrate, config.maxBufferLength);\n    } else {\n      maxBufLen = config.maxBufferLength;\n    }\n    maxBufLen = Math.min(maxBufLen, config.maxMaxBufferLength);\n\n    // determine next candidate fragment to be loaded, based on current position and end of buffer position\n    // ensure up to `config.maxMaxBufferLength` of buffer upfront\n\n    const bufferInfo = BufferHelper.bufferInfo(this.mediaBuffer ? this.mediaBuffer : media, pos, config.maxBufferHole),\n          bufferLen = bufferInfo.len;\n    // Stay idle if we are still with buffer margins\n    if (bufferLen >= maxBufLen) {\n      return true;\n    }\n\n    // if buffer length is less than maxBufLen try to load a new fragment ...\n    logger.trace(`buffer length of ${bufferLen.toFixed(3)} is below max of ${maxBufLen.toFixed(3)}. checking for more payload ...`);\n\n    // set next load level : this will trigger a playlist load if needed\n    this.level = hls.nextLoadLevel = level;\n\n    const levelDetails = levelInfo.details;\n    // if level info not retrieved yet, switch state and wait for level retrieval\n    // if live playlist, ensure that new playlist has been refreshed to avoid loading/try to load\n    // a useless and outdated fragment (that might even introduce load error if it is already out of the live playlist)\n    if (typeof levelDetails === 'undefined' || levelDetails.live && this.levelLastLoaded !== level) {\n      this.state = State.WAITING_LEVEL;\n      return true;\n    }\n\n    // we just got done loading the final fragment, check if we need to finalize media stream\n    let fragPrevious = this.fragPrevious;\n    if (!levelDetails.live && fragPrevious && fragPrevious.sn === levelDetails.endSN) {\n        // if (we are not seeking AND current position is buffered) OR (if we are seeking but everything (almost) til the end is buffered), let's signal eos\n        // we don't compare exactly media.duration === bufferInfo.end as there could be some subtle media duration difference when switching\n        // between different renditions. using half frag duration should help cope with these cases.\n        if ((!media.seeking && bufferInfo.len) || (media.duration-bufferInfo.end) <= fragPrevious.duration/2) {\n        // Finalize the media stream\n        let data = {};\n        if (this.altAudio) {\n          data.type = 'video';\n        }\n        this.hls.trigger(Event.BUFFER_EOS,data);\n        this.state = State.ENDED;\n        return true;\n      }\n    }\n\n    // if we have the levelDetails for the selected variant, lets continue enrichen our stream (load keys/fragments or trigger EOS, etc..)\n    return this._fetchPayloadOrEos({pos, bufferInfo, levelDetails});\n  }\n\n  _fetchPayloadOrEos({pos, bufferInfo, levelDetails}) {\n    const fragPrevious = this.fragPrevious,\n          level = this.level,\n          fragments = levelDetails.fragments,\n          fragLen = fragments.length;\n\n    // empty playlist\n    if (fragLen === 0) {\n      return false;\n    }\n\n    // find fragment index, contiguous with end of buffer position\n    let start = fragments[0].start,\n        end = fragments[fragLen-1].start + fragments[fragLen-1].duration,\n        bufferEnd = bufferInfo.end,\n        frag;\n\n      // in case of live playlist we need to ensure that requested position is not located before playlist start\n    if (levelDetails.live) {\n      let initialLiveManifestSize = this.config.initialLiveManifestSize;\n      if(fragLen < initialLiveManifestSize){\n        logger.warn(`Can not start playback of a level, reason: not enough fragments ${fragLen} < ${initialLiveManifestSize}`);\n        return false;\n      }\n\n      frag = this._ensureFragmentAtLivePoint({levelDetails, bufferEnd, start, end, fragPrevious, fragments, fragLen});\n      // if it explicitely returns null don't load any fragment and exit function now\n      if (frag === null) {\n        return false;\n      }\n\n    } else {\n      // VoD playlist: if bufferEnd before start of playlist, load first fragment\n      if (bufferEnd < start) {\n        frag = fragments[0];\n      }\n    }\n    if (!frag) {\n      frag = this._findFragment({start, fragPrevious, fragLen, fragments, bufferEnd, end, levelDetails});\n    }\n    if(frag) {\n      return this._loadFragmentOrKey({frag, level, levelDetails, pos, bufferEnd});\n    }\n    return true;\n  }\n\n  _ensureFragmentAtLivePoint({levelDetails, bufferEnd, start, end, fragPrevious, fragments, fragLen}) {\n    const config = this.hls.config, media = this.media;\n\n    let frag;\n\n    // check if requested position is within seekable boundaries :\n    //logger.log(`start/pos/bufEnd/seeking:${start.toFixed(3)}/${pos.toFixed(3)}/${bufferEnd.toFixed(3)}/${this.media.seeking}`);\n    let maxLatency = config.liveMaxLatencyDuration !== undefined ? config.liveMaxLatencyDuration : config.liveMaxLatencyDurationCount*levelDetails.targetduration;\n\n    if (bufferEnd < Math.max(start, end - maxLatency)) {\n        let liveSyncPosition = this.liveSyncPosition = this.computeLivePosition(start, levelDetails);\n        logger.log(`buffer end: ${bufferEnd.toFixed(3)} is located too far from the end of live sliding playlist, reset currentTime to : ${liveSyncPosition.toFixed(3)}`);\n        bufferEnd = liveSyncPosition;\n        if (media && media.readyState && media.duration > liveSyncPosition) {\n          media.currentTime = liveSyncPosition;\n        }\n    }\n\n    // if end of buffer greater than live edge, don't load any fragment\n    // this could happen if live playlist intermittently slides in the past.\n    // level 1 loaded [182580161,182580167]\n    // level 1 loaded [182580162,182580169]\n    // Loading 182580168 of [182580162 ,182580169],level 1 ..\n    // Loading 182580169 of [182580162 ,182580169],level 1 ..\n    // level 1 loaded [182580162,182580168] <============= here we should have bufferEnd > end. in that case break to avoid reloading 182580168\n    // level 1 loaded [182580164,182580171]\n    //\n    // don't return null in case media not loaded yet (readystate === 0)\n    if (levelDetails.PTSKnown && bufferEnd > end && media && media.readyState) {\n      return null;\n    }\n\n    if (this.startFragRequested && !levelDetails.PTSKnown) {\n      /* we are switching level on live playlist, but we don't have any PTS info for that quality level ...\n         try to load frag matching with next SN.\n         even if SN are not synchronized between playlists, loading this frag will help us\n         compute playlist sliding and find the right one after in case it was not the right consecutive one */\n      if (fragPrevious) {\n        var targetSN = fragPrevious.sn + 1;\n        if (targetSN >= levelDetails.startSN && targetSN <= levelDetails.endSN) {\n          frag = fragments[targetSN - levelDetails.startSN];\n          logger.log(`live playlist, switching playlist, load frag with next SN: ${frag.sn}`);\n        }\n      }\n      if (!frag) {\n        /* we have no idea about which fragment should be loaded.\n           so let's load mid fragment. it will help computing playlist sliding and find the right one\n        */\n        frag = fragments[Math.min(fragLen - 1, Math.round(fragLen / 2))];\n        logger.log(`live playlist, switching playlist, unknown, load middle frag : ${frag.sn}`);\n      }\n    }\n    return frag;\n  }\n\n  _findFragment({start, fragPrevious, fragLen, fragments, bufferEnd, end, levelDetails}) {\n    const config = this.hls.config;\n\n    let frag,\n        foundFrag,\n        maxFragLookUpTolerance = config.maxFragLookUpTolerance;\n\n    if (bufferEnd < end) {\n      if (bufferEnd > end - maxFragLookUpTolerance) {\n        maxFragLookUpTolerance = 0;\n      }\n      foundFrag = BinarySearch.search(fragments, (candidate) => {\n        // offset should be within fragment boundary - config.maxFragLookUpTolerance\n        // this is to cope with situations like\n        // bufferEnd = 9.991\n        // frag[Ø] : [0,10]\n        // frag[1] : [10,20]\n        // bufferEnd is within frag[0] range ... although what we are expecting is to return frag[1] here\n            //              frag start               frag start+duration\n            //                  |-----------------------------|\n            //              <--->                         <--->\n            //  ...--------><-----------------------------><---------....\n            // previous frag         matching fragment         next frag\n            //  return -1             return 0                 return 1\n        //logger.log(`level/sn/start/end/bufEnd:${level}/${candidate.sn}/${candidate.start}/${(candidate.start+candidate.duration)}/${bufferEnd}`);\n        if ((candidate.start + candidate.duration - maxFragLookUpTolerance) <= bufferEnd) {\n          return 1;\n        }// if maxFragLookUpTolerance will have negative value then don't return -1 for first element\n        else if (candidate.start - maxFragLookUpTolerance > bufferEnd && candidate.start) {\n          return -1;\n        }\n        return 0;\n      });\n    } else {\n      // reach end of playlist\n      foundFrag = fragments[fragLen-1];\n    }\n    if (foundFrag) {\n      frag = foundFrag;\n      start = foundFrag.start;\n      //logger.log('find SN matching with pos:' +  bufferEnd + ':' + frag.sn);\n      if (fragPrevious && frag.level === fragPrevious.level && frag.sn === fragPrevious.sn) {\n        if (frag.sn < levelDetails.endSN) {\n          let deltaPTS = fragPrevious.deltaPTS,\n          curSNIdx = frag.sn - levelDetails.startSN;\n          // if there is a significant delta between audio and video, larger than max allowed hole,\n          // and if previous remuxed fragment did not start with a keyframe. (fragPrevious.dropped)\n          // let's try to load previous fragment again to get last keyframe\n          // then we will reload again current fragment (that way we should be able to fill the buffer hole ...)\n          if (deltaPTS && deltaPTS > config.maxBufferHole && fragPrevious.dropped && curSNIdx) {\n            frag = fragments[curSNIdx-1];\n            logger.warn(`SN just loaded, with large PTS gap between audio and video, maybe frag is not starting with a keyframe ? load previous one to try to overcome this`);\n            // decrement previous frag load counter to avoid frag loop loading error when next fragment will get reloaded\n            fragPrevious.loadCounter--;\n          } else {\n            frag = fragments[curSNIdx+1];\n            logger.log(`SN just loaded, load next one: ${frag.sn}`);\n          }\n        } else {\n          frag = null;\n        }\n      }\n    }\n    return frag;\n  }\n\n  _loadFragmentOrKey({frag, level, levelDetails, pos, bufferEnd}) {\n    const hls = this.hls,\n          config = hls.config;\n\n    //logger.log('loading frag ' + i +',pos/bufEnd:' + pos.toFixed(3) + '/' + bufferEnd.toFixed(3));\n    if ((frag.decryptdata.uri != null) && (frag.decryptdata.key == null)) {\n      logger.log(`Loading key for ${frag.sn} of [${levelDetails.startSN} ,${levelDetails.endSN}],level ${level}`);\n      this.state = State.KEY_LOADING;\n      hls.trigger(Event.KEY_LOADING, {frag: frag});\n    } else {\n      logger.log(`Loading ${frag.sn} of [${levelDetails.startSN} ,${levelDetails.endSN}],level ${level}, currentTime:${pos.toFixed(3)},bufferEnd:${bufferEnd.toFixed(3)}`);\n      // ensure that we are not reloading the same fragments in loop ...\n      if (this.fragLoadIdx !== undefined) {\n        this.fragLoadIdx++;\n      } else {\n        this.fragLoadIdx = 0;\n      }\n      if (frag.loadCounter) {\n        frag.loadCounter++;\n        let maxThreshold = config.fragLoadingLoopThreshold;\n        // if this frag has already been loaded 3 times, and if it has been reloaded recently\n        if (frag.loadCounter > maxThreshold && (Math.abs(this.fragLoadIdx - frag.loadIdx) < maxThreshold)) {\n          hls.trigger(Event.ERROR, {type: ErrorTypes.MEDIA_ERROR, details: ErrorDetails.FRAG_LOOP_LOADING_ERROR, fatal: false, frag: frag});\n          return false;\n        }\n      } else {\n        frag.loadCounter = 1;\n      }\n      frag.loadIdx = this.fragLoadIdx;\n      this.fragCurrent = frag;\n      this.startFragRequested = true;\n      frag.autoLevel = hls.autoLevelEnabled;\n      frag.bitrateTest = this.bitrateTest;\n      hls.trigger(Event.FRAG_LOADING, {frag: frag});\n      this.state = State.FRAG_LOADING;\n      return true;\n    }\n  }\n\n  set state(nextState) {\n    if (this.state !== nextState) {\n      const previousState = this.state;\n      this._state = nextState;\n      logger.log(`engine state transition from ${previousState} to ${nextState}`);\n      this.hls.trigger(Event.STREAM_STATE_TRANSITION, {previousState, nextState});\n    }\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  getBufferRange(position) {\n    var i, range,\n        bufferRange = this.bufferRange;\n    if (bufferRange) {\n      for (i = bufferRange.length - 1; i >=0; i--) {\n        range = bufferRange[i];\n        if (position >= range.start && position <= range.end) {\n          return range;\n        }\n      }\n    }\n    return null;\n  }\n\n  get currentLevel() {\n    let media = this.media;\n    if (media) {\n      var range = this.getBufferRange(media.currentTime);\n      if (range) {\n        return range.frag.level;\n      }\n    }\n    return -1;\n  }\n\n  get nextBufferRange() {\n    let media = this.media;\n    if (media) {\n      // first get end range of current fragment\n      return this.followingBufferRange(this.getBufferRange(media.currentTime));\n    } else {\n      return null;\n    }\n  }\n\n  followingBufferRange(range) {\n    if (range) {\n      // try to get range of next fragment (500ms after this range)\n      return this.getBufferRange(range.end + 0.5);\n    }\n    return null;\n  }\n\n  get nextLevel() {\n    var range = this.nextBufferRange;\n    if (range) {\n      return range.frag.level;\n    } else {\n      return -1;\n    }\n  }\n\n  _checkFragmentChanged() {\n    var rangeCurrent, currentTime, video = this.media;\n    if (video && video.readyState && video.seeking === false) {\n      currentTime = video.currentTime;\n      /* if video element is in seeked state, currentTime can only increase.\n        (assuming that playback rate is positive ...)\n        As sometimes currentTime jumps back to zero after a\n        media decode error, check this, to avoid seeking back to\n        wrong position after a media decode error\n      */\n      if(currentTime > video.playbackRate*this.lastCurrentTime) {\n        this.lastCurrentTime = currentTime;\n      }\n      if (BufferHelper.isBuffered(video,currentTime)) {\n        rangeCurrent = this.getBufferRange(currentTime);\n      } else if (BufferHelper.isBuffered(video,currentTime + 0.1)) {\n        /* ensure that FRAG_CHANGED event is triggered at startup,\n          when first video frame is displayed and playback is paused.\n          add a tolerance of 100ms, in case current position is not buffered,\n          check if current pos+100ms is buffered and use that buffer range\n          for FRAG_CHANGED event reporting */\n        rangeCurrent = this.getBufferRange(currentTime + 0.1);\n      }\n      if (rangeCurrent) {\n        var fragPlaying = rangeCurrent.frag;\n        if (fragPlaying !== this.fragPlaying) {\n          this.fragPlaying = fragPlaying;\n          this.hls.trigger(Event.FRAG_CHANGED, {frag: fragPlaying});\n        }\n      }\n    }\n  }\n\n  /*\n    on immediate level switch :\n     - pause playback if playing\n     - cancel any pending load request\n     - and trigger a buffer flush\n  */\n  immediateLevelSwitch() {\n    logger.log('immediateLevelSwitch');\n    if (!this.immediateSwitch) {\n      this.immediateSwitch = true;\n      let media = this.media, previouslyPaused;\n      if (media) {\n        previouslyPaused = media.paused;\n        media.pause();\n      } else {\n        // don't restart playback after instant level switch in case media not attached\n        previouslyPaused = true;\n      }\n      this.previouslyPaused = previouslyPaused;\n    }\n    var fragCurrent = this.fragCurrent;\n    if (fragCurrent && fragCurrent.loader) {\n      fragCurrent.loader.abort();\n    }\n    this.fragCurrent = null;\n    // increase fragment load Index to avoid frag loop loading error after buffer flush\n    this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;\n    this.state = State.BUFFER_FLUSHING;\n    // flush everything\n    this.hls.trigger(Event.BUFFER_FLUSHING, {startOffset: 0, endOffset: Number.POSITIVE_INFINITY});\n  }\n\n  /*\n     on immediate level switch end, after new fragment has been buffered :\n      - nudge video decoder by slightly adjusting video currentTime (if currentTime buffered)\n      - resume the playback if needed\n  */\n  immediateLevelSwitchEnd() {\n    let media = this.media;\n    if (media && media.buffered.length) {\n      this.immediateSwitch = false;\n      if(BufferHelper.isBuffered(media,media.currentTime)) {\n        // only nudge if currentTime is buffered\n        media.currentTime -= 0.0001;\n      }\n      if (!this.previouslyPaused) {\n        media.play();\n      }\n    }\n  }\n\n  nextLevelSwitch() {\n    /* try to switch ASAP without breaking video playback :\n       in order to ensure smooth but quick level switching,\n      we need to find the next flushable buffer range\n      we should take into account new segment fetch time\n    */\n    let media = this.media;\n    // ensure that media is defined and that metadata are available (to retrieve currentTime)\n    if (media && media.readyState) {\n      let fetchdelay, currentRange, nextRange;\n      // increase fragment load Index to avoid frag loop loading error after buffer flush\n      this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;\n      currentRange = this.getBufferRange(media.currentTime);\n      if (currentRange && currentRange.start > 1) {\n      // flush buffer preceding current fragment (flush until current fragment start offset)\n      // minus 1s to avoid video freezing, that could happen if we flush keyframe of current video ...\n        this.state = State.BUFFER_FLUSHING;\n        this.hls.trigger(Event.BUFFER_FLUSHING, {startOffset: 0, endOffset: currentRange.start - 1});\n      }\n      if (!media.paused) {\n        // add a safety delay of 1s\n        var nextLevelId = this.hls.nextLoadLevel,nextLevel = this.levels[nextLevelId], fragLastKbps = this.fragLastKbps;\n        if (fragLastKbps && this.fragCurrent) {\n          fetchdelay = this.fragCurrent.duration * nextLevel.bitrate / (1000 * fragLastKbps) + 1;\n        } else {\n          fetchdelay = 0;\n        }\n      } else {\n        fetchdelay = 0;\n      }\n      //logger.log('fetchdelay:'+fetchdelay);\n      // find buffer range that will be reached once new fragment will be fetched\n      nextRange = this.getBufferRange(media.currentTime + fetchdelay);\n      if (nextRange) {\n        // we can flush buffer range following this one without stalling playback\n        nextRange = this.followingBufferRange(nextRange);\n        if (nextRange) {\n          // if we are here, we can also cancel any loading/demuxing in progress, as they are useless\n          var fragCurrent = this.fragCurrent;\n          if (fragCurrent && fragCurrent.loader) {\n            fragCurrent.loader.abort();\n          }\n          this.fragCurrent = null;\n          // flush position is the start position of this new buffer\n          this.state = State.BUFFER_FLUSHING;\n          this.hls.trigger(Event.BUFFER_FLUSHING, {startOffset: nextRange.start, endOffset: Number.POSITIVE_INFINITY});\n        }\n      }\n    }\n  }\n\n  onMediaAttached(data) {\n    var media = this.media = this.mediaBuffer = data.media;\n    this.onvseeking = this.onMediaSeeking.bind(this);\n    this.onvseeked = this.onMediaSeeked.bind(this);\n    this.onvended = this.onMediaEnded.bind(this);\n    media.addEventListener('seeking', this.onvseeking);\n    media.addEventListener('seeked', this.onvseeked);\n    media.addEventListener('ended', this.onvended);\n    let config = this.config;\n    if(this.levels && config.autoStartLoad) {\n      this.hls.startLoad(config.startPosition);\n    }\n  }\n\n  onMediaDetaching() {\n    var media = this.media;\n    if (media && media.ended) {\n      logger.log('MSE detaching and video ended, reset startPosition');\n      this.startPosition = this.lastCurrentTime = 0;\n    }\n\n    // reset fragment loading counter on MSE detaching to avoid reporting FRAG_LOOP_LOADING_ERROR after error recovery\n    var levels = this.levels;\n    if (levels) {\n      // reset fragment load counter\n        levels.forEach(level => {\n          if(level.details) {\n            level.details.fragments.forEach(fragment => {\n              fragment.loadCounter = undefined;\n            });\n          }\n      });\n    }\n    // remove video listeners\n    if (media) {\n      media.removeEventListener('seeking', this.onvseeking);\n      media.removeEventListener('seeked', this.onvseeked);\n      media.removeEventListener('ended', this.onvended);\n      this.onvseeking = this.onvseeked  = this.onvended = null;\n    }\n    this.media = null;\n    this.loadedmetadata = false;\n    this.stopLoad();\n  }\n\n  onMediaSeeking() {\n    let media = this.media, currentTime = media ? media.currentTime : undefined, config = this.config;\n    logger.log(`media seeking to ${currentTime.toFixed(3)}`);\n    if (this.state === State.FRAG_LOADING) {\n      let bufferInfo = BufferHelper.bufferInfo(media,currentTime,this.config.maxBufferHole),\n          fragCurrent = this.fragCurrent;\n      // check if we are seeking to a unbuffered area AND if frag loading is in progress\n      if (bufferInfo.len === 0 && fragCurrent) {\n        let tolerance = config.maxFragLookUpTolerance,\n            fragStartOffset = fragCurrent.start - tolerance,\n            fragEndOffset = fragCurrent.start + fragCurrent.duration + tolerance;\n        // check if we seek position will be out of currently loaded frag range : if out cancel frag load, if in, don't do anything\n        if (currentTime < fragStartOffset || currentTime > fragEndOffset) {\n          if (fragCurrent.loader) {\n            logger.log('seeking outside of buffer while fragment load in progress, cancel fragment load');\n            fragCurrent.loader.abort();\n          }\n          this.fragCurrent = null;\n          this.fragPrevious = null;\n          // switch to IDLE state to load new fragment\n          this.state = State.IDLE;\n        } else {\n          logger.log('seeking outside of buffer but within currently loaded fragment range');\n        }\n      }\n    } else if (this.state === State.ENDED) {\n        // switch to IDLE state to check for potential new fragment\n        this.state = State.IDLE;\n    }\n    if (media) {\n      this.lastCurrentTime = currentTime;\n    }\n    // avoid reporting fragment loop loading error in case user is seeking several times on same position\n    if (this.state !== State.FRAG_LOADING && this.fragLoadIdx !== undefined) {\n      this.fragLoadIdx += 2 * config.fragLoadingLoopThreshold;\n    }\n    // tick to speed up processing\n    this.tick();\n  }\n\n  onMediaSeeked() {\n    logger.log(`media seeked to ${this.media.currentTime.toFixed(3)}`);\n    // tick to speed up FRAGMENT_PLAYING triggering\n    this.tick();\n  }\n\n  onMediaEnded() {\n    logger.log('media ended');\n    // reset startPosition and lastCurrentTime to restart playback @ stream beginning\n    this.startPosition = this.lastCurrentTime = 0;\n  }\n\n\n  onManifestLoading() {\n    // reset buffer on manifest loading\n    logger.log('trigger BUFFER_RESET');\n    this.hls.trigger(Event.BUFFER_RESET);\n    this.bufferRange = [];\n    this.stalled = false;\n    this.startPosition = this.lastCurrentTime = 0;\n  }\n\n  onManifestParsed(data) {\n    var aac = false, heaac = false, codec;\n    data.levels.forEach(level => {\n      // detect if we have different kind of audio codecs used amongst playlists\n      codec = level.audioCodec;\n      if (codec) {\n        if (codec.indexOf('mp4a.40.2') !== -1) {\n          aac = true;\n        }\n        if (codec.indexOf('mp4a.40.5') !== -1) {\n          heaac = true;\n        }\n      }\n    });\n    this.audioCodecSwitch = (aac && heaac);\n    if (this.audioCodecSwitch) {\n      logger.log('both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC');\n    }\n    this.levels = data.levels;\n    this.startLevelLoaded = false;\n    this.startFragRequested = false;\n    let config = this.config;\n    if (config.autoStartLoad) {\n      this.hls.startLoad(config.startPosition);\n    }\n  }\n\n  onLevelLoaded(data) {\n    var newDetails = data.details,\n        newLevelId = data.level,\n        curLevel = this.levels[newLevelId],\n        duration = newDetails.totalduration,\n        sliding = 0;\n\n    logger.log(`level ${newLevelId} loaded [${newDetails.startSN},${newDetails.endSN}],duration:${duration}`);\n    this.levelLastLoaded = newLevelId;\n\n    if (newDetails.live) {\n      var curDetails = curLevel.details;\n      if (curDetails && newDetails.fragments.length > 0) {\n        // we already have details for that level, merge them\n        LevelHelper.mergeDetails(curDetails,newDetails);\n        sliding = newDetails.fragments[0].start;\n        this.liveSyncPosition = this.computeLivePosition(sliding, curDetails);\n        if (newDetails.PTSKnown) {\n          logger.log(`live playlist sliding:${sliding.toFixed(3)}`);\n        } else {\n          logger.log('live playlist - outdated PTS, unknown sliding');\n        }\n      } else {\n        newDetails.PTSKnown = false;\n        logger.log('live playlist - first load, unknown sliding');\n      }\n    } else {\n      newDetails.PTSKnown = false;\n    }\n    // override level info\n    curLevel.details = newDetails;\n    this.hls.trigger(Event.LEVEL_UPDATED, { details: newDetails, level: newLevelId });\n\n    if (this.startFragRequested === false) {\n    // compute start position if set to -1. use it straight away if value is defined\n      if (this.startPosition === -1 || this.lastCurrentTime === -1) {\n        // first, check if start time offset has been set in playlist, if yes, use this value\n        let startTimeOffset = newDetails.startTimeOffset;\n        if(!isNaN(startTimeOffset)) {\n          if (startTimeOffset < 0) {\n            logger.log(`negative start time offset ${startTimeOffset}, count from end of last fragment`);\n            startTimeOffset = sliding + duration + startTimeOffset;\n          }\n          logger.log(`start time offset found in playlist, adjust startPosition to ${startTimeOffset}`);\n          this.startPosition = startTimeOffset;\n        } else {\n          // if live playlist, set start position to be fragment N-this.config.liveSyncDurationCount (usually 3)\n          if (newDetails.live) {\n            this.startPosition = this.computeLivePosition(sliding, newDetails);\n            logger.log(`configure startPosition to ${this.startPosition}`);\n          } else {\n            this.startPosition = 0;\n          }\n        }\n      }\n      this.nextLoadPosition = this.startPosition;\n    }\n    // only switch batck to IDLE state if we were waiting for level to start downloading a new fragment\n    if (this.state === State.WAITING_LEVEL) {\n      this.state = State.IDLE;\n    }\n    //trigger handler right now\n    this.tick();\n  }\n\n  onKeyLoaded() {\n    if (this.state === State.KEY_LOADING) {\n      this.state = State.IDLE;\n      this.tick();\n    }\n  }\n\n  onFragLoaded(data) {\n    var fragCurrent = this.fragCurrent,\n        fragLoaded = data.frag;\n    if (this.state === State.FRAG_LOADING &&\n        fragCurrent &&\n        fragLoaded.type === 'main' &&\n        fragLoaded.level === fragCurrent.level &&\n        fragLoaded.sn === fragCurrent.sn) {\n      let stats = data.stats,\n          currentLevel = this.levels[fragCurrent.level],\n          details = currentLevel.details;\n      logger.log(`Loaded  ${fragCurrent.sn} of [${details.startSN} ,${details.endSN}],level ${fragCurrent.level}`);\n      // reset frag bitrate test in any case after frag loaded event\n      this.bitrateTest = false;\n      // if this frag was loaded to perform a bitrate test AND if hls.nextLoadLevel is greater than 0\n      // then this means that we should be able to load a fragment at a higher quality level\n      if (fragLoaded.bitrateTest === true && this.hls.nextLoadLevel) {\n        // switch back to IDLE state ... we just loaded a fragment to determine adequate start bitrate and initialize autoswitch algo\n        this.state = State.IDLE;\n        this.startFragRequested = false;\n        stats.tparsed = stats.tbuffered = performance.now();\n        this.hls.trigger(Event.FRAG_BUFFERED, {stats: stats, frag: fragCurrent, id : 'main'});\n        this.tick();\n      } else {\n        this.state = State.PARSING;\n        // transmux the MPEG-TS data to ISO-BMFF segments\n        this.stats = stats;\n        let duration = details.totalduration,\n            start = !isNaN(fragCurrent.startDTS) ? fragCurrent.startDTS  : fragCurrent.start,\n            level = fragCurrent.level,\n            sn = fragCurrent.sn,\n            audioCodec = this.config.defaultAudioCodec || currentLevel.audioCodec;\n        if(this.audioCodecSwap) {\n          logger.log('swapping playlist audio codec');\n          if(audioCodec === undefined) {\n            audioCodec = this.lastAudioCodec;\n          }\n          if(audioCodec) {\n            if(audioCodec.indexOf('mp4a.40.5') !==-1) {\n              audioCodec = 'mp4a.40.2';\n            } else {\n              audioCodec = 'mp4a.40.5';\n            }\n          }\n        }\n        this.pendingAppending = 0;\n        logger.log(`Parsing ${sn} of [${details.startSN} ,${details.endSN}],level ${level}, cc ${fragCurrent.cc}`);\n        let demuxer = this.demuxer;\n        if (!demuxer) {\n          demuxer = this.demuxer = new Demuxer(this.hls,'main');\n        }\n        // time Offset is accurate if level PTS is known, or if playlist is not sliding (not live)\n        let accurateTimeOffset = details.PTSKnown || !details.live;\n        demuxer.push(data.payload, audioCodec, currentLevel.videoCodec, start, fragCurrent.cc, level, sn, duration, fragCurrent.decryptdata, accurateTimeOffset);\n      }\n    }\n    this.fragLoadError = 0;\n  }\n\n  onFragParsingInitSegment(data) {\n    let fragCurrent = this.fragCurrent;\n    if (fragCurrent &&\n        data.id === 'main' &&\n        data.sn === fragCurrent.sn &&\n        data.level === fragCurrent.level &&\n        this.state === State.PARSING) {\n      var tracks = data.tracks, trackName, track;\n\n      // if audio track is expected to come from audio stream controller, discard any coming from main\n      if (tracks.audio && this.altAudio) {\n        delete tracks.audio;\n      }\n      // include levelCodec in audio and video tracks\n      track = tracks.audio;\n      if(track) {\n        var audioCodec = this.levels[this.level].audioCodec,\n            ua = navigator.userAgent.toLowerCase();\n        if(audioCodec && this.audioCodecSwap) {\n          logger.log('swapping playlist audio codec');\n          if(audioCodec.indexOf('mp4a.40.5') !==-1) {\n            audioCodec = 'mp4a.40.2';\n          } else {\n            audioCodec = 'mp4a.40.5';\n          }\n        }\n        // in case AAC and HE-AAC audio codecs are signalled in manifest\n        // force HE-AAC , as it seems that most browsers prefers that way,\n        // except for mono streams OR on FF\n        // these conditions might need to be reviewed ...\n        if (this.audioCodecSwitch) {\n            // don't force HE-AAC if mono stream\n           if(track.metadata.channelCount !== 1 &&\n            // don't force HE-AAC if firefox\n            ua.indexOf('firefox') === -1) {\n              audioCodec = 'mp4a.40.5';\n          }\n        }\n        // HE-AAC is broken on Android, always signal audio codec as AAC even if variant manifest states otherwise\n        if(ua.indexOf('android') !== -1) {\n          audioCodec = 'mp4a.40.2';\n          logger.log(`Android: force audio codec to` + audioCodec);\n        }\n        track.levelCodec = audioCodec;\n        track.id = data.id;\n      }\n      track = tracks.video;\n      if(track) {\n        track.levelCodec = this.levels[this.level].videoCodec;\n        track.id = data.id;\n      }\n\n      // if remuxer specify that a unique track needs to generated,\n      // let's merge all tracks together\n      if (data.unique) {\n        var mergedTrack = {\n            codec : '',\n            levelCodec : ''\n          };\n        for (trackName in data.tracks) {\n          track = tracks[trackName];\n          mergedTrack.container = track.container;\n          if (mergedTrack.codec) {\n            mergedTrack.codec +=  ',';\n            mergedTrack.levelCodec +=  ',';\n          }\n          if(track.codec) {\n            mergedTrack.codec +=  track.codec;\n          }\n          if (track.levelCodec) {\n            mergedTrack.levelCodec +=  track.levelCodec;\n          }\n        }\n        tracks = { audiovideo : mergedTrack };\n      }\n      this.hls.trigger(Event.BUFFER_CODECS,tracks);\n      // loop through tracks that are going to be provided to bufferController\n      for (trackName in tracks) {\n        track = tracks[trackName];\n        logger.log(`main track:${trackName},container:${track.container},codecs[level/parsed]=[${track.levelCodec}/${track.codec}]`);\n        var initSegment = track.initSegment;\n        if (initSegment) {\n          this.pendingAppending++;\n          this.hls.trigger(Event.BUFFER_APPENDING, {type: trackName, data: initSegment, parent : 'main', content : 'initSegment'});\n        }\n      }\n      //trigger handler right now\n      this.tick();\n    }\n  }\n\n  onFragParsingData(data) {\n    let fragCurrent = this.fragCurrent;\n    if (fragCurrent &&\n        data.id === 'main' &&\n        data.sn === fragCurrent.sn &&\n        data.level === fragCurrent.level &&\n        !(data.type === 'audio' && this.altAudio) && // filter out main audio if audio track is loaded through audio stream controller\n        this.state === State.PARSING) {\n      var level = this.levels[this.level],\n          frag = this.fragCurrent;\n\n      logger.log(`Parsed ${data.type},PTS:[${data.startPTS.toFixed(3)},${data.endPTS.toFixed(3)}],DTS:[${data.startDTS.toFixed(3)}/${data.endDTS.toFixed(3)}],nb:${data.nb},dropped:${data.dropped || 0}`);\n\n      var drift = LevelHelper.updateFragPTSDTS(level.details,frag.sn,data.startPTS,data.endPTS,data.startDTS,data.endDTS),\n          hls = this.hls;\n      hls.trigger(Event.LEVEL_PTS_UPDATED, {details: level.details, level: this.level, drift: drift});\n\n      // has remuxer dropped video frames located before first keyframe ?\n      if(data.type === 'video') {\n        frag.dropped = data.dropped;\n      }\n\n      [data.data1, data.data2].forEach(buffer => {\n        if (buffer) {\n          this.pendingAppending++;\n          hls.trigger(Event.BUFFER_APPENDING, {type: data.type, data: buffer, parent : 'main',content : 'data'});\n        }\n      });\n\n      this.nextLoadPosition = data.endPTS;\n      this.bufferRange.push({type: data.type, start: data.startPTS, end: data.endPTS, frag: frag});\n\n      //trigger handler right now\n      this.tick();\n    }\n  }\n\n  onFragParsed(data) {\n    let fragCurrent = this.fragCurrent;\n    if (fragCurrent &&\n        data.id === 'main' &&\n        data.sn === fragCurrent.sn &&\n        data.level === fragCurrent.level &&\n        this.state === State.PARSING) {\n      this.stats.tparsed = performance.now();\n      this.state = State.PARSED;\n      this._checkAppendedParsed();\n    }\n  }\n\n  onAudioTrackSwitch(data) {\n    // if any URL found on new audio track, it is an alternate audio track\n    var altAudio = !!data.url;\n    // if we switch on main audio, ensure that main fragment scheduling is synced with media.buffered\n    if (!altAudio) {\n      if (this.mediaBuffer !== this.media) {\n        logger.log(`switching on main audio, use media.buffered to schedule main fragment loading`);\n        this.mediaBuffer = this.media;\n        let fragCurrent = this.fragCurrent;\n        // we need to refill audio buffer from main: cancel any frag loading to speed up audio switch\n        if (fragCurrent.loader) {\n          logger.log('switching to main audio track, cancel main fragment load');\n          fragCurrent.loader.abort();\n        }\n        this.fragCurrent = null;\n        this.fragPrevious = null;\n        // destroy demuxer to force init segment generation (following audio switch)\n        if (this.demuxer) {\n          this.demuxer.destroy();\n          this.demuxer = null;\n        }\n        // switch to IDLE state to load new fragment\n        this.state = State.IDLE;\n      }\n    } else {\n    // if we switch on alternate audio, ensure that main fragment scheduling is synced with video sourcebuffer buffered\n      if (this.videoBuffer && this.mediaBuffer !== this.videoBuffer) {\n        logger.log(`switching on alternate audio, use video.buffered to schedule main fragment loading`);\n        this.mediaBuffer = this.videoBuffer;\n      }\n    }\n    this.altAudio = altAudio;\n  }\n\n\n  onBufferCreated(data) {\n    let tracks = data.tracks, mediaTrack, name, alternate = false;\n    for(var type in tracks) {\n      let track = tracks[type];\n      if (track.id === 'main') {\n        name = type;\n        mediaTrack = track;\n        // keep video source buffer reference\n        if (type === 'video') {\n          this.videoBuffer = tracks[type].buffer;\n        }\n      } else {\n        alternate = true;\n      }\n    }\n    if (alternate && mediaTrack) {\n      logger.log(`alternate track found, use ${name}.buffered to schedule main fragment loading`);\n      this.mediaBuffer = mediaTrack.buffer;\n    } else {\n      this.mediaBuffer = this.media;\n    }\n  }\n\n  onBufferAppended(data) {\n    if (data.parent === 'main') {\n      switch (this.state) {\n        case State.PARSING:\n        case State.PARSED:\n          this.pendingAppending--;\n          this._checkAppendedParsed();\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  _checkAppendedParsed() {\n    //trigger handler right now\n    if (this.state === State.PARSED && this.pendingAppending === 0)  {\n      var frag = this.fragCurrent, stats = this.stats;\n      if (frag) {\n        this.fragPrevious = frag;\n        stats.tbuffered = performance.now();\n        // we should get rid of this.fragLastKbps\n        this.fragLastKbps = Math.round(8 * stats.total / (stats.tbuffered - stats.tfirst));\n        this.hls.trigger(Event.FRAG_BUFFERED, {stats: stats, frag: frag, id : 'main'});\n        let media = this.mediaBuffer ? this.mediaBuffer : this.media;\n        logger.log(`main buffered : ${TimeRanges.toString(media.buffered)}`);\n        this.state = State.IDLE;\n      }\n      this.tick();\n    }\n  }\n\n  onError(data) {\n    let frag = data.frag || this.fragCurrent;\n    // don't handle frag error not related to main fragment\n    if (frag && frag.type !== 'main') {\n      return;\n    }\n    let media = this.media,\n        // 0.5 : tolerance needed as some browsers stalls playback before reaching buffered end\n        mediaBuffered = media && BufferHelper.isBuffered(media,media.currentTime) && BufferHelper.isBuffered(media,media.currentTime+0.5);\n    switch(data.details) {\n      case ErrorDetails.FRAG_LOAD_ERROR:\n      case ErrorDetails.FRAG_LOAD_TIMEOUT:\n      case ErrorDetails.KEY_LOAD_ERROR:\n      case ErrorDetails.KEY_LOAD_TIMEOUT:\n        if(!data.fatal) {\n          var loadError = this.fragLoadError;\n          if(loadError) {\n            loadError++;\n          } else {\n            loadError=1;\n          }\n          let config = this.config;\n          // keep retrying / don't raise fatal network error if current position is buffered or if in automode with current level not 0\n          if (loadError <= config.fragLoadingMaxRetry || mediaBuffered || (frag.autoLevel && frag.level)) {\n            this.fragLoadError = loadError;\n            // reset load counter to avoid frag loop loading error\n            frag.loadCounter = 0;\n            // exponential backoff capped to config.fragLoadingMaxRetryTimeout\n            var delay = Math.min(Math.pow(2,loadError-1)*config.fragLoadingRetryDelay,config.fragLoadingMaxRetryTimeout);\n            logger.warn(`mediaController: frag loading failed, retry in ${delay} ms`);\n            this.retryDate = performance.now() + delay;\n            // retry loading state\n            this.state = State.FRAG_LOADING_WAITING_RETRY;\n          } else {\n            logger.error(`mediaController: ${data.details} reaches max retry, redispatch as fatal ...`);\n            // redispatch same error but with fatal set to true\n            data.fatal = true;\n            this.hls.trigger(Event.ERROR, data);\n            this.state = State.ERROR;\n          }\n        }\n        break;\n      case ErrorDetails.FRAG_LOOP_LOADING_ERROR:\n        if(!data.fatal) {\n          // if buffer is not empty\n          if (mediaBuffered) {\n            // try to reduce max buffer length : rationale is that we could get\n            // frag loop loading error because of buffer eviction\n            this._reduceMaxBufferLength(frag.duration);\n            this.state = State.IDLE;\n          } else {\n            // buffer empty. report as fatal if in manual mode or if lowest level.\n            // level controller takes care of emergency switch down logic\n            if (!frag.autoLevel || frag.level === 0) {\n              // redispatch same error but with fatal set to true\n              data.fatal = true;\n              this.hls.trigger(Event.ERROR, data);\n              this.state = State.ERROR;\n            }\n          }\n        }\n        break;\n      case ErrorDetails.LEVEL_LOAD_ERROR:\n      case ErrorDetails.LEVEL_LOAD_TIMEOUT:\n        if(this.state !== State.ERROR) {\n          if (data.fatal) {\n           // if fatal error, stop processing\n            this.state = State.ERROR;\n            logger.warn(`streamController: ${data.details},switch to ${this.state} state ...`);\n          } else {\n            // in cas of non fatal error while waiting level load to be completed, switch back to IDLE\n            if (this.state === State.WAITING_LEVEL) {\n              this.state = State.IDLE;\n            }\n          }\n        }\n        break;\n      case ErrorDetails.BUFFER_FULL_ERROR:\n        // if in appending state\n        if (this.state === State.PARSING || this.state === State.PARSED) {\n          // reduce max buf len if current position is buffered\n          if (mediaBuffered) {\n            this._reduceMaxBufferLength(frag.duration);\n            this.state = State.IDLE;\n          } else {\n            // current position is not buffered, but browser is still complaining about buffer full error\n            // this happens on IE/Edge, refer to https://github.com/dailymotion/hls.js/pull/708\n            // in that case flush the whole buffer to recover\n            logger.warn('buffer full error also media.currentTime is not buffered, flush everything');\n            this.fragCurrent = null;\n            this.state = State.PAUSED;\n            // flush everything\n            this.hls.trigger(Event.BUFFER_FLUSHING, {startOffset: 0, endOffset: Number.POSITIVE_INFINITY});\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  _reduceMaxBufferLength(minLength) {\n    let config = this.config;\n    if (config.maxMaxBufferLength >= minLength) {\n      // reduce max buffer length as it might be too high. we do this to avoid loop flushing ...\n      config.maxMaxBufferLength/=2;\n      logger.warn(`reduce max buffer length to ${config.maxMaxBufferLength}s and switch to IDLE state`);\n      // increase fragment load Index to avoid frag loop loading error after buffer flush\n      this.fragLoadIdx += 2 * config.fragLoadingLoopThreshold;\n    }\n  }\n\n_checkBuffer() {\n    var media = this.media;\n    // if ready state different from HAVE_NOTHING (numeric value 0), we are allowed to seek\n    if(media && media.readyState) {\n        let currentTime = media.currentTime,\n             buffered = media.buffered;\n      // adjust currentTime to start position on loaded metadata\n      if(!this.loadedmetadata && buffered.length) {\n        this.loadedmetadata = true;\n        // only adjust currentTime if different from startPosition or if startPosition not buffered\n        // at that stage, there should be only one buffered range, as we reach that code after first fragment has been buffered\n        let startPosition = this.startPosition,\n            startPositionBuffered = BufferHelper.isBuffered(media,startPosition);\n        // if currentTime not matching with expected startPosition or startPosition not buffered\n        if (currentTime !== startPosition || !startPositionBuffered) {\n          logger.log(`target start position:${startPosition}`);\n          // if startPosition not buffered, let's seek to buffered.start(0)\n          if(!startPositionBuffered) {\n            startPosition = buffered.start(0);\n            logger.log(`target start position not buffered, seek to buffered.start(0) ${startPosition}`);\n          }\n          logger.log(`adjust currentTime from ${currentTime} to ${startPosition}`);\n          media.currentTime = startPosition;\n        }\n      } else if (this.immediateSwitch) {\n      this.immediateLevelSwitchEnd();\n      } else {\n        let bufferInfo = BufferHelper.bufferInfo(media,currentTime,0),\n            expectedPlaying = !(media.paused || // not playing when media is paused\n                                media.ended  || // not playing when media is ended\n                                media.buffered.length === 0), // not playing if nothing buffered\n            jumpThreshold = 0.5, // tolerance needed as some browsers stalls playback before reaching buffered range end\n            playheadMoving = currentTime > media.playbackRate*this.lastCurrentTime,\n            config = this.config;\n\n        if (this.stalled && playheadMoving) {\n          this.stalled = false;\n          logger.log(`playback not stuck anymore @${currentTime}`);\n        }\n        // check buffer upfront\n        // if less than jumpThreshold second is buffered, let's check in more details\n        if(expectedPlaying && bufferInfo.len <= jumpThreshold) {\n          if(playheadMoving) {\n            // playhead moving\n            jumpThreshold = 0;\n            this.seekHoleNudgeDuration = 0;\n          } else {\n            // playhead not moving AND media expected to play\n            if(!this.stalled) {\n              this.seekHoleNudgeDuration = 0;\n              logger.log(`playback seems stuck @${currentTime}`);\n              this.hls.trigger(Event.ERROR, {type: ErrorTypes.MEDIA_ERROR, details: ErrorDetails.BUFFER_STALLED_ERROR, fatal: false});\n              this.stalled = true;\n            } else {\n              this.seekHoleNudgeDuration += config.seekHoleNudgeDuration;\n            }\n          }\n          // if we are below threshold, try to jump to start of next buffer range if close\n          if(bufferInfo.len <= jumpThreshold) {\n            // no buffer available @ currentTime, check if next buffer is close (within a config.maxSeekHole second range)\n            var nextBufferStart = bufferInfo.nextStart, delta = nextBufferStart-currentTime;\n            if(nextBufferStart &&\n               (delta < config.maxSeekHole) &&\n               (delta > 0)) {\n              // next buffer is close ! adjust currentTime to nextBufferStart\n              // this will ensure effective video decoding\n              logger.log(`adjust currentTime from ${media.currentTime} to next buffered @ ${nextBufferStart} + nudge ${this.seekHoleNudgeDuration}`);\n              let hole = nextBufferStart + this.seekHoleNudgeDuration - media.currentTime;\n              media.currentTime = nextBufferStart + this.seekHoleNudgeDuration;\n              this.hls.trigger(Event.ERROR, {type: ErrorTypes.MEDIA_ERROR, details: ErrorDetails.BUFFER_SEEK_OVER_HOLE, fatal: false, hole : hole});\n            }\n          }\n        }\n      }\n    }\n  }\n\n  onFragLoadEmergencyAborted() {\n    this.state = State.IDLE;\n    // if loadedmetadata is not set, it means that we are emergency switch down on first frag\n    // in that case, reset startFragRequested flag\n    if(!this.loadedmetadata) {\n      this.startFragRequested = false;\n    }\n    this.tick();\n  }\n\n  onBufferFlushed() {\n    /* after successful buffer flushing, rebuild buffer Range array\n      loop through existing buffer range and check if\n      corresponding range is still buffered. only push to new array already buffered range\n      use mediaBuffered instead of media (so that we will check against video.buffered ranges in case of alt audio track)\n    */\n    let media = this.mediaBuffer ? this.mediaBuffer : this.media,\n        bufferRange = this.bufferRange,\n        newRange = [],range,i;\n    for (i = 0; i < bufferRange.length; i++) {\n      range = bufferRange[i];\n      if (BufferHelper.isBuffered(media,(range.start + range.end) / 2)) {\n        newRange.push(range);\n      }\n    }\n    this.bufferRange = newRange;\n\n    // increase fragment load Index to avoid frag loop loading error after buffer flush\n    this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;\n    // move to IDLE once flush complete. this should trigger new fragment loading\n    this.state = State.IDLE;\n    // reset reference to frag\n    this.fragPrevious = null;\n  }\n\n  swapAudioCodec() {\n    this.audioCodecSwap = !this.audioCodecSwap;\n  }\n\n  computeLivePosition(sliding, levelDetails) {\n    let targetLatency = this.config.liveSyncDuration !== undefined ? this.config.liveSyncDuration : this.config.liveSyncDurationCount * levelDetails.targetduration;\n    return sliding + Math.max(0, levelDetails.totalduration - targetLatency);\n  }\n\n  get liveSyncPosition() {\n    return this._liveSyncPosition;\n  }\n\n  set liveSyncPosition(value) {\n    this._liveSyncPosition = value;\n  }\n}\nexport default StreamController;\n\n",
    "/*\n * Timeline Controller\n*/\n\nimport Event from '../events';\nimport EventHandler from '../event-handler';\nimport Cea608Parser from '../utils/cea-608-parser';\n\nclass TimelineController extends EventHandler {\n\n  constructor(hls) {\n    super(hls, Event.MEDIA_ATTACHING,\n                Event.MEDIA_DETACHING,\n                Event.FRAG_PARSING_USERDATA,\n                Event.MANIFEST_LOADING,\n                Event.FRAG_LOADED,\n                Event.LEVEL_SWITCH);\n\n    this.hls = hls;\n    this.config = hls.config;\n    this.enabled = true;\n    this.Cues = hls.config.cueHandler;\n\n    if (this.config.enableCEA708Captions)\n    {\n      var self = this;\n\n      var channel1 =\n      {\n        'newCue': function(startTime, endTime, screen)\n        {\n          if (!self.textTrack1)\n          {\n            //Enable reuse of existing text track.\n            var existingTrack1 = self.getExistingTrack('1');\n            if(!existingTrack1)\n            {\n              self.textTrack1 = self.createTextTrack('captions', 'English', 'en');\n              self.textTrack1.textTrack1 = true;\n            }\n            else\n            {\n              self.textTrack1 = existingTrack1;\n              self.clearCurrentCues(self.textTrack1);\n\n              let e = new window.Event('addtrack');\n              e.track = self.textTrack1;\n              self.media.dispatchEvent(e);\n            }\n          }\n\n          self.Cues.newCue(self.textTrack1, startTime, endTime, screen);\n        }\n      };\n\n      var channel2 =\n      {\n        'newCue': function(startTime, endTime, screen)\n        {\n          if (!self.textTrack2)\n          {\n            //Enable reuse of existing text track.\n            var existingTrack2 = self.getExistingTrack('2');\n            if(!existingTrack2)\n            {\n              self.textTrack2 = self.createTextTrack('captions', 'Spanish', 'es');\n              self.textTrack2.textTrack2 = true;\n            }\n            else\n            {\n              self.textTrack2 = existingTrack2;\n              self.clearCurrentCues(self.textTrack2);\n\n              let e = new window.Event('addtrack');\n              e.track = self.textTrack2;\n              self.media.dispatchEvent(e);\n            }\n          }\n\n          self.Cues.newCue(self.textTrack2, startTime, endTime, screen);        }\n      };\n\n      this.cea608Parser = new Cea608Parser(0, channel1, channel2);\n    }\n  }\n\n  clearCurrentCues(track)\n  {\n    if (track && track.cues)\n    {\n      while (track.cues.length > 0)\n      {\n        track.removeCue(track.cues[0]);\n      }\n    }\n  }\n\n  getExistingTrack(channelNumber)\n  {\n    let media = this.media;\n    if (media)\n    {\n      for (let i = 0; i < media.textTracks.length; i++)\n      {\n        let textTrack = media.textTracks[i];\n        let propName = 'textTrack' + channelNumber;\n        if (textTrack[propName] === true)\n        {\n          return textTrack;\n        }\n      }\n    }\n    return null;\n  }\n\n  createTextTrack(kind, label, lang)\n  {\n    if (this.media)\n    {\n      return this.media.addTextTrack(kind, label, lang);\n    }\n  }\n\n  destroy() {\n    EventHandler.prototype.destroy.call(this);\n  }\n\n  onMediaAttaching(data) {\n    this.media = data.media;\n  }\n\n  onMediaDetaching() {\n  }\n\n  onManifestLoading()\n  {\n    this.lastPts = Number.NEGATIVE_INFINITY;\n  }\n\n  onLevelSwitch()\n  {\n    if (this.hls.currentLevel.closedCaptions === 'NONE')\n    {\n      this.enabled = false;\n    }\n    else\n    {\n      this.enabled = true;\n    }\n  }\n\n  onFragLoaded(data)\n  {\n    if (data.frag.type === 'main') {\n      var pts = data.frag.start; //Number.POSITIVE_INFINITY;\n      // if this is a frag for a previously loaded timerange, remove all captions\n      // TODO: consider just removing captions for the timerange\n      if (pts <= this.lastPts)\n      {\n      this.clearCurrentCues(this.textTrack1);\n      this.clearCurrentCues(this.textTrack2);\n      }\n      this.lastPts = pts;\n    }\n  }\n\n  onFragParsingUserdata(data) {\n    // push all of the CEA-708 messages into the interpreter\n    // immediately. It will create the proper timestamps based on our PTS value\n    if (this.enabled && this.config.enableCEA708Captions)\n    {\n      for (var i=0; i<data.samples.length; i++)\n      {\n        var ccdatas = this.extractCea608Data(data.samples[i].bytes);\n        this.cea608Parser.addData(data.samples[i].pts, ccdatas);\n      }\n    }\n  }\n\n  extractCea608Data(byteArray)\n  {\n    var count = byteArray[0] & 31;\n    var position = 2;\n    var tmpByte, ccbyte1, ccbyte2, ccValid, ccType;\n    var actualCCBytes = [];\n\n    for (var j = 0; j < count; j++) {\n      tmpByte = byteArray[position++];\n      ccbyte1 = 0x7F & byteArray[position++];\n      ccbyte2 = 0x7F & byteArray[position++];\n      ccValid = (4 & tmpByte) === 0 ? false : true;\n      ccType = 3 & tmpByte;\n\n      if (ccbyte1 === 0 && ccbyte2 === 0) {\n        continue;\n      }\n\n      if (ccValid) {\n        if (ccType === 0) // || ccType === 1\n        {\n          actualCCBytes.push(ccbyte1);\n          actualCCBytes.push(ccbyte2);\n        }\n      }\n    }\n    return actualCCBytes;\n  }\n}\n\nexport default TimelineController;\n",
    "class AESCrypto {\n  constructor(iv) {\n    this.aesIV = iv;\n  }\n\n  decrypt(data, key) {\n    return window.crypto.subtle.decrypt({name: 'AES-CBC', iv: this.aesIV}, key, data);\n  }\n}\n\nexport default AESCrypto;\n",
    "class AESDecryptor {\n  constructor() {\n    // Static after running initTable\n    this.rcon = [0x0, 0x1, 0x2, 0x4, 0x8, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n    this.subMix = [];\n    this.subMix[0] = new Uint32Array(256);\n    this.subMix[1] = new Uint32Array(256);\n    this.subMix[2] = new Uint32Array(256);\n    this.subMix[3] = new Uint32Array(256);\n\n    this.invSubMix = [];\n    this.invSubMix[0] = new Uint32Array(256);\n    this.invSubMix[1] = new Uint32Array(256);\n    this.invSubMix[2] = new Uint32Array(256);\n    this.invSubMix[3] = new Uint32Array(256);\n\n    this.sBox = new Uint32Array(256);\n    this.invSBox = new Uint32Array(256);\n\n    // Changes during runtime\n    this.key = new Uint32Array(0);\n\n    this.initTable();\n  }\n\n  // Using view.getUint32() also swaps the byte order.\n  uint8ArrayToUint32Array_(arrayBuffer) {\n    let view = new DataView(arrayBuffer);\n    let newArray = new Uint32Array(4);\n    for (let i = 0; i < newArray.length; i++) {\n      newArray[i] = view.getUint32(i * 4);\n    }\n    return newArray;\n  }\n\n  initTable() {\n    let sBox = this.sBox;\n    let invSBox = this.invSBox;\n    let subMix0 = this.subMix[0];\n    let subMix1 = this.subMix[1];\n    let subMix2 = this.subMix[2];\n    let subMix3 = this.subMix[3];\n    let invSubMix0 = this.invSubMix[0];\n    let invSubMix1 = this.invSubMix[1];\n    let invSubMix2 = this.invSubMix[2];\n    let invSubMix3 = this.invSubMix[3];\n\n    let d = new Uint32Array(256);\n    let x = 0;\n    let xi = 0;\n    let i = 0;\n    for (i = 0; i < 256; i++) {\n      if (i < 128) {\n        d[i] = i << 1;\n      } else {\n        d[i] = (i << 1) ^ 0x11b;\n      }\n    }\n\n    for (i = 0; i < 256; i++) {\n      let sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n      sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n      sBox[x] = sx;\n      invSBox[sx] = x;\n\n      // Compute multiplication\n      let x2 = d[x];\n      let x4 = d[x2];\n      let x8 = d[x4];\n\n      // Compute sub/invSub bytes, mix columns tables\n      let t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n      subMix0[x] = (t << 24) | (t >>> 8);\n      subMix1[x] = (t << 16) | (t >>> 16);\n      subMix2[x] = (t << 8) | (t >>> 24);\n      subMix3[x] = t;\n\n      // Compute inv sub bytes, inv mix columns tables\n      t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n      invSubMix0[sx] = (t << 24) | (t >>> 8);\n      invSubMix1[sx] = (t << 16) | (t >>> 16);\n      invSubMix2[sx] = (t << 8) | (t >>> 24);\n      invSubMix3[sx] = t;\n\n      // Compute next counter\n      if (!x) {\n        x = xi = 1;\n      } else {\n        x = x2 ^ d[d[d[x8 ^ x2]]];\n        xi ^= d[d[xi]];\n      }\n    }\n  }\n\n  expandKey(keyBuffer) {\n    // convert keyBuffer to Uint32Array\n    let key = this.uint8ArrayToUint32Array_(keyBuffer);\n    let sameKey = true;\n    let offset = 0;\n\n    while (offset < key.length && sameKey) {\n      sameKey = (key[offset] === this.key[offset]);\n      offset++;\n    }\n\n    if (sameKey) {\n      return;\n    }\n\n    this.key = key;\n    let keySize = this.keySize = key.length;\n\n    if (keySize !== 4 && keySize !== 6 && keySize !== 8) {\n      throw new Error('Invalid aes key size=' + keySize);\n    }\n\n    let ksRows = this.ksRows = (keySize + 6 + 1) * 4;\n    let ksRow;\n    let invKsRow;\n\n    let keySchedule = this.keySchedule = new Uint32Array(this.ksRows).fill(0);\n    let invKeySchedule = this.invKeySchedule = new Uint32Array(this.ksRows).fill(0);\n    let sbox = this.sBox;\n    let rcon = this.rcon;\n\n    let invSubMix0 = this.invSubMix[0];\n    let invSubMix1 = this.invSubMix[1];\n    let invSubMix2 = this.invSubMix[2];\n    let invSubMix3 = this.invSubMix[3];\n\n    let prev;\n    let t;\n\n    for (ksRow = 0; ksRow < ksRows; ksRow++) {\n      if (ksRow < keySize) {\n        prev = keySchedule[ksRow] = key[ksRow];\n        continue;\n      }\n      t = prev;\n\n      if (ksRow % keySize === 0) {\n        // Rot word\n        t = (t << 8) | (t >>> 24);\n\n        // Sub word\n        t = (sbox[t >>> 24] << 24) | (sbox[(t >>> 16) & 0xff] << 16) | (sbox[(t >>> 8) & 0xff] << 8) | sbox[t & 0xff];\n\n        // Mix Rcon\n        t ^= rcon[(ksRow / keySize) | 0] << 24;\n      } else if (keySize > 6 && ksRow % keySize === 4)  {\n        // Sub word\n        t = (sbox[t >>> 24] << 24) | (sbox[(t >>> 16) & 0xff] << 16) | (sbox[(t >>> 8) & 0xff] << 8) | sbox[t & 0xff];\n      }\n\n      keySchedule[ksRow] = prev = (keySchedule[ksRow - keySize] ^ t) >>> 0;\n    }\n\n    for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n      ksRow = ksRows - invKsRow;\n      if (invKsRow & 3) {\n        t = keySchedule[ksRow];\n      } else {\n        t = keySchedule[ksRow - 4];\n      }\n\n      if (invKsRow < 4 || ksRow <= 4) {\n        invKeySchedule[invKsRow] = t;\n      } else {\n        invKeySchedule[invKsRow] = invSubMix0[sbox[t >>> 24]] ^ invSubMix1[sbox[(t >>> 16) & 0xff]] ^ invSubMix2[sbox[(t >>> 8) & 0xff]] ^ invSubMix3[sbox[t & 0xff]];\n      }\n\n      invKeySchedule[invKsRow] = invKeySchedule[invKsRow] >>> 0;\n    }\n  }\n\n  // Adding this as a method greatly improves performance.\n  networkToHostOrderSwap(word) {\n    return (word << 24) | ((word & 0xff00) << 8) | ((word & 0xff0000) >> 8) | (word >>> 24);\n  }\n\n  decrypt(inputArrayBuffer, offset, aesIV) {\n    let nRounds = this.keySize + 6;\n    let invKeySchedule = this.invKeySchedule;\n    let invSBOX = this.invSBox;\n\n    let invSubMix0 = this.invSubMix[0];\n    let invSubMix1 = this.invSubMix[1];\n    let invSubMix2 = this.invSubMix[2];\n    let invSubMix3 = this.invSubMix[3];\n\n    let initVector = this.uint8ArrayToUint32Array_(aesIV);\n    let initVector0 = initVector[0];\n    let initVector1 = initVector[1];\n    let initVector2 = initVector[2];\n    let initVector3 = initVector[3];\n\n    let inputInt32 = new Int32Array(inputArrayBuffer);\n    let outputInt32 = new Int32Array(inputInt32.length);\n\n    let t0, t1, t2, t3;\n    let s0, s1, s2, s3;\n    let inputWords0, inputWords1, inputWords2, inputWords3;\n\n    var ksRow, i;\n\n    while (offset < inputInt32.length) {\n      inputWords0 = this.networkToHostOrderSwap(inputInt32[offset]);\n      inputWords1 = this.networkToHostOrderSwap(inputInt32[offset + 1]);\n      inputWords2 = this.networkToHostOrderSwap(inputInt32[offset + 2]);\n      inputWords3 = this.networkToHostOrderSwap(inputInt32[offset + 3]);\n\n      s0 = inputWords0 ^ invKeySchedule[0];\n      s1 = inputWords3 ^ invKeySchedule[1];\n      s2 = inputWords2 ^ invKeySchedule[2];\n      s3 = inputWords1 ^ invKeySchedule[3];\n\n      ksRow = 4;\n\n      // Iterate through the rounds of decryption\n      for (i = 1; i < nRounds; i++) {\n        t0 = invSubMix0[s0 >>> 24] ^ invSubMix1[(s1 >> 16) & 0xff] ^ invSubMix2[(s2 >> 8) & 0xff] ^ invSubMix3[s3 & 0xff] ^ invKeySchedule[ksRow];\n        t1 = invSubMix0[s1 >>> 24] ^ invSubMix1[(s2 >> 16) & 0xff] ^ invSubMix2[(s3 >> 8) & 0xff] ^ invSubMix3[s0 & 0xff] ^ invKeySchedule[ksRow + 1];\n        t2 = invSubMix0[s2 >>> 24] ^ invSubMix1[(s3 >> 16) & 0xff] ^ invSubMix2[(s0 >> 8) & 0xff] ^ invSubMix3[s1 & 0xff] ^ invKeySchedule[ksRow + 2];\n        t3 = invSubMix0[s3 >>> 24] ^ invSubMix1[(s0 >> 16) & 0xff] ^ invSubMix2[(s1 >> 8) & 0xff] ^ invSubMix3[s2 & 0xff] ^ invKeySchedule[ksRow + 3];\n        // Update state\n        s0 = t0;\n        s1 = t1;\n        s2 = t2;\n        s3 = t3;\n\n        ksRow = ksRow + 4;\n      }\n\n      // Shift rows, sub bytes, add round key\n      t0 = ((invSBOX[s0 >>> 24] << 24) ^ (invSBOX[(s1 >> 16) & 0xff] << 16) ^ (invSBOX[(s2 >> 8) & 0xff] << 8) ^ invSBOX[s3 & 0xff]) ^ invKeySchedule[ksRow];\n      t1 = ((invSBOX[s1 >>> 24] << 24) ^ (invSBOX[(s2 >> 16) & 0xff] << 16) ^ (invSBOX[(s3 >> 8) & 0xff] << 8) ^ invSBOX[s0 & 0xff]) ^ invKeySchedule[ksRow + 1];\n      t2 = ((invSBOX[s2 >>> 24] << 24) ^ (invSBOX[(s3 >> 16) & 0xff] << 16) ^ (invSBOX[(s0 >> 8) & 0xff] << 8) ^ invSBOX[s1 & 0xff]) ^ invKeySchedule[ksRow + 2];\n      t3 = ((invSBOX[s3 >>> 24] << 24) ^ (invSBOX[(s0 >> 16) & 0xff] << 16) ^ (invSBOX[(s1 >> 8) & 0xff] << 8) ^ invSBOX[s2 & 0xff]) ^ invKeySchedule[ksRow + 3];\n      ksRow = ksRow + 3;\n\n      // Write\n      outputInt32[offset] = this.networkToHostOrderSwap(t0 ^ initVector0);\n      outputInt32[offset + 1] = this.networkToHostOrderSwap(t3 ^ initVector1);\n      outputInt32[offset + 2] = this.networkToHostOrderSwap(t2 ^ initVector2);\n      outputInt32[offset + 3] = this.networkToHostOrderSwap(t1 ^ initVector3);\n\n      // reset initVector to last 4 unsigned int\n      initVector0 = inputWords0;\n      initVector1 = inputWords1;\n      initVector2 = inputWords2;\n      initVector3 = inputWords3;\n\n      offset = offset + 4;\n    }\n\n    return outputInt32.buffer;\n  }\n\n  destroy() {\n    this.key = undefined;\n    this.keySize = undefined;\n    this.ksRows = undefined;\n\n    this.sBox = undefined;\n    this.invSBox = undefined;\n    this.subMix = undefined;\n    this.invSubMix = undefined;\n    this.keySchedule = undefined;\n    this.invKeySchedule = undefined;\n\n    this.rcon = undefined;\n  }\n}\n\nexport default AESDecryptor;\n",
    "import AESCrypto from './aes-crypto';\nimport FastAESKey from './fast-aes-key';\nimport AESDecryptor from './aes-decryptor';\n\nimport {ErrorTypes, ErrorDetails} from '../errors';\nimport {logger} from '../utils/logger';\n\nclass Decrypter {\n  constructor(hls) {\n    this.hls = hls;\n    try {\n      const browserCrypto = window ? window.crypto : crypto;\n      this.subtle = browserCrypto.subtle || browserCrypto.webkitSubtle;\n    } catch (e) {}\n\n    this.disableWebCrypto = !this.supportsWebCrypto();\n  }\n\n  supportsWebCrypto() {\n    return this.subtle && window.location.protocol === 'https:';\n  }\n\n  decrypt(data, key, iv, callback) {\n    if (this.disableWebCrypto && this.hls.config.enableSoftwareAES) {\n      logger.log('decrypting by JavaScript Implementation');\n      if (!this.decryptor) {\n        this.decryptor = new AESDecryptor();\n      }\n      this.decryptor.expandKey(key);\n      callback(this.decryptor.decrypt(data, 0, iv));\n    }\n    else {\n      logger.log('decrypting by WebCrypto API');\n\n      if (this.key !== key) {\n        this.key = key;\n        this.fastAesKey = new FastAESKey(key);\n      }\n\n      this.fastAesKey.expandKey().\n        then((aesKey) => {\n          // decrypt using web crypto\n          let crypto = new AESCrypto(iv);\n          crypto.decrypt(data, aesKey).\n            then((result) => {\n              callback(result);\n            });\n        }).\n        catch ((err) => {\n          this.onWebCryptoError(err, data, key, iv, callback);\n        });\n    }\n  }\n\n  onWebCryptoError(err, data, key, iv, callback) {\n    if (this.hls.config.enableSoftwareAES) {\n      logger.log('disabling to use WebCrypto API');\n      this.disableWebCrypto = true;\n      this.decrypt(data, key, iv, callback);\n    }\n    else {\n      logger.error(`decrypting error : ${err.message}`);\n      this.hls.trigger(Event.ERROR, {type : ErrorTypes.MEDIA_ERROR, details : ErrorDetails.FRAG_DECRYPT_ERROR, fatal : true, reason : err.message});\n    }\n  }\n\n  destroy() {\n    if (this.decryptor) {\n      this.decryptor.destroy();\n      this.decryptor = undefined;\n    }\n  }\n}\n\nexport default Decrypter;\n",
    "class FastAESKey {\n  constructor(key) {\n    this.key = key;\n  }\n\n  expandKey() {\n    return window.crypto.subtle.importKey('raw', this.key, {name: 'AES-CBC'}, false, ['encrypt', 'decrypt']);\n  }\n}\n\nexport default FastAESKey;\n",
    "/**\n * AAC demuxer\n */\nimport ADTS from './adts';\nimport {logger} from '../utils/logger';\nimport ID3 from '../demux/id3';\n\n class AACDemuxer {\n\n  constructor(observer, id, remuxerClass, config) {\n    this.observer = observer;\n    this.id = id;\n    this.remuxerClass = remuxerClass;\n    this.config = config;\n    this.remuxer = new this.remuxerClass(observer,id, config);\n    this.insertDiscontinuity();\n  }\n\n  insertDiscontinuity() {\n    this._aacTrack = {container : 'audio/adts', type: 'audio', id :-1, sequenceNumber: 0, samples : [], len : 0};\n  }\n\n  // Source for probe info - https://wiki.multimedia.cx/index.php?title=ADTS\n  static probe(data) {\n    var id3 = new ID3(data), offset, len;\n    for ( offset = id3.length || 0, len = data.length; offset < len - 1; offset++) {\n      // ADTS Header is | 1111 1111 | 1111 X00X | where X can be either 0 or 1\n      if ((data[offset] === 0xff) && (data[offset+1] & 0xf6) === 0xf0) {\n        //logger.log('ADTS sync word found !');\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // feed incoming data to the front of the parsing pipeline\n  push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration,accurateTimeOffset) {\n    var track,\n        id3 = new ID3(data),\n        pts = 90 * id3.timeStamp || timeOffset * 90000,\n        config, frameLength, frameDuration, frameIndex, offset, headerLength, stamp, len, aacSample;\n\n    let contiguous = false;\n    if (cc !== this.lastCC) {\n      logger.log(`${this.id} discontinuity detected`);\n      this.lastCC = cc;\n      this.insertDiscontinuity();\n      this.remuxer.switchLevel();\n      this.remuxer.insertDiscontinuity();\n    } else if (level !== this.lastLevel) {\n      logger.log('audio track switch detected');\n      this.lastLevel = level;\n      this.remuxer.switchLevel();\n      this.insertDiscontinuity();\n    } else if (sn === (this.lastSN+1)) {\n      contiguous = true;\n    }\n    track = this._aacTrack;\n    this.lastSN = sn;\n    this.lastLevel = level;\n\n    // Look for ADTS header | 1111 1111 | 1111 X00X | where X can be either 0 or 1\n    for (offset = id3.length || 0, len = data.length; offset < len - 1; offset++) {\n      if ((data[offset] === 0xff) && (data[offset+1] & 0xf6) === 0xf0) {\n        break;\n      }\n    }\n\n    if (!track.audiosamplerate) {\n      config = ADTS.getAudioConfig(this.observer,data, offset, audioCodec);\n      track.config = config.config;\n      track.audiosamplerate = config.samplerate;\n      track.channelCount = config.channelCount;\n      track.codec = config.codec;\n      track.duration = duration;\n      logger.log(`parsed codec:${track.codec},rate:${config.samplerate},nb channel:${config.channelCount}`);\n    }\n    frameIndex = 0;\n    frameDuration = 1024 * 90000 / track.audiosamplerate;\n    while ((offset + 5) < len) {\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the end of the ADTS header\n      headerLength = (!!(data[offset + 1] & 0x01) ? 7 : 9);\n      // retrieve frame size\n      frameLength = ((data[offset + 3] & 0x03) << 11) |\n                     (data[offset + 4] << 3) |\n                    ((data[offset + 5] & 0xE0) >>> 5);\n      frameLength  -= headerLength;\n      //stamp = pes.pts;\n\n      if ((frameLength > 0) && ((offset + headerLength + frameLength) <= len)) {\n        stamp = pts + frameIndex * frameDuration;\n        //logger.log(`AAC frame, offset/length/total/pts:${offset+headerLength}/${frameLength}/${data.byteLength}/${(stamp/90).toFixed(0)}`);\n        aacSample = {unit: data.subarray(offset + headerLength, offset + headerLength + frameLength), pts: stamp, dts: stamp};\n        track.samples.push(aacSample);\n        track.len += frameLength;\n        offset += frameLength + headerLength;\n        frameIndex++;\n        // look for ADTS header (0xFFFx)\n        for ( ; offset < (len - 1); offset++) {\n          if ((data[offset] === 0xff) && ((data[offset + 1] & 0xf0) === 0xf0)) {\n            break;\n          }\n        }\n      } else {\n        break;\n      }\n    }\n    var id3Track = (id3.payload) ? { samples : [ { pts: pts, dts : pts, unit : id3.payload} ] } : { samples: [] };\n    this.remuxer.remux(level, sn , this._aacTrack, {samples : []}, id3Track, { samples: [] }, timeOffset, contiguous,accurateTimeOffset);\n  }\n\n  destroy() {\n  }\n\n}\n\nexport default AACDemuxer;\n",
    "/**\n *  ADTS parser helper\n */\nimport {logger} from '../utils/logger';\nimport {ErrorTypes, ErrorDetails} from '../errors';\n\n class ADTS {\n\n  static getAudioConfig(observer, data, offset, audioCodec) {\n    var adtsObjectType, // :int\n        adtsSampleingIndex, // :int\n        adtsExtensionSampleingIndex, // :int\n        adtsChanelConfig, // :int\n        config,\n        userAgent = navigator.userAgent.toLowerCase(),\n        adtsSampleingRates = [\n            96000, 88200,\n            64000, 48000,\n            44100, 32000,\n            24000, 22050,\n            16000, 12000,\n            11025, 8000,\n            7350];\n    // byte 2\n    adtsObjectType = ((data[offset + 2] & 0xC0) >>> 6) + 1;\n    adtsSampleingIndex = ((data[offset + 2] & 0x3C) >>> 2);\n    if(adtsSampleingIndex > adtsSampleingRates.length-1) {\n      observer.trigger(Event.ERROR, {type: ErrorTypes.MEDIA_ERROR, details: ErrorDetails.FRAG_PARSING_ERROR, fatal: true, reason: `invalid ADTS sampling index:${adtsSampleingIndex}`});\n      return;\n    }\n    adtsChanelConfig = ((data[offset + 2] & 0x01) << 2);\n    // byte 3\n    adtsChanelConfig |= ((data[offset + 3] & 0xC0) >>> 6);\n    logger.log(`manifest codec:${audioCodec},ADTS data:type:${adtsObjectType},sampleingIndex:${adtsSampleingIndex}[${adtsSampleingRates[adtsSampleingIndex]}Hz],channelConfig:${adtsChanelConfig}`);\n    // firefox/Opera: freq less than 24kHz = AAC SBR (HE-AAC)\n    if (/firefox|OPR/i.test(userAgent)) {\n      if (adtsSampleingIndex >= 6) {\n        adtsObjectType = 5;\n        config = new Array(4);\n        // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\n        // there is a factor 2 between frame sample rate and output sample rate\n        // multiply frequency by 2 (see table below, equivalent to substract 3)\n        adtsExtensionSampleingIndex = adtsSampleingIndex - 3;\n      } else {\n        adtsObjectType = 2;\n        config = new Array(2);\n        adtsExtensionSampleingIndex = adtsSampleingIndex;\n      }\n      // Android : always use AAC\n    } else if (userAgent.indexOf('android') !== -1) {\n      adtsObjectType = 2;\n      config = new Array(2);\n      adtsExtensionSampleingIndex = adtsSampleingIndex;\n    } else {\n      /*  for other browsers (Chrome/Vivaldi ...)\n          always force audio type to be HE-AAC SBR, as some browsers do not support audio codec switch properly (like Chrome ...)\n      */\n      adtsObjectType = 5;\n      config = new Array(4);\n      // if (manifest codec is HE-AAC or HE-AACv2) OR (manifest codec not specified AND frequency less than 24kHz)\n      if ((audioCodec && ((audioCodec.indexOf('mp4a.40.29') !== -1) ||\n                          (audioCodec.indexOf('mp4a.40.5') !== -1))) ||\n          (!audioCodec && adtsSampleingIndex >= 6)) {\n        // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\n        // there is a factor 2 between frame sample rate and output sample rate\n        // multiply frequency by 2 (see table below, equivalent to substract 3)\n        adtsExtensionSampleingIndex = adtsSampleingIndex - 3;\n      } else {\n        // if (manifest codec is AAC) AND (frequency less than 24kHz AND nb channel is 1) OR (manifest codec not specified and mono audio)\n        // Chrome fails to play back with low frequency AAC LC mono when initialized with HE-AAC.  This is not a problem with stereo.\n        if (audioCodec && audioCodec.indexOf('mp4a.40.2') !== -1 && (adtsSampleingIndex >= 6 && adtsChanelConfig === 1) ||\n            (!audioCodec && adtsChanelConfig === 1)) {\n          adtsObjectType = 2;\n          config = new Array(2);\n        }\n        adtsExtensionSampleingIndex = adtsSampleingIndex;\n      }\n    }\n    /* refer to http://wiki.multimedia.cx/index.php?title=MPEG-4_Audio#Audio_Specific_Config\n        ISO 14496-3 (AAC).pdf - Table 1.13 — Syntax of AudioSpecificConfig()\n      Audio Profile / Audio Object Type\n      0: Null\n      1: AAC Main\n      2: AAC LC (Low Complexity)\n      3: AAC SSR (Scalable Sample Rate)\n      4: AAC LTP (Long Term Prediction)\n      5: SBR (Spectral Band Replication)\n      6: AAC Scalable\n     sampling freq\n      0: 96000 Hz\n      1: 88200 Hz\n      2: 64000 Hz\n      3: 48000 Hz\n      4: 44100 Hz\n      5: 32000 Hz\n      6: 24000 Hz\n      7: 22050 Hz\n      8: 16000 Hz\n      9: 12000 Hz\n      10: 11025 Hz\n      11: 8000 Hz\n      12: 7350 Hz\n      13: Reserved\n      14: Reserved\n      15: frequency is written explictly\n      Channel Configurations\n      These are the channel configurations:\n      0: Defined in AOT Specifc Config\n      1: 1 channel: front-center\n      2: 2 channels: front-left, front-right\n    */\n    // audioObjectType = profile => profile, the MPEG-4 Audio Object Type minus 1\n    config[0] = adtsObjectType << 3;\n    // samplingFrequencyIndex\n    config[0] |= (adtsSampleingIndex & 0x0E) >> 1;\n    config[1] |= (adtsSampleingIndex & 0x01) << 7;\n    // channelConfiguration\n    config[1] |= adtsChanelConfig << 3;\n    if (adtsObjectType === 5) {\n      // adtsExtensionSampleingIndex\n      config[1] |= (adtsExtensionSampleingIndex & 0x0E) >> 1;\n      config[2] = (adtsExtensionSampleingIndex & 0x01) << 7;\n      // adtsObjectType (force to 2, chrome is checking that object type is less than 5 ???\n      //    https://chromium.googlesource.com/chromium/src.git/+/master/media/formats/mp4/aac.cc\n      config[2] |= 2 << 2;\n      config[3] = 0;\n    }\n    return {config: config, samplerate: adtsSampleingRates[adtsSampleingIndex], channelCount: adtsChanelConfig, codec: ('mp4a.40.' + adtsObjectType)};\n  }\n}\n\nexport default ADTS;\n",
    "/*  inline demuxer.\n *   probe fragments and instantiate appropriate demuxer depending on content type (TSDemuxer, AACDemuxer, ...)\n */\n\nimport Event from '../events';\nimport {ErrorTypes, ErrorDetails} from '../errors';\nimport AACDemuxer from '../demux/aacdemuxer';\nimport TSDemuxer from '../demux/tsdemuxer';\nimport MP4Remuxer from '../remux/mp4-remuxer';\nimport PassThroughRemuxer from '../remux/passthrough-remuxer';\n\nclass DemuxerInline {\n\n  constructor(hls,id, typeSupported, config=null) {\n    this.hls = hls;\n    this.id = id;\n    this.config = this.hls.config || config;\n    this.typeSupported = typeSupported;\n  }\n\n  destroy() {\n    var demuxer = this.demuxer;\n    if (demuxer) {\n      demuxer.destroy();\n    }\n  }\n\n  push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration,accurateTimeOffset) {\n    var demuxer = this.demuxer;\n    if (!demuxer) {\n      let hls = this.hls,\n          id = this.id;\n      // probe for content type\n      if (TSDemuxer.probe(data)) {\n        if (this.typeSupported.mp2t === true) {\n          demuxer = new TSDemuxer(hls, id, PassThroughRemuxer, this.config);\n        } else {\n          demuxer = new TSDemuxer(hls, id, MP4Remuxer, this.config);\n        }\n      } else if(AACDemuxer.probe(data)) {\n        demuxer = new AACDemuxer(hls, id, MP4Remuxer, this.config);\n      } else {\n        hls.trigger(Event.ERROR, {type : ErrorTypes.MEDIA_ERROR, id : id, details: ErrorDetails.FRAG_PARSING_ERROR, fatal: true, reason: 'no demux matching with content found'});\n        return;\n      }\n      this.demuxer = demuxer;\n    }\n    demuxer.push(data,audioCodec,videoCodec,timeOffset,cc,level,sn,duration,accurateTimeOffset);\n  }\n}\n\nexport default DemuxerInline;\n",
    "/* demuxer web worker.\n *  - listen to worker message, and trigger DemuxerInline upon reception of Fragments.\n *  - provides MP4 Boxes back to main thread using [transferable objects](https://developers.google.com/web/updates/2011/12/Transferable-Objects-Lightning-Fast) in order to minimize message passing overhead.\n */\n\n import DemuxerInline from '../demux/demuxer-inline';\n import Event from '../events';\n import {enableLogs} from '../utils/logger';\n import EventEmitter from 'events';\n\nvar DemuxerWorker = function (self) {\n  // observer setup\n  var observer = new EventEmitter();\n  observer.trigger = function trigger (event, ...data) {\n    observer.emit(event, event, ...data);\n  };\n\n  observer.off = function off (event, ...data) {\n    observer.removeListener(event, ...data);\n  };\n\n  var forwardMessage = function(ev,data) {\n    self.postMessage({event: ev, data:data });\n  };\n\n  self.addEventListener('message', function (ev) {\n    var data = ev.data;\n    //console.log('demuxer cmd:' + data.cmd);\n    switch (data.cmd) {\n      case 'init':\n        let config = JSON.parse(data.config);\n        self.demuxer = new DemuxerInline(observer, data.id, data.typeSupported, config);\n        try {\n          enableLogs(config.debug);\n        } catch(err) {\n          console.warn('demuxerWorker: unable to enable logs');\n        }\n        // signal end of worker init\n        forwardMessage('init',null);\n        break;\n      case 'demux':\n        self.demuxer.push(new Uint8Array(data.data), data.audioCodec, data.videoCodec, data.timeOffset, data.cc, data.level, data.sn, data.duration,data.accurateTimeOffset);\n        break;\n      default:\n        break;\n    }\n  });\n\n  // forward events to main thread\n  observer.on(Event.FRAG_PARSING_INIT_SEGMENT, forwardMessage);\n  observer.on(Event.FRAG_PARSED, forwardMessage);\n  observer.on(Event.ERROR, forwardMessage);\n  observer.on(Event.FRAG_PARSING_METADATA, forwardMessage);\n  observer.on(Event.FRAG_PARSING_USERDATA, forwardMessage);\n\n  // special case for FRAG_PARSING_DATA: pass data1/data2 as transferable object (no copy)\n  observer.on(Event.FRAG_PARSING_DATA, function(ev, data) {\n    let data1 = data.data1.buffer, data2 = data.data2.buffer;\n    // remove data1 and data2 reference from data to avoid copying them ...\n    delete data.data1;\n    delete data.data2;\n    self.postMessage({event: ev, data:data , data1 : data1, data2 : data2},[data1, data2]);\n  });\n};\n\nexport default DemuxerWorker;\n\n",
    "import Event from '../events';\nimport DemuxerInline from '../demux/demuxer-inline';\nimport DemuxerWorker from '../demux/demuxer-worker';\nimport {logger} from '../utils/logger';\nimport Decrypter from '../crypt/decrypter';\nimport {ErrorTypes, ErrorDetails} from '../errors';\n\nclass Demuxer {\n\n  constructor(hls, id) {\n    this.hls = hls;\n    this.id = id;\n    var typeSupported = {\n      mp4 : MediaSource.isTypeSupported('video/mp4'),\n      mp2t : hls.config.enableMP2TPassThrough && MediaSource.isTypeSupported('video/mp2t')\n    };\n    if (hls.config.enableWorker && (typeof(Worker) !== 'undefined')) {\n        logger.log('demuxing in webworker');\n        let w;\n        try {\n          let work = require('webworkify');\n          w = this.w = work(DemuxerWorker);\n          this.onwmsg = this.onWorkerMessage.bind(this);\n          w.addEventListener('message', this.onwmsg);\n          w.onerror = function(event) { hls.trigger(Event.ERROR, {type: ErrorTypes.OTHER_ERROR, details: ErrorDetails.INTERNAL_EXCEPTION, fatal: true, event : 'demuxerWorker', err : { message : event.message + ' (' + event.filename + ':' + event.lineno + ')' }});};\n          w.postMessage({cmd: 'init', typeSupported : typeSupported, id : id, config: JSON.stringify(hls.config)});\n        } catch(err) {\n          logger.error('error while initializing DemuxerWorker, fallback on DemuxerInline');\n          if (w) {\n            // revoke the Object URL that was used to create demuxer worker, so as not to leak it\n            URL.revokeObjectURL(w.objectURL);\n          }\n          this.demuxer = new DemuxerInline(hls,id,typeSupported);\n        }\n      } else {\n        this.demuxer = new DemuxerInline(hls,id,typeSupported);\n      }\n      this.demuxInitialized = true;\n  }\n\n  destroy() {\n    let w = this.w;\n    if (w) {\n      w.removeEventListener('message', this.onwmsg);\n      w.terminate();\n      this.w = null;\n    } else {\n      let demuxer = this.demuxer;\n      if (demuxer) {\n        demuxer.destroy();\n        this.demuxer = null;\n      }\n    }\n    let decrypter = this.decrypter;\n    if (decrypter) {\n      decrypter.destroy();\n      this.decrypter = null;\n    }\n  }\n\n  pushDecrypted(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration,accurateTimeOffset) {\n    let w = this.w;\n    if (w) {\n      // post fragment payload as transferable objects (no copy)\n      w.postMessage({cmd: 'demux', data: data, audioCodec: audioCodec, videoCodec: videoCodec, timeOffset: timeOffset, cc: cc, level: level, sn : sn, duration: duration, accurateTimeOffset : accurateTimeOffset}, [data]);\n    } else {\n      let demuxer = this.demuxer;\n      if (demuxer) {\n        demuxer.push(new Uint8Array(data), audioCodec, videoCodec, timeOffset, cc, level, sn, duration,accurateTimeOffset);\n      }\n    }\n  }\n\n  push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration, decryptdata, accurateTimeOffset) {\n    if ((data.byteLength > 0) && (decryptdata != null) && (decryptdata.key != null) && (decryptdata.method === 'AES-128')) {\n      if (this.decrypter == null) {\n        this.decrypter = new Decrypter(this.hls);\n      }\n      var localthis = this;\n      var startTime = performance.now();\n      this.decrypter.decrypt(data, decryptdata.key.buffer, decryptdata.iv.buffer, function (decryptedData) {\n        localthis.hls.trigger(Event.FRAG_DECRYPTED, { level : level, sn : sn, stats: { tstart: startTime, tdecrypt: performance.now() } });\n        localthis.pushDecrypted(decryptedData, audioCodec, videoCodec, timeOffset, cc, level, sn, duration, accurateTimeOffset);\n      });\n    } else {\n      this.pushDecrypted(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration,accurateTimeOffset);\n    }\n  }\n\n  onWorkerMessage(ev) {\n    let data = ev.data,\n        hls = this.hls;\n    //console.log('onWorkerMessage:' + data.event);\n    switch(data.event) {\n      case 'init':\n        // revoke the Object URL that was used to create demuxer worker, so as not to leak it\n        URL.revokeObjectURL(this.w.objectURL);\n        break;\n      // special case for FRAG_PARSING_DATA: data1 and data2 are transferable objects\n      case Event.FRAG_PARSING_DATA:\n        data.data.data1 = new Uint8Array(data.data1);\n        data.data.data2 = new Uint8Array(data.data2);\n        /* falls through */\n      default:\n        hls.trigger(data.event, data.data);\n        break;\n    }\n  }\n}\n\nexport default Demuxer;\n\n",
    "/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding scheme used by h264.\n*/\n\nimport {logger} from '../utils/logger';\n\nclass ExpGolomb {\n\n  constructor(data) {\n    this.data = data;\n    // the number of bytes left to examine in this.data\n    this.bytesAvailable = this.data.byteLength;\n    // the current word being examined\n    this.word = 0; // :uint\n    // the number of bits left to examine in the current word\n    this.bitsAvailable = 0; // :uint\n  }\n\n  // ():void\n  loadWord() {\n    var\n      position = this.data.byteLength - this.bytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, this.bytesAvailable);\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n    workingBytes.set(this.data.subarray(position, position + availableBytes));\n    this.word = new DataView(workingBytes.buffer).getUint32(0);\n    // track the amount of this.data that has been processed\n    this.bitsAvailable = availableBytes * 8;\n    this.bytesAvailable -= availableBytes;\n  }\n\n  // (count:int):void\n  skipBits(count) {\n    var skipBytes; // :int\n    if (this.bitsAvailable > count) {\n      this.word <<= count;\n      this.bitsAvailable -= count;\n    } else {\n      count -= this.bitsAvailable;\n      skipBytes = count >> 3;\n      count -= (skipBytes >> 3);\n      this.bytesAvailable -= skipBytes;\n      this.loadWord();\n      this.word <<= count;\n      this.bitsAvailable -= count;\n    }\n  }\n\n  // (size:int):uint\n  readBits(size) {\n    var\n      bits = Math.min(this.bitsAvailable, size), // :uint\n      valu = this.word >>> (32 - bits); // :uint\n    if (size > 32) {\n      logger.error('Cannot read more than 32 bits at a time');\n    }\n    this.bitsAvailable -= bits;\n    if (this.bitsAvailable > 0) {\n      this.word <<= bits;\n    } else if (this.bytesAvailable > 0) {\n      this.loadWord();\n    }\n    bits = size - bits;\n    if (bits > 0 && this.bitsAvailable) {\n      return valu << bits | this.readBits(bits);\n    } else {\n      return valu;\n    }\n  }\n\n  // ():uint\n  skipLZ() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < this.bitsAvailable; ++leadingZeroCount) {\n      if (0 !== (this.word & (0x80000000 >>> leadingZeroCount))) {\n        // the first bit of working word is 1\n        this.word <<= leadingZeroCount;\n        this.bitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n    // we exhausted word and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLZ();\n  }\n\n  // ():void\n  skipUEG() {\n    this.skipBits(1 + this.skipLZ());\n  }\n\n  // ():void\n  skipEG() {\n    this.skipBits(1 + this.skipLZ());\n  }\n\n  // ():uint\n  readUEG() {\n    var clz = this.skipLZ(); // :uint\n    return this.readBits(clz + 1) - 1;\n  }\n\n  // ():int\n  readEG() {\n    var valu = this.readUEG(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    } else {\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }\n  }\n\n  // Some convenience functions\n  // :Boolean\n  readBoolean() {\n    return 1 === this.readBits(1);\n  }\n\n  // ():int\n  readUByte() {\n    return this.readBits(8);\n  }\n\n  // ():int\n  readUShort() {\n    return this.readBits(16);\n  }\n    // ():int\n  readUInt() {\n    return this.readBits(32);\n  }\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList(count) {\n    var\n      lastScale = 8,\n      nextScale = 8,\n      j,\n      deltaScale;\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = this.readEG();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n      lastScale = (nextScale === 0) ? lastScale : nextScale;\n    }\n  }\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSPS() {\n    var\n      frameCropLeftOffset = 0,\n      frameCropRightOffset = 0,\n      frameCropTopOffset = 0,\n      frameCropBottomOffset = 0,\n      sarScale = 1,\n      profileIdc,profileCompat,levelIdc,\n      numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\n      picHeightInMapUnitsMinus1,\n      frameMbsOnlyFlag,\n      scalingListCount,\n      i;\n    this.readUByte();\n    profileIdc = this.readUByte(); // profile_idc\n    profileCompat = this.readBits(5); // constraint_set[0-4]_flag, u(5)\n    this.skipBits(3); // reserved_zero_3bits u(3),\n    levelIdc = this.readUByte(); //level_idc u(8)\n    this.skipUEG(); // seq_parameter_set_id\n    // some profiles have more optional data we don't need\n    if (profileIdc === 100 ||\n        profileIdc === 110 ||\n        profileIdc === 122 ||\n        profileIdc === 244 ||\n        profileIdc === 44  ||\n        profileIdc === 83  ||\n        profileIdc === 86  ||\n        profileIdc === 118 ||\n        profileIdc === 128) {\n      var chromaFormatIdc = this.readUEG();\n      if (chromaFormatIdc === 3) {\n        this.skipBits(1); // separate_colour_plane_flag\n      }\n      this.skipUEG(); // bit_depth_luma_minus8\n      this.skipUEG(); // bit_depth_chroma_minus8\n      this.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (this.readBoolean()) { // seq_scaling_matrix_present_flag\n        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (this.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              this.skipScalingList(16);\n            } else {\n              this.skipScalingList(64);\n            }\n          }\n        }\n      }\n    }\n    this.skipUEG(); // log2_max_frame_num_minus4\n    var picOrderCntType = this.readUEG();\n    if (picOrderCntType === 0) {\n      this.readUEG(); //log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      this.skipBits(1); // delta_pic_order_always_zero_flag\n      this.skipEG(); // offset_for_non_ref_pic\n      this.skipEG(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = this.readUEG();\n      for(i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        this.skipEG(); // offset_for_ref_frame[ i ]\n      }\n    }\n    this.skipUEG(); // max_num_ref_frames\n    this.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n    picWidthInMbsMinus1 = this.readUEG();\n    picHeightInMapUnitsMinus1 = this.readUEG();\n    frameMbsOnlyFlag = this.readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      this.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n    this.skipBits(1); // direct_8x8_inference_flag\n    if (this.readBoolean()) { // frame_cropping_flag\n      frameCropLeftOffset = this.readUEG();\n      frameCropRightOffset = this.readUEG();\n      frameCropTopOffset = this.readUEG();\n      frameCropBottomOffset = this.readUEG();\n    }\n    if (this.readBoolean()) {\n      // vui_parameters_present_flag\n      if (this.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        let sarRatio;\n        const aspectRatioIdc = this.readUByte();\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1,1]; break;\n          case 2: sarRatio = [12,11]; break;\n          case 3: sarRatio = [10,11]; break;\n          case 4: sarRatio = [16,11]; break;\n          case 5: sarRatio = [40,33]; break;\n          case 6: sarRatio = [24,11]; break;\n          case 7: sarRatio = [20,11]; break;\n          case 8: sarRatio = [32,11]; break;\n          case 9: sarRatio = [80,33]; break;\n          case 10: sarRatio = [18,11]; break;\n          case 11: sarRatio = [15,11]; break;\n          case 12: sarRatio = [64,33]; break;\n          case 13: sarRatio = [160,99]; break;\n          case 14: sarRatio = [4,3]; break;\n          case 15: sarRatio = [3,2]; break;\n          case 16: sarRatio = [2,1]; break;\n          case 255: {\n            sarRatio = [this.readUByte() << 8 | this.readUByte(), this.readUByte() << 8 | this.readUByte()];\n            break;\n          }\n        }\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n    return {\n      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - ((frameMbsOnlyFlag? 2 : 4) * (frameCropTopOffset + frameCropBottomOffset))\n    };\n  }\n\n  readSliceType() {\n    // skip NALu type\n    this.readUByte();\n    // discard first_mb_in_slice\n    this.readUEG();\n    // return slice_type\n    return this.readUEG();\n  }\n}\n\nexport default ExpGolomb;\n",
    "/**\n * ID3 parser\n */\nimport {logger} from '../utils/logger';\n//import Hex from '../utils/hex';\n\n class ID3 {\n\n  constructor(data) {\n    this._hasTimeStamp = false;\n    var offset = 0, byte1,byte2,byte3,byte4,tagSize,endPos,header,len;\n      do {\n        header = this.readUTF(data,offset,3);\n        offset+=3;\n          // first check for ID3 header\n          if (header === 'ID3') {\n              // skip 24 bits\n              offset += 3;\n              // retrieve tag(s) length\n              byte1 = data[offset++] & 0x7f;\n              byte2 = data[offset++] & 0x7f;\n              byte3 = data[offset++] & 0x7f;\n              byte4 = data[offset++] & 0x7f;\n              tagSize = (byte1 << 21) + (byte2 << 14) + (byte3 << 7) + byte4;\n              endPos = offset + tagSize;\n              //logger.log(`ID3 tag found, size/end: ${tagSize}/${endPos}`);\n\n              // read ID3 tags\n              this._parseID3Frames(data, offset,endPos);\n              offset = endPos;\n          } else if (header === '3DI') {\n              // http://id3.org/id3v2.4.0-structure chapter 3.4.   ID3v2 footer\n              offset += 7;\n                  logger.log(`3DI footer found, end: ${offset}`);\n          } else {\n              offset -= 3;\n              len = offset;\n                  if (len) {\n                      //logger.log(`ID3 len: ${len}`);\n                      if (!this.hasTimeStamp) {\n                          logger.warn('ID3 tag found, but no timestamp');\n                      }\n                      this._length = len;\n                      this._payload = data.subarray(0,len);\n                  }\n              return;\n          }\n      } while (true);\n  }\n\n  readUTF(data,start,len) {\n\n    var result = '',offset = start, end = start + len;\n    do {\n      result += String.fromCharCode(data[offset++]);\n    } while(offset < end);\n    return result;\n  }\n\n  _parseID3Frames(data,offset,endPos) {\n    var tagId,tagLen,tagStart,tagFlags,timestamp;\n    while(offset + 8 <= endPos) {\n      tagId = this.readUTF(data,offset,4);\n      offset +=4;\n\n      tagLen = data[offset++] << 24 +\n                data[offset++] << 16 +\n                data[offset++] << 8 +\n                data[offset++];\n\n      tagFlags = data[offset++] << 8 +\n                  data[offset++];\n\n      tagStart = offset;\n      //logger.log(\"ID3 tag id:\" + tagId);\n      switch(tagId) {\n        case 'PRIV':\n            //logger.log('parse frame:' + Hex.hexDump(data.subarray(offset,endPos)));\n            // owner should be \"com.apple.streaming.transportStreamTimestamp\"\n            if (this.readUTF(data,offset,44) === 'com.apple.streaming.transportStreamTimestamp') {\n                offset+=44;\n                // smelling even better ! we found the right descriptor\n                // skip null character (string end) + 3 first bytes\n                offset+= 4;\n\n                // timestamp is 33 bit expressed as a big-endian eight-octet number, with the upper 31 bits set to zero.\n                var pts33Bit  = data[offset++] & 0x1;\n                this._hasTimeStamp = true;\n\n                timestamp = ((data[offset++] << 23) +\n                             (data[offset++] << 15) +\n                             (data[offset++] <<  7) +\n                             data[offset++]) /45;\n\n                if (pts33Bit) {\n                    timestamp   += 47721858.84; // 2^32 / 90\n                }\n                timestamp = Math.round(timestamp);\n                logger.trace(`ID3 timestamp found: ${timestamp}`);\n                this._timeStamp = timestamp;\n            }\n            break;\n        default:\n            break;\n      }\n    }\n  }\n\n  get hasTimeStamp() {\n    return this._hasTimeStamp;\n  }\n\n  get timeStamp() {\n    return this._timeStamp;\n  }\n\n  get length() {\n    return this._length;\n  }\n\n  get payload() {\n    return this._payload;\n  }\n\n}\n\nexport default ID3;\n\n",
    "/**\n * highly optimized TS demuxer:\n * parse PAT, PMT\n * extract PES packet from audio and video PIDs\n * extract AVC/H264 NAL units and AAC/ADTS samples from PES packet\n * trigger the remuxer upon parsing completion\n * it also tries to workaround as best as it can audio codec switch (HE-AAC to AAC and vice versa), without having to restart the MediaSource.\n * it also controls the remuxing process :\n * upon discontinuity or level switch detection, it will also notifies the remuxer so that it can reset its state.\n*/\n\n import ADTS from './adts';\n import Event from '../events';\n import ExpGolomb from './exp-golomb';\n// import Hex from '../utils/hex';\n import {logger} from '../utils/logger';\n import {ErrorTypes, ErrorDetails} from '../errors';\n\n class TSDemuxer {\n\n  constructor(observer, id, remuxerClass, config) {\n    this.observer = observer;\n    this.id = id;\n    this.remuxerClass = remuxerClass;\n    this.config = config;\n    this.lastCC = 0;\n    this.remuxer = new this.remuxerClass(observer, id, config);\n  }\n\n  static probe(data) {\n    // a TS fragment should contain at least 3 TS packets, a PAT, a PMT, and one PID, each starting with 0x47\n    if (data.length >= 3*188 && data[0] === 0x47 && data[188] === 0x47 && data[2*188] === 0x47) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  switchLevel() {\n    this.pmtParsed = false;\n    this._pmtId = -1;\n    this._avcTrack = {container : 'video/mp2t', type: 'video', id :-1, sequenceNumber: 0, samples : [], len : 0, dropped : 0};\n    this._aacTrack = {container : 'video/mp2t', type: 'audio', id :-1, sequenceNumber: 0, samples : [], len : 0};\n    this._id3Track = {type: 'id3', id :-1, sequenceNumber: 0, samples : [], len : 0};\n    this._txtTrack = {type: 'text', id: -1, sequenceNumber: 0, samples : [], len : 0};\n    // flush any partial content\n    this.aacOverFlow = null;\n    this.aacLastPTS = null;\n    this.avcSample = null;\n    this.remuxer.switchLevel();\n  }\n\n  insertDiscontinuity() {\n    this.switchLevel();\n    this.remuxer.insertDiscontinuity();\n  }\n\n  // feed incoming data to the front of the parsing pipeline\n  push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration,accurateTimeOffset) {\n    var start, len = data.length, stt, pid, atf, offset,pes,\n        codecsOnly = this.remuxer.passthrough,\n        unknownPIDs = false;\n\n    this.audioCodec = audioCodec;\n    this.videoCodec = videoCodec;\n    this._duration = duration;\n    this.contiguous = false;\n    this.accurateTimeOffset = accurateTimeOffset;\n    if (cc !== this.lastCC) {\n      logger.log('discontinuity detected');\n      this.insertDiscontinuity();\n      this.lastCC = cc;\n    }\n    if (level !== this.lastLevel) {\n      logger.log('level switch detected');\n      this.switchLevel();\n      this.lastLevel = level;\n    } else if (sn === (this.lastSN+1)) {\n      this.contiguous = true;\n    }\n    this.lastSN = sn;\n\n    var pmtParsed = this.pmtParsed,\n        avcTrack = this._avcTrack,\n        aacTrack = this._aacTrack,\n        id3Track = this._id3Track,\n        avcId = avcTrack.id,\n        aacId = aacTrack.id,\n        id3Id = id3Track.id,\n        pmtId = this._pmtId,\n        avcData = avcTrack.pesData,\n        aacData = aacTrack.pesData,\n        id3Data = id3Track.pesData,\n        parsePAT = this._parsePAT,\n        parsePMT = this._parsePMT,\n        parsePES = this._parsePES,\n        parseAVCPES = this._parseAVCPES.bind(this),\n        parseAACPES = this._parseAACPES.bind(this),\n        parseID3PES  = this._parseID3PES.bind(this);\n\n    // don't parse last TS packet if incomplete\n    len -= len % 188;\n    // loop through TS packets\n    for (start = 0; start < len; start += 188) {\n      if (data[start] === 0x47) {\n        stt = !!(data[start + 1] & 0x40);\n        // pid is a 13-bit field starting at the last bit of TS[1]\n        pid = ((data[start + 1] & 0x1f) << 8) + data[start + 2];\n        atf = (data[start + 3] & 0x30) >> 4;\n        // if an adaption field is present, its length is specified by the fifth byte of the TS packet header.\n        if (atf > 1) {\n          offset = start + 5 + data[start + 4];\n          // continue if there is only adaptation field\n          if (offset === (start + 188)) {\n            continue;\n          }\n        } else {\n          offset = start + 4;\n        }\n        switch(pid) {\n          case avcId:\n            if (stt) {\n              if (avcData && (pes = parsePES(avcData))) {\n                parseAVCPES(pes,false);\n                if (codecsOnly) {\n                  // if we have video codec info AND\n                  // if audio PID is undefined OR if we have audio codec info,\n                  // we have all codec info !\n                  if (avcTrack.codec && (aacId === -1 || aacTrack.codec)) {\n                    this.remux(level,sn,data,timeOffset);\n                    return;\n                  }\n                }\n              }\n              avcData = {data: [], size: 0};\n            }\n            if (avcData) {\n              avcData.data.push(data.subarray(offset, start + 188));\n              avcData.size += start + 188 - offset;\n            }\n            break;\n          case aacId:\n            if (stt) {\n              if (aacData && (pes = parsePES(aacData))) {\n                parseAACPES(pes);\n                if (codecsOnly) {\n                  // here we now that we have audio codec info\n                  // if video PID is undefined OR if we have video codec info,\n                  // we have all codec infos !\n                  if (aacTrack.codec && (avcId === -1 || avcTrack.codec)) {\n                    this.remux(level,sn,data,timeOffset);\n                    return;\n                  }\n                }\n              }\n              aacData = {data: [], size: 0};\n            }\n            if (aacData) {\n              aacData.data.push(data.subarray(offset, start + 188));\n              aacData.size += start + 188 - offset;\n            }\n            break;\n          case id3Id:\n            if (stt) {\n              if (id3Data && (pes = parsePES(id3Data))) {\n                parseID3PES(pes);\n              }\n              id3Data = {data: [], size: 0};\n            }\n            if (id3Data) {\n              id3Data.data.push(data.subarray(offset, start + 188));\n              id3Data.size += start + 188 - offset;\n            }\n            break;\n          case 0:\n            if (stt) {\n              offset += data[offset] + 1;\n            }\n            pmtId = this._pmtId = parsePAT(data, offset);\n            break;\n          case pmtId:\n            if (stt) {\n              offset += data[offset] + 1;\n            }\n            let parsedPIDs = parsePMT(data, offset);\n\n            // only update track id if track PID found while parsing PMT\n            // this is to avoid resetting the PID to -1 in case\n            // track PID transiently disappears from the stream\n            // this could happen in case of transient missing audio samples for example\n            avcId = parsedPIDs.avc;\n            if (avcId > 0) {\n              avcTrack.id = avcId;\n            }\n            aacId = parsedPIDs.aac;\n            if (aacId > 0) {\n              aacTrack.id = aacId;\n            }\n            id3Id = parsedPIDs.id3;\n            if (id3Id > 0) {\n              id3Track.id = id3Id;\n            }\n            if (unknownPIDs && !pmtParsed) {\n              logger.log('reparse from beginning');\n              unknownPIDs = false;\n              // we set it to -188, the += 188 in the for loop will reset start to 0\n              start = -188;\n            }\n            pmtParsed = this.pmtParsed = true;\n            break;\n          case 17:\n          case 0x1fff:\n            break;\n          default:\n            unknownPIDs = true;\n            break;\n        }\n      } else {\n        this.observer.trigger(Event.ERROR, {type : ErrorTypes.MEDIA_ERROR, id : this.id, details: ErrorDetails.FRAG_PARSING_ERROR, fatal: false, reason: 'TS packet did not start with 0x47'});\n      }\n    }\n    // try to parse last PES packets\n    if (avcData && (pes = parsePES(avcData))) {\n      parseAVCPES(pes,true);\n      avcTrack.pesData = null;\n    } else {\n      // either avcData null or PES truncated, keep it for next frag parsing\n      avcTrack.pesData = avcData;\n    }\n\n    if (aacData && (pes = parsePES(aacData))) {\n      parseAACPES(pes);\n      aacTrack.pesData = null;\n    } else {\n      if (aacData && aacData.size) {\n        logger.log('last AAC PES packet truncated,might overlap between fragments');\n      }\n     // either aacData null or PES truncated, keep it for next frag parsing\n      aacTrack.pesData = aacData;\n    }\n\n    if (id3Data && (pes = parsePES(id3Data))) {\n      parseID3PES(pes);\n      id3Track.pesData = null;\n    } else {\n      // either id3Data null or PES truncated, keep it for next frag parsing\n      id3Track.pesData = id3Data;\n    }\n    this.remux(level,sn,null,timeOffset);\n  }\n\n  remux(level, sn, data, timeOffset) {\n    let avcTrack = this._avcTrack, samples = avcTrack.samples;\n\n    // compute total/avc sample length and nb of NAL units\n    let trackData = samples.reduce(function(prevSampleData,curSample) {\n      let sampleData = curSample.units.units.reduce(function(prevUnitData,curUnit) {\n      return {\n        len : prevUnitData.len+curUnit.data.length,\n        nbNalu : prevUnitData.nbNalu+1\n        };\n      },{len : 0, nbNalu : 0});\n      curSample.length = sampleData.len;\n      return {\n        len : prevSampleData.len+sampleData.len,\n        nbNalu : prevSampleData.nbNalu+sampleData.nbNalu\n    };},{len : 0, nbNalu : 0});\n     avcTrack.len = trackData.len;\n     avcTrack.nbNalu = trackData.nbNalu;\n    this.remuxer.remux(level, sn, this._aacTrack, this._avcTrack, this._id3Track, this._txtTrack, timeOffset, this.contiguous, this.accurateTimeOffset, data);\n  }\n\n  destroy() {\n    this.switchLevel();\n    this._initPTS = this._initDTS = undefined;\n    this._duration = 0;\n  }\n\n  _parsePAT(data, offset) {\n    // skip the PSI header and parse the first PMT entry\n    return (data[offset + 10] & 0x1F) << 8 | data[offset + 11];\n    //logger.log('PMT PID:'  + this._pmtId);\n  }\n\n  _parsePMT(data, offset) {\n    var sectionLength, tableEnd, programInfoLength, pid, result = { aac : -1, avc : -1, id3 : -1};\n    sectionLength = (data[offset + 1] & 0x0f) << 8 | data[offset + 2];\n    tableEnd = offset + 3 + sectionLength - 4;\n    // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n    programInfoLength = (data[offset + 10] & 0x0f) << 8 | data[offset + 11];\n    // advance the offset to the first entry in the mapping table\n    offset += 12 + programInfoLength;\n    while (offset < tableEnd) {\n      pid = (data[offset + 1] & 0x1F) << 8 | data[offset + 2];\n      switch(data[offset]) {\n        // ISO/IEC 13818-7 ADTS AAC (MPEG-2 lower bit-rate audio)\n        case 0x0f:\n          //logger.log('AAC PID:'  + pid);\n          if (result.aac === -1) {\n            result.aac = pid;\n          }\n          break;\n        // Packetized metadata (ID3)\n        case 0x15:\n          //logger.log('ID3 PID:'  + pid);\n          if (result.id3 === -1) {\n            result.id3 = pid;\n          }\n          break;\n        // ITU-T Rec. H.264 and ISO/IEC 14496-10 (lower bit-rate video)\n        case 0x1b:\n          //logger.log('AVC PID:'  + pid);\n          if (result.avc === -1) {\n            result.avc = pid;\n          }\n          break;\n        case 0x24:\n          logger.warn('HEVC stream type found, not supported for now');\n          break;\n        default:\n          logger.log('unkown stream type:'  + data[offset]);\n          break;\n      }\n      // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n      offset += ((data[offset + 3] & 0x0F) << 8 | data[offset + 4]) + 5;\n    }\n    return result;\n  }\n\n  _parsePES(stream) {\n    var i = 0, frag, pesFlags, pesPrefix, pesLen, pesHdrLen, pesData, pesPts, pesDts, payloadStartOffset, data = stream.data;\n    // safety check\n    if (!stream || stream.size === 0) {\n      return null;\n    }\n\n    // we might need up to 19 bytes to read PES header\n    // if first chunk of data is less than 19 bytes, let's merge it with following ones until we get 19 bytes\n    // usually only one merge is needed (and this is rare ...)\n    while(data[0].length < 19 && data.length > 1) {\n      let newData = new Uint8Array(data[0].length + data[1].length);\n      newData.set(data[0]);\n      newData.set(data[1], data[0].length);\n      data[0] = newData;\n      data.splice(1,1);\n    }\n    //retrieve PTS/DTS from first fragment\n    frag = data[0];\n    pesPrefix = (frag[0] << 16) + (frag[1] << 8) + frag[2];\n    if (pesPrefix === 1) {\n      pesLen = (frag[4] << 8) + frag[5];\n      // if PES parsed length is not zero and greater than total received length, stop parsing. PES might be truncated\n      // minus 6 : PES header size\n      if (pesLen && pesLen > stream.size - 6) {\n        return null;\n      }\n      pesFlags = frag[7];\n      if (pesFlags & 0xC0) {\n        /* PES header described here : http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n            as PTS / DTS is 33 bit we cannot use bitwise operator in JS,\n            as Bitwise operators treat their operands as a sequence of 32 bits */\n        pesPts = (frag[9] & 0x0E) * 536870912 +// 1 << 29\n          (frag[10] & 0xFF) * 4194304 +// 1 << 22\n          (frag[11] & 0xFE) * 16384 +// 1 << 14\n          (frag[12] & 0xFF) * 128 +// 1 << 7\n          (frag[13] & 0xFE) / 2;\n          // check if greater than 2^32 -1\n          if (pesPts > 4294967295) {\n            // decrement 2^33\n            pesPts -= 8589934592;\n          }\n        if (pesFlags & 0x40) {\n          pesDts = (frag[14] & 0x0E ) * 536870912 +// 1 << 29\n            (frag[15] & 0xFF ) * 4194304 +// 1 << 22\n            (frag[16] & 0xFE ) * 16384 +// 1 << 14\n            (frag[17] & 0xFF ) * 128 +// 1 << 7\n            (frag[18] & 0xFE ) / 2;\n          // check if greater than 2^32 -1\n          if (pesDts > 4294967295) {\n            // decrement 2^33\n            pesDts -= 8589934592;\n          }\n        } else {\n          pesDts = pesPts;\n        }\n      }\n      pesHdrLen = frag[8];\n      // 9 bytes : 6 bytes for PES header + 3 bytes for PES extension\n      payloadStartOffset = pesHdrLen + 9;\n\n      stream.size -= payloadStartOffset;\n      //reassemble PES packet\n      pesData = new Uint8Array(stream.size);\n      while (data.length) {\n        frag = data.shift();\n        var len = frag.byteLength;\n        if (payloadStartOffset) {\n          if (payloadStartOffset > len) {\n            // trim full frag if PES header bigger than frag\n            payloadStartOffset-=len;\n            continue;\n          } else {\n            // trim partial frag if PES header smaller than frag\n            frag = frag.subarray(payloadStartOffset);\n            len-=payloadStartOffset;\n            payloadStartOffset = 0;\n          }\n        }\n        pesData.set(frag, i);\n        i+=len;\n      }\n      if (pesLen) {\n        // payload size : remove PES header + PES extension\n        pesLen -= pesHdrLen+3;\n      }\n      return {data: pesData, pts: pesPts, dts: pesDts, len: pesLen};\n    } else {\n      return null;\n    }\n  }\n\n  pushAccesUnit(avcSample,avcTrack) {\n    if (avcSample.units.units.length) {\n      // only push AVC sample if starting with a keyframe is not mandatory OR\n      //    if keyframe already found in this fragment OR\n      //       keyframe found in last fragment (track.sps) AND\n      //          samples already appended (we already found a keyframe in this fragment) OR fragment is contiguous\n      if (!this.config.forceKeyFrameOnDiscontinuity ||\n          avcSample.key === true ||\n          (avcTrack.sps && (avcTrack.samples.length || this.contiguous))) {\n        avcTrack.samples.push(avcSample);\n      } else {\n        // dropped samples, track it\n        avcTrack.dropped++;\n      }\n    }\n    if(avcSample.debug.length) {\n      logger.log(avcSample.pts + '/' + avcSample.dts + ':' + avcSample.debug + ',' + avcSample.units.length);\n    }\n  }\n\n  _parseAVCPES(pes,last) {\n    //logger.log('parse new PES');\n    var track = this._avcTrack,\n        units = this._parseAVCNALu(pes.data),\n        debug = false,\n        expGolombDecoder,\n        avcSample = this.avcSample,\n        push,\n        i;\n    //free pes.data to save up some memory\n    pes.data = null;\n\n    units.forEach(unit => {\n      switch(unit.type) {\n        //NDR\n         case 1:\n           push = true;\n           if(debug && avcSample) {\n            avcSample.debug += 'NDR ';\n           }\n           break;\n        //IDR\n        case 5:\n          push = true;\n          // handle PES not starting with AUD\n          if (!avcSample) {\n            avcSample = this.avcSample = this._createAVCSample(true,pes.pts,pes.dts,'');\n          }\n          if(debug) {\n            avcSample.debug += 'IDR ';\n          }\n          avcSample.key = true;\n          break;\n        //SEI\n        case 6:\n          push = true;\n          if(debug && avcSample) {\n            avcSample.debug += 'SEI ';\n          }\n          expGolombDecoder = new ExpGolomb(this.discardEPB(unit.data));\n\n          // skip frameType\n          expGolombDecoder.readUByte();\n\n          var payloadType = 0;\n          var payloadSize = 0;\n          var endOfCaptions = false;\n          var b = 0;\n\n          while (!endOfCaptions && expGolombDecoder.bytesAvailable > 1) {\n            payloadType = 0;\n            do {\n                b = expGolombDecoder.readUByte();\n                payloadType += b;\n            } while (b === 0xFF);\n\n            // Parse payload size.\n            payloadSize = 0;\n            do {\n                b = expGolombDecoder.readUByte();\n                payloadSize += b;\n            } while (b === 0xFF);\n\n            // TODO: there can be more than one payload in an SEI packet...\n            // TODO: need to read type and size in a while loop to get them all\n            if (payloadType === 4 && expGolombDecoder.bytesAvailable !== 0) {\n\n              endOfCaptions = true;\n\n              var countryCode = expGolombDecoder.readUByte();\n\n              if (countryCode === 181) {\n                var providerCode = expGolombDecoder.readUShort();\n\n                if (providerCode === 49) {\n                  var userStructure = expGolombDecoder.readUInt();\n\n                  if (userStructure === 0x47413934) {\n                    var userDataType = expGolombDecoder.readUByte();\n\n                    // Raw CEA-608 bytes wrapped in CEA-708 packet\n                    if (userDataType === 3) {\n                      var firstByte = expGolombDecoder.readUByte();\n                      var secondByte = expGolombDecoder.readUByte();\n\n                      var totalCCs = 31 & firstByte;\n                      var byteArray = [firstByte, secondByte];\n\n                      for (i = 0; i < totalCCs; i++) {\n                        // 3 bytes per CC\n                        byteArray.push(expGolombDecoder.readUByte());\n                        byteArray.push(expGolombDecoder.readUByte());\n                        byteArray.push(expGolombDecoder.readUByte());\n                      }\n\n                      this._insertSampleInOrder(this._txtTrack.samples, { type: 3, pts: pes.pts, bytes: byteArray });\n                    }\n                  }\n                }\n              }\n            }\n            else if (payloadSize < expGolombDecoder.bytesAvailable)\n            {\n              for (i = 0; i<payloadSize; i++)\n              {\n                expGolombDecoder.readUByte();\n              }\n            }\n          }\n          break;\n        //SPS\n        case 7:\n          push = true;\n          if(debug && avcSample) {\n            avcSample.debug += 'SPS ';\n          }\n          if(!track.sps) {\n            expGolombDecoder = new ExpGolomb(unit.data);\n            var config = expGolombDecoder.readSPS();\n            track.width = config.width;\n            track.height = config.height;\n            track.sps = [unit.data];\n            track.duration = this._duration;\n            var codecarray = unit.data.subarray(1, 4);\n            var codecstring = 'avc1.';\n            for (i = 0; i < 3; i++) {\n              var h = codecarray[i].toString(16);\n              if (h.length < 2) {\n                h = '0' + h;\n              }\n              codecstring += h;\n            }\n            track.codec = codecstring;\n          }\n          break;\n        //PPS\n        case 8:\n          push = true;\n          if(debug && avcSample) {\n            avcSample.debug += 'PPS ';\n          }\n          if (!track.pps) {\n            track.pps = [unit.data];\n          }\n          break;\n        // AUD\n        case 9:\n          push = false;\n          if (avcSample) {\n            this.pushAccesUnit(avcSample,track);\n          }\n          avcSample = this.avcSample = this._createAVCSample(false,pes.pts,pes.dts,debug ? 'AUD ': '');\n          break;\n        // Filler Data\n        case 12:\n          push = false;\n          break;\n        default:\n          push = false;\n          if (avcSample) {\n            avcSample.debug += 'unknown NAL ' + unit.type + ' ';\n          }\n          break;\n      }\n      if(avcSample && push) {\n        let units = avcSample.units;\n        units.units.push(unit);\n      }\n    });\n    // if last PES packet, push samples\n    if (last && avcSample) {\n      this.pushAccesUnit(avcSample,track);\n      this.avcSample = null;\n    }\n  }\n\n  _createAVCSample(key,pts,dts,debug) {\n    return { key : key, pts : pts, dts : dts, units : { units : [], length : 0}, debug : debug};\n  }\n\n  _insertSampleInOrder(arr, data) {\n    var len = arr.length;\n    if (len > 0) {\n      if (data.pts >= arr[len-1].pts)\n      {\n        arr.push(data);\n      }\n      else {\n        for (var pos = len - 1; pos >= 0; pos--) {\n          if (data.pts < arr[pos].pts) {\n            arr.splice(pos, 0, data);\n            break;\n          }\n        }\n      }\n    }\n    else {\n      arr.push(data);\n    }\n  }\n\n  _getLastNalUnit() {\n    let avcSample = this.avcSample, lastUnit;\n    // try to fallback to previous sample if current one is empty\n    if (!avcSample || avcSample.units.units.length === 0) {\n      let track = this._avcTrack, samples = track.samples;\n      avcSample = samples[samples.length-1];\n    }\n    if (avcSample) {\n      let units = avcSample.units.units;\n      lastUnit = units[units.length - 1];\n    }\n    return lastUnit;\n  }\n\n  _parseAVCNALu(array) {\n    var i = 0, len = array.byteLength, value, overflow, track = this._avcTrack, state = track.naluState || 0, lastState = state;\n    var units = [], unit, unitType, lastUnitStart = -1, lastUnitType;\n    //logger.log('PES:' + Hex.hexDump(array));\n    while (i < len) {\n      value = array[i++];\n      // finding 3 or 4-byte start codes (00 00 01 OR 00 00 00 01)\n      switch (state) {\n        case 0:\n          if (value === 0) {\n            state = 1;\n          }\n          break;\n        case 1:\n          if( value === 0) {\n            state = 2;\n          } else {\n            state = 0;\n          }\n          break;\n        case 2:\n        case 3:\n          if( value === 0) {\n            state = 3;\n          } else if (value === 1) {\n            if (lastUnitStart >=0) {\n              unit = {data: array.subarray(lastUnitStart, i - state - 1), type: lastUnitType};\n              //logger.log('pushing NALU, type/size:' + unit.type + '/' + unit.data.byteLength);\n              units.push(unit);\n            } else {\n              // lastUnitStart is undefined => this is the first start code found in this PES packet\n              // first check if start code delimiter is overlapping between 2 PES packets,\n              // ie it started in last packet (lastState not zero)\n              // and ended at the beginning of this PES packet (i <= 4 - lastState)\n              let lastUnit = this._getLastNalUnit();\n              if (lastUnit) {\n                if(lastState &&  (i <= 4 - lastState)) {\n                  // start delimiter overlapping between PES packets\n                  // strip start delimiter bytes from the end of last NAL unit\n                    // check if lastUnit had a state different from zero\n                  if (lastUnit.state) {\n                    // strip last bytes\n                    lastUnit.data = lastUnit.data.subarray(0,lastUnit.data.byteLength - lastState);\n                  }\n                }\n                // If NAL units are not starting right at the beginning of the PES packet, push preceding data into previous NAL unit.\n                overflow  = i - state - 1;\n                if (overflow > 0) {\n                  //logger.log('first NALU found with overflow:' + overflow);\n                  let tmp = new Uint8Array(lastUnit.data.byteLength + overflow);\n                  tmp.set(lastUnit.data, 0);\n                  tmp.set(array.subarray(0, overflow), lastUnit.data.byteLength);\n                  lastUnit.data = tmp;\n                }\n              }\n            }\n            // check if we can read unit type\n            if (i < len) {\n              unitType = array[i] & 0x1f;\n              //logger.log('find NALU @ offset:' + i + ',type:' + unitType);\n              lastUnitStart = i;\n              lastUnitType = unitType;\n              state = 0;\n            } else {\n              // not enough byte to read unit type. let's read it on next PES parsing\n              state = -1;\n            }\n          } else {\n            state = 0;\n          }\n          break;\n        case -1:\n        // special use case where we found 3 or 4-byte start codes exactly at the end of previous PES packet\n          lastUnitStart = 0;\n          // NALu type is value read from offset 0\n          lastUnitType = value & 0x1f;\n          state = 0;\n          break;\n        default:\n          break;\n      }\n    }\n    if (lastUnitStart >=0 && state >=0) {\n      unit = {data: array.subarray(lastUnitStart, len), type: lastUnitType, state : state};\n      units.push(unit);\n      //logger.log('pushing NALU, type/size/state:' + unit.type + '/' + unit.data.byteLength + '/' + state);\n    }\n    // no NALu found\n    if (units.length === 0) {\n      // append pes.data to previous NAL unit\n      let  lastUnit = this._getLastNalUnit();\n      if (lastUnit) {\n        let tmp = new Uint8Array(lastUnit.data.byteLength + array.byteLength);\n        tmp.set(lastUnit.data, 0);\n        tmp.set(array, lastUnit.data.byteLength);\n        lastUnit.data = tmp;\n      }\n    }\n    track.naluState = state;\n    return units;\n  }\n\n  /**\n   * remove Emulation Prevention bytes from a RBSP\n   */\n  discardEPB(data) {\n    var length = data.byteLength,\n        EPBPositions = [],\n        i = 1,\n        newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 &&\n          data[i + 1] === 0 &&\n          data[i + 2] === 0x03) {\n        EPBPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (EPBPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - EPBPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === EPBPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        EPBPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n    return newData;\n  }\n\n  _parseAACPES(pes) {\n    var track = this._aacTrack,\n        data = pes.data,\n        pts = pes.pts,\n        startOffset = 0,\n        aacOverFlow = this.aacOverFlow,\n        aacLastPTS = this.aacLastPTS,\n        config, frameLength, frameDuration, frameIndex, offset, headerLength, stamp, len, aacSample;\n    if (aacOverFlow) {\n      var tmp = new Uint8Array(aacOverFlow.byteLength + data.byteLength);\n      tmp.set(aacOverFlow, 0);\n      tmp.set(data, aacOverFlow.byteLength);\n      //logger.log(`AAC: append overflowing ${aacOverFlow.byteLength} bytes to beginning of new PES`);\n      data = tmp;\n    }\n    // look for ADTS header (0xFFFx)\n    for (offset = startOffset, len = data.length; offset < len - 1; offset++) {\n      if ((data[offset] === 0xff) && (data[offset+1] & 0xf0) === 0xf0) {\n        break;\n      }\n    }\n    // if ADTS header does not start straight from the beginning of the PES payload, raise an error\n    if (offset) {\n      var reason, fatal;\n      if (offset < len - 1) {\n        reason = `AAC PES did not start with ADTS header,offset:${offset}`;\n        fatal = false;\n      } else {\n        reason = 'no ADTS header found in AAC PES';\n        fatal = true;\n      }\n      logger.warn(`parsing error:${reason}`);\n      this.observer.trigger(Event.ERROR, {type: ErrorTypes.MEDIA_ERROR, id : this.id, details: ErrorDetails.FRAG_PARSING_ERROR, fatal: fatal, reason: reason});\n      if (fatal) {\n        return;\n      }\n    }\n    if (!track.audiosamplerate) {\n      config = ADTS.getAudioConfig(this.observer,data, offset, this.audioCodec);\n      track.config = config.config;\n      track.audiosamplerate = config.samplerate;\n      track.channelCount = config.channelCount;\n      track.codec = config.codec;\n      track.duration = this._duration;\n      logger.log(`parsed codec:${track.codec},rate:${config.samplerate},nb channel:${config.channelCount}`);\n    }\n    frameIndex = 0;\n    frameDuration = 1024 * 90000 / track.audiosamplerate;\n\n    // if last AAC frame is overflowing, we should ensure timestamps are contiguous:\n    // first sample PTS should be equal to last sample PTS + frameDuration\n    if(aacOverFlow && aacLastPTS) {\n      var newPTS = aacLastPTS+frameDuration;\n      if(Math.abs(newPTS-pts) > 1) {\n        logger.log(`AAC: align PTS for overlapping frames by ${Math.round((newPTS-pts)/90)}`);\n        pts=newPTS;\n      }\n    }\n\n    while ((offset + 5) < len) {\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the end of the ADTS header\n      headerLength = (!!(data[offset + 1] & 0x01) ? 7 : 9);\n      // retrieve frame size\n      frameLength = ((data[offset + 3] & 0x03) << 11) |\n                     (data[offset + 4] << 3) |\n                    ((data[offset + 5] & 0xE0) >>> 5);\n      frameLength  -= headerLength;\n      //stamp = pes.pts;\n\n      if ((frameLength > 0) && ((offset + headerLength + frameLength) <= len)) {\n        stamp = pts + frameIndex * frameDuration;\n        //logger.log(`AAC frame, offset/length/total/pts:${offset+headerLength}/${frameLength}/${data.byteLength}/${(stamp/90).toFixed(0)}`);\n        aacSample = {unit: data.subarray(offset + headerLength, offset + headerLength + frameLength), pts: stamp, dts: stamp};\n        track.samples.push(aacSample);\n        track.len += frameLength;\n        offset += frameLength + headerLength;\n        frameIndex++;\n        // look for ADTS header (0xFFFx)\n        for ( ; offset < (len - 1); offset++) {\n          if ((data[offset] === 0xff) && ((data[offset + 1] & 0xf0) === 0xf0)) {\n            break;\n          }\n        }\n      } else {\n        break;\n      }\n    }\n    if (offset < len) {\n      aacOverFlow = data.subarray(offset, len);\n      //logger.log(`AAC: overflow detected:${len-offset}`);\n    } else {\n      aacOverFlow = null;\n    }\n    this.aacOverFlow = aacOverFlow;\n    this.aacLastPTS = stamp;\n  }\n\n  _parseID3PES(pes) {\n    this._id3Track.samples.push(pes);\n  }\n}\n\nexport default TSDemuxer;\n",
    "export const ErrorTypes = {\n  // Identifier for a network error (loading error / timeout ...)\n  NETWORK_ERROR: 'networkError',\n  // Identifier for a media Error (video/parsing/mediasource error)\n  MEDIA_ERROR: 'mediaError',\n  // Identifier for all other errors\n  OTHER_ERROR: 'otherError'\n};\n\nexport const ErrorDetails = {\n  // Identifier for a manifest load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n  MANIFEST_LOAD_ERROR: 'manifestLoadError',\n  // Identifier for a manifest load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n  MANIFEST_LOAD_TIMEOUT: 'manifestLoadTimeOut',\n  // Identifier for a manifest parsing error - data: { url : faulty URL, reason : error reason}\n  MANIFEST_PARSING_ERROR: 'manifestParsingError',\n  // Identifier for a manifest with only incompatible codecs error - data: { url : faulty URL, reason : error reason}\n  MANIFEST_INCOMPATIBLE_CODECS_ERROR: 'manifestIncompatibleCodecsError',\n  // Identifier for a level load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n  LEVEL_LOAD_ERROR: 'levelLoadError',\n  // Identifier for a level load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n  LEVEL_LOAD_TIMEOUT: 'levelLoadTimeOut',\n  // Identifier for a level switch error - data: { level : faulty level Id, event : error description}\n  LEVEL_SWITCH_ERROR: 'levelSwitchError',\n  // Identifier for an audio track load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n  AUDIO_TRACK_LOAD_ERROR: 'audioTrackLoadError',\n  // Identifier for an audio track load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n  AUDIO_TRACK_LOAD_TIMEOUT: 'audioTrackLoadTimeOut',\n  // Identifier for fragment load error - data: { frag : fragment object, response : { code: error code, text: error text }}\n  FRAG_LOAD_ERROR: 'fragLoadError',\n  // Identifier for fragment loop loading error - data: { frag : fragment object}\n  FRAG_LOOP_LOADING_ERROR: 'fragLoopLoadingError',\n  // Identifier for fragment load timeout error - data: { frag : fragment object}\n  FRAG_LOAD_TIMEOUT: 'fragLoadTimeOut',\n  // Identifier for a fragment decryption error event - data: parsing error description\n  FRAG_DECRYPT_ERROR: 'fragDecryptError',\n  // Identifier for a fragment parsing error event - data: parsing error description\n  FRAG_PARSING_ERROR: 'fragParsingError',\n  // Identifier for decrypt key load error - data: { frag : fragment object, response : { code: error code, text: error text }}\n  KEY_LOAD_ERROR: 'keyLoadError',\n  // Identifier for decrypt key load timeout error - data: { frag : fragment object}\n  KEY_LOAD_TIMEOUT: 'keyLoadTimeOut',\n  // Triggered when an exception occurs while adding a sourceBuffer to MediaSource - data : {  err : exception , mimeType : mimeType }\n  BUFFER_ADD_CODEC_ERROR: 'bufferAddCodecError',\n  // Identifier for a buffer append error - data: append error description\n  BUFFER_APPEND_ERROR: 'bufferAppendError',\n  // Identifier for a buffer appending error event - data: appending error description\n  BUFFER_APPENDING_ERROR: 'bufferAppendingError',\n  // Identifier for a buffer stalled error event\n  BUFFER_STALLED_ERROR: 'bufferStalledError',\n  // Identifier for a buffer full event\n  BUFFER_FULL_ERROR: 'bufferFullError',\n  // Identifier for a buffer seek over hole event\n  BUFFER_SEEK_OVER_HOLE: 'bufferSeekOverHole',\n  // Identifier for an internal exception happening inside hls.js while handling an event\n  INTERNAL_EXCEPTION: 'internalException'\n};\n",
    "/*\n*\n* All objects in the event handling chain should inherit from this class\n*\n*/\n\nimport {logger} from './utils/logger';\nimport {ErrorTypes, ErrorDetails} from './errors';\nimport Event from './events';\n\nclass EventHandler {\n\n  constructor(hls, ...events) {\n    this.hls = hls;\n    this.onEvent = this.onEvent.bind(this);\n    this.handledEvents = events;\n    this.useGenericHandler = true;\n\n    this.registerListeners();\n  }\n\n  destroy() {\n    this.unregisterListeners();\n  }\n\n  isEventHandler() {\n    return typeof this.handledEvents === 'object' && this.handledEvents.length && typeof this.onEvent === 'function';\n  }\n\n  registerListeners() {\n    if (this.isEventHandler()) {\n      this.handledEvents.forEach(function(event) {\n        if (event === 'hlsEventGeneric') {\n          throw new Error('Forbidden event name: ' + event);\n        }\n        this.hls.on(event, this.onEvent);\n      }.bind(this));\n    }\n  }\n\n  unregisterListeners() {\n    if (this.isEventHandler()) {\n      this.handledEvents.forEach(function(event) {\n        this.hls.off(event, this.onEvent);\n      }.bind(this));\n    }\n  }\n\n  /**\n   * arguments: event (string), data (any)\n   */\n  onEvent(event, data) {\n    this.onEventGeneric(event, data);\n  }\n\n  onEventGeneric(event, data) {\n    var eventToFunction = function(event, data) {\n      var funcName = 'on' + event.replace('hls', '');\n      if (typeof this[funcName] !== 'function') {\n        throw new Error(`Event ${event} has no generic handler in this ${this.constructor.name} class (tried ${funcName})`);\n      }\n      return this[funcName].bind(this, data);\n    };\n    try {\n      eventToFunction.call(this, event, data).call();\n    } catch (err) {\n      logger.error(`internal error happened while processing ${event}:${err.message}`);\n      this.hls.trigger(Event.ERROR, {type: ErrorTypes.OTHER_ERROR, details: ErrorDetails.INTERNAL_EXCEPTION, fatal: false, event : event, err : err});\n    }\n  }\n}\n\nexport default EventHandler;\n",
    "module.exports = {\n  // fired before MediaSource is attaching to media element - data: { media }\n  MEDIA_ATTACHING: 'hlsMediaAttaching',\n  // fired when MediaSource has been succesfully attached to media element - data: { }\n  MEDIA_ATTACHED: 'hlsMediaAttached',\n  // fired before detaching MediaSource from media element - data: { }\n  MEDIA_DETACHING: 'hlsMediaDetaching',\n  // fired when MediaSource has been detached from media element - data: { }\n  MEDIA_DETACHED: 'hlsMediaDetached',\n  // fired when we buffer is going to be resetted\n  BUFFER_RESET: 'hlsBufferReset',\n  // fired when we know about the codecs that we need buffers for to push into - data: {tracks : { container, codec, levelCodec, initSegment, metadata }}\n  BUFFER_CODECS: 'hlsBufferCodecs',\n  // fired when sourcebuffers have been created data: { tracks : tracks}\n  BUFFER_CREATED: 'hlsBufferCreated',\n  // fired when we append a segment to the buffer - data: { segment: segment object }\n  BUFFER_APPENDING: 'hlsBufferAppending',\n  // fired when we are done with appending a media segment to the buffer data : { parent : segment parent that triggered BUFFER_APPENDING }\n  BUFFER_APPENDED: 'hlsBufferAppended',\n  // fired when the stream is finished and we want to notify the media buffer that there will be no more data\n  BUFFER_EOS: 'hlsBufferEos',\n  // fired when the media buffer should be flushed - data {startOffset, endOffset}\n  BUFFER_FLUSHING: 'hlsBufferFlushing',\n  // fired when the media has been flushed\n  BUFFER_FLUSHED: 'hlsBufferFlushed',\n  // fired to signal that a manifest loading starts - data: { url : manifestURL}\n  MANIFEST_LOADING: 'hlsManifestLoading',\n  // fired after manifest has been loaded - data: { levels : [available quality levels] , audioTracks : [ available audio tracks], url : manifestURL, stats : { trequest, tfirst, tload, mtime}}\n  MANIFEST_LOADED: 'hlsManifestLoaded',\n  // fired after manifest has been parsed - data: { levels : [available quality levels] , firstLevel : index of first quality level appearing in Manifest}\n  MANIFEST_PARSED: 'hlsManifestParsed',\n  // fired when a level playlist loading starts - data: { url : level URL  level : id of level being loaded}\n  LEVEL_LOADING: 'hlsLevelLoading',\n  // fired when a level playlist loading finishes - data: { details : levelDetails object, level : id of loaded level, stats : { trequest, tfirst, tload, mtime} }\n  LEVEL_LOADED: 'hlsLevelLoaded',\n  // fired when a level's details have been updated based on previous details, after it has been loaded. - data: { details : levelDetails object, level : id of updated level }\n  LEVEL_UPDATED: 'hlsLevelUpdated',\n  // fired when a level's PTS information has been updated after parsing a fragment - data: { details : levelDetails object, level : id of updated level, drift: PTS drift observed when parsing last fragment }\n  LEVEL_PTS_UPDATED: 'hlsLevelPtsUpdated',\n  // fired when a level switch is requested - data: { level : id of new level }\n  LEVEL_SWITCH: 'hlsLevelSwitch',\n  // fired to notify that audio track lists has been updated data: { audioTracks : audioTracks}\n  AUDIO_TRACKS_UPDATED: 'hlsAudioTracksUpdated',\n  // fired when an audio track switch occurs - data: {  id : audio track id}\n  AUDIO_TRACK_SWITCH: 'hlsAudioTrackSwitch',\n  // fired when an audio track loading starts - data: { url : audio track URL  id : audio track id}\n  AUDIO_TRACK_LOADING: 'hlsAudioTrackLoading',\n  // fired when an audio track loading  finishes - data: { details : levelDetails object, id : audio track id, stats : { trequest, tfirst, tload, mtime} }\n  AUDIO_TRACK_LOADED: 'hlsAudioTrackLoaded',\n  // fired when a fragment loading starts - data: { frag : fragment object}\n  FRAG_LOADING: 'hlsFragLoading',\n  // fired when a fragment loading is progressing - data: { frag : fragment object, { trequest, tfirst, loaded}}\n  FRAG_LOAD_PROGRESS: 'hlsFragLoadProgress',\n  // Identifier for fragment load aborting for emergency switch down - data: {frag : fragment object}\n  FRAG_LOAD_EMERGENCY_ABORTED: 'hlsFragLoadEmergencyAborted',\n  // fired when a fragment loading is completed - data: { frag : fragment object, payload : fragment payload, stats : { trequest, tfirst, tload, length}}\n  FRAG_LOADED: 'hlsFragLoaded',\n  // fired when a fragment has started decrypting - data: { level : levelId, sn : sequence number }\n  FRAG_DECRYPT_STARTED: 'hlsFragDecryptStarted',\n  // fired when a fragment has finished decrypting - data: { level : levelId, sn : sequence number }\n  FRAG_DECRYPTED: 'hlsFragDecrypted',\n  // fired when Init Segment has been extracted from fragment - data: { id : demuxer id, level : levelId, sn : sequence number, moov : moov MP4 box, codecs : codecs found while parsing fragment}\n  FRAG_PARSING_INIT_SEGMENT: 'hlsFragParsingInitSegment',\n  // fired when parsing sei text is completed - data: { id : demuxer id, , level : levelId, sn : sequence number, samples : [ sei samples pes ] }\n  FRAG_PARSING_USERDATA: 'hlsFragParsingUserdata',\n  // fired when parsing id3 is completed - data: { id : demuxer id, , level : levelId, sn : sequence number, samples : [ id3 samples pes ] }\n  FRAG_PARSING_METADATA: 'hlsFragParsingMetadata',\n  // fired when data have been extracted from fragment - data: { id : demuxer id, level : levelId, sn : sequence number, data1 : moof MP4 box or TS fragments, data2 : mdat MP4 box or null}\n  FRAG_PARSING_DATA: 'hlsFragParsingData',\n  // fired when fragment parsing is completed - data: { id : demuxer id; level : levelId, sn : sequence number, }\n  FRAG_PARSED: 'hlsFragParsed',\n  // fired when fragment remuxed MP4 boxes have all been appended into SourceBuffer - data: { id : demuxer id,frag : fragment object, stats : { trequest, tfirst, tload, tparsed, tbuffered, length} }\n  FRAG_BUFFERED: 'hlsFragBuffered',\n  // fired when fragment matching with current media position is changing - data : { id : demuxer id, frag : fragment object }\n  FRAG_CHANGED: 'hlsFragChanged',\n  // Identifier for a FPS drop event - data: {curentDropped, currentDecoded, totalDroppedFrames}\n  FPS_DROP: 'hlsFpsDrop',\n  //triggered when FPS drop triggers auto level capping - data: {level, droppedlevel}\n  FPS_DROP_LEVEL_CAPPING: 'hlsFpsDropLevelCapping',\n  // Identifier for an error event - data: { type : error type, details : error details, fatal : if true, hls.js cannot/will not try to recover, if false, hls.js will try to recover,other error specific data}\n  ERROR: 'hlsError',\n  // fired when hls.js instance starts destroying. Different from MEDIA_DETACHED as one could want to detach and reattach a media to the instance of hls.js to handle mid-rolls for example\n  DESTROYING: 'hlsDestroying',\n  // fired when a decrypt key loading starts - data: { frag : fragment object}\n  KEY_LOADING: 'hlsKeyLoading',\n  // fired when a decrypt key loading is completed - data: { frag : fragment object, payload : key payload, stats : { trequest, tfirst, tload, length}}\n  KEY_LOADED: 'hlsKeyLoaded',\n  // fired upon stream controller state transitions - data: {previousState, nextState}\n  STREAM_STATE_TRANSITION: 'hlsStreamStateTransition'\n};\n",
    "/**\n *  AAC helper\n */\n\nclass AAC {\n  static getSilentFrame(channelCount) {\n    if (channelCount === 1) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n    } else if (channelCount === 2) {\n      return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n    } else if (channelCount === 3) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n    } else if (channelCount === 4) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n    } else if (channelCount === 5) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n    } else if (channelCount === 6) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n    }\n    return null;\n  }\n}\n\nexport default AAC;\n",
    "/**\n * Buffer Helper class, providing methods dealing buffer length retrieval\n*/\n\n\nclass BufferHelper {\n\n\n  static isBuffered(media,position) {\n    if (media) {\n      let buffered = media.buffered;\n      for (let i = 0; i < buffered.length; i++) {\n        if (position >= buffered.start(i) && position <= buffered.end(i)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  static bufferInfo(media, pos,maxHoleDuration) {\n    if (media) {\n      var vbuffered = media.buffered, buffered = [],i;\n      for (i = 0; i < vbuffered.length; i++) {\n        buffered.push({start: vbuffered.start(i), end: vbuffered.end(i)});\n      }\n      return this.bufferedInfo(buffered,pos,maxHoleDuration);\n    } else {\n      return {len: 0, start: 0, end: 0, nextStart : undefined} ;\n    }\n  }\n\n  static bufferedInfo(buffered,pos,maxHoleDuration) {\n    var buffered2 = [],\n        // bufferStart and bufferEnd are buffer boundaries around current video position\n        bufferLen,bufferStart, bufferEnd,bufferStartNext,i;\n    // sort on buffer.start/smaller end (IE does not always return sorted buffered range)\n    buffered.sort(function (a, b) {\n      var diff = a.start - b.start;\n      if (diff) {\n        return diff;\n      } else {\n        return b.end - a.end;\n      }\n    });\n    // there might be some small holes between buffer time range\n    // consider that holes smaller than maxHoleDuration are irrelevant and build another\n    // buffer time range representations that discards those holes\n    for (i = 0; i < buffered.length; i++) {\n      var buf2len = buffered2.length;\n      if(buf2len) {\n        var buf2end = buffered2[buf2len - 1].end;\n        // if small hole (value between 0 or maxHoleDuration ) or overlapping (negative)\n        if((buffered[i].start - buf2end) < maxHoleDuration) {\n          // merge overlapping time ranges\n          // update lastRange.end only if smaller than item.end\n          // e.g.  [ 1, 15] with  [ 2,8] => [ 1,15] (no need to modify lastRange.end)\n          // whereas [ 1, 8] with  [ 2,15] => [ 1,15] ( lastRange should switch from [1,8] to [1,15])\n          if(buffered[i].end > buf2end) {\n            buffered2[buf2len - 1].end = buffered[i].end;\n          }\n        } else {\n          // big hole\n          buffered2.push(buffered[i]);\n        }\n      } else {\n        // first value\n        buffered2.push(buffered[i]);\n      }\n    }\n    for (i = 0, bufferLen = 0, bufferStart = bufferEnd = pos; i < buffered2.length; i++) {\n      var start =  buffered2[i].start,\n          end = buffered2[i].end;\n      //logger.log('buf start/end:' + buffered.start(i) + '/' + buffered.end(i));\n      if ((pos + maxHoleDuration) >= start && pos < end) {\n        // play position is inside this buffer TimeRange, retrieve end of buffer position and buffer length\n        bufferStart = start;\n        bufferEnd = end;\n        bufferLen = bufferEnd - pos;\n      } else if ((pos + maxHoleDuration) < start) {\n        bufferStartNext = start;\n        break;\n      }\n    }\n    return {len: bufferLen, start: bufferStart, end: bufferEnd, nextStart : bufferStartNext};\n  }\n\n}\n\nexport default BufferHelper;\n",
    "/**\n * Level Helper class, providing methods dealing with playlist sliding and drift\n*/\n\nimport {logger} from '../utils/logger';\n\nclass LevelHelper {\n\n  static mergeDetails(oldDetails,newDetails) {\n    var start = Math.max(oldDetails.startSN,newDetails.startSN)-newDetails.startSN,\n        end = Math.min(oldDetails.endSN,newDetails.endSN)-newDetails.startSN,\n        delta = newDetails.startSN - oldDetails.startSN,\n        oldfragments = oldDetails.fragments,\n        newfragments = newDetails.fragments,\n        ccOffset =0,\n        PTSFrag;\n\n    // check if old/new playlists have fragments in common\n    if ( end < start) {\n      newDetails.PTSKnown = false;\n      return;\n    }\n    // loop through overlapping SN and update startPTS , cc, and duration if any found\n    for(var i = start ; i <= end ; i++) {\n      var oldFrag = oldfragments[delta+i],\n          newFrag = newfragments[i];\n      if (newFrag && oldFrag) {\n        ccOffset = oldFrag.cc - newFrag.cc;\n        if (!isNaN(oldFrag.startPTS)) {\n          newFrag.start = newFrag.startPTS = oldFrag.startPTS;\n          newFrag.endPTS = oldFrag.endPTS;\n          newFrag.duration = oldFrag.duration;\n          PTSFrag = newFrag;\n        }\n      }\n    }\n\n    if(ccOffset) {\n      logger.log(`discontinuity sliding from playlist, take drift into account`);\n      for(i = 0 ; i < newfragments.length ; i++) {\n        newfragments[i].cc += ccOffset;\n      }\n    }\n\n    // if at least one fragment contains PTS info, recompute PTS information for all fragments\n    if(PTSFrag) {\n      LevelHelper.updateFragPTSDTS(newDetails,PTSFrag.sn,PTSFrag.startPTS,PTSFrag.endPTS,PTSFrag.startDTS,PTSFrag.endDTS);\n    } else {\n      // ensure that delta is within oldfragments range\n      // also adjust sliding in case delta is 0 (we could have old=[50-60] and new=old=[50-61])\n      // in that case we also need to adjust start offset of all fragments\n      if (delta >= 0 && delta < oldfragments.length) {\n        // adjust start by sliding offset\n        var sliding = oldfragments[delta].start;\n        for(i = 0 ; i < newfragments.length ; i++) {\n          newfragments[i].start += sliding;\n        }\n      }\n    }\n    // if we are here, it means we have fragments overlapping between\n    // old and new level. reliable PTS info is thus relying on old level\n    newDetails.PTSKnown = oldDetails.PTSKnown;\n    return;\n  }\n\n  static updateFragPTSDTS(details,sn,startPTS,endPTS,startDTS,endDTS) {\n    var fragIdx, fragments, frag, i;\n    // exit if sn out of range\n    if (sn < details.startSN || sn > details.endSN) {\n      return 0;\n    }\n    fragIdx = sn - details.startSN;\n    fragments = details.fragments;\n    frag = fragments[fragIdx];\n    if(!isNaN(frag.startPTS)) {\n      // delta PTS between audio and video\n      let deltaPTS = Math.abs(frag.startPTS-startPTS);\n      if (isNaN(frag.deltaPTS)) {\n        frag.deltaPTS = deltaPTS;\n      } else {\n        frag.deltaPTS = Math.max(deltaPTS,frag.deltaPTS);\n      }\n      startPTS = Math.min(startPTS,frag.startPTS);\n      endPTS = Math.max(endPTS, frag.endPTS);\n      startDTS = Math.min(startDTS,frag.startDTS);\n      endDTS = Math.max(endDTS, frag.endDTS);\n    }\n\n    var drift = startPTS - frag.start;\n\n    frag.start = frag.startPTS = startPTS;\n    frag.endPTS = endPTS;\n    frag.startDTS = startDTS;\n    frag.endDTS = endDTS;\n    frag.duration = endPTS - startPTS;\n    // adjust fragment PTS/duration from seqnum-1 to frag 0\n    for(i = fragIdx ; i > 0 ; i--) {\n      LevelHelper.updatePTS(fragments,i,i-1);\n    }\n\n    // adjust fragment PTS/duration from seqnum to last frag\n    for(i = fragIdx ; i < fragments.length - 1 ; i++) {\n      LevelHelper.updatePTS(fragments,i,i+1);\n    }\n    details.PTSKnown = true;\n    //logger.log(`                                            frag start/end:${startPTS.toFixed(3)}/${endPTS.toFixed(3)}`);\n\n    return drift;\n  }\n\n  static updatePTS(fragments,fromIdx, toIdx) {\n    var fragFrom = fragments[fromIdx],fragTo = fragments[toIdx], fragToPTS = fragTo.startPTS;\n    // if we know startPTS[toIdx]\n    if(!isNaN(fragToPTS)) {\n      // update fragment duration.\n      // it helps to fix drifts between playlist reported duration and fragment real duration\n      if (toIdx > fromIdx) {\n        fragFrom.duration = fragToPTS-fragFrom.start;\n        if(fragFrom.duration < 0) {\n          logger.warn(`negative duration computed for frag ${fragFrom.sn},level ${fragFrom.level}, there should be some duration drift between playlist and fragment!`);\n        }\n      } else {\n        fragTo.duration = fragFrom.start - fragToPTS;\n        if(fragTo.duration < 0) {\n          logger.warn(`negative duration computed for frag ${fragTo.sn},level ${fragTo.level}, there should be some duration drift between playlist and fragment!`);\n        }\n      }\n    } else {\n      // we dont know startPTS[toIdx]\n      if (toIdx > fromIdx) {\n        fragTo.start = fragFrom.start + fragFrom.duration;\n      } else {\n        fragTo.start = fragFrom.start - fragTo.duration;\n      }\n    }\n  }\n}\n\nexport default LevelHelper;\n",
    "/**\n * HLS interface\n */\n'use strict';\n\nimport Event from './events';\nimport {ErrorTypes, ErrorDetails} from './errors';\nimport PlaylistLoader from './loader/playlist-loader';\nimport FragmentLoader from './loader/fragment-loader';\nimport AbrController from    './controller/abr-controller';\nimport BufferController from  './controller/buffer-controller';\nimport CapLevelController from  './controller/cap-level-controller';\nimport AudioStreamController from  './controller/audio-stream-controller';\nimport StreamController from  './controller/stream-controller';\nimport LevelController from  './controller/level-controller';\nimport TimelineController from './controller/timeline-controller';\nimport FPSController from './controller/fps-controller';\nimport AudioTrackController from './controller/audio-track-controller';\nimport {logger, enableLogs} from './utils/logger';\n//import FetchLoader from './utils/fetch-loader';\nimport XhrLoader from './utils/xhr-loader';\nimport EventEmitter from 'events';\nimport KeyLoader from './loader/key-loader';\nimport Cues from './utils/cues';\n\nclass Hls {\n\n  static get version() {\n    // replaced with browserify-versionify transform\n    return '0.6.9';\n  }\n\n  static isSupported() {\n    window.MediaSource = window.MediaSource || window.WebKitMediaSource;\n    return (window.MediaSource &&\n            typeof window.MediaSource.isTypeSupported === 'function' &&\n            window.MediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"'));\n  }\n\n  static get Events() {\n    return Event;\n  }\n\n  static get ErrorTypes() {\n    return ErrorTypes;\n  }\n\n  static get ErrorDetails() {\n    return ErrorDetails;\n  }\n\n  static get DefaultConfig() {\n    if(!Hls.defaultConfig) {\n       Hls.defaultConfig = {\n          autoStartLoad: true,\n          startPosition: -1,\n          defaultAudioCodec: undefined,\n          debug: false,\n          capLevelOnFPSDrop: false,\n          capLevelToPlayerSize: false,\n          initialLiveManifestSize: 1,\n          maxBufferLength: 30,\n          maxBufferSize: 60 * 1000 * 1000,\n          maxBufferHole: 0.5,\n          maxSeekHole: 2,\n          seekHoleNudgeDuration: 0.01,\n          stalledInBufferedNudgeThreshold: 10,\n          maxFragLookUpTolerance: 0.2,\n          liveSyncDurationCount:3,\n          liveMaxLatencyDurationCount: Infinity,\n          liveSyncDuration: undefined,\n          liveMaxLatencyDuration: undefined,\n          maxMaxBufferLength: 600,\n          enableWorker: true,\n          enableSoftwareAES: true,\n          manifestLoadingTimeOut: 10000,\n          manifestLoadingMaxRetry: 1,\n          manifestLoadingRetryDelay: 1000,\n          manifestLoadingMaxRetryTimeout: 64000,\n          startLevel: undefined,\n          levelLoadingTimeOut: 10000,\n          levelLoadingMaxRetry: 4,\n          levelLoadingRetryDelay: 1000,\n          levelLoadingMaxRetryTimeout: 64000,\n          fragLoadingTimeOut: 20000,\n          fragLoadingMaxRetry: 6,\n          fragLoadingRetryDelay: 1000,\n          fragLoadingMaxRetryTimeout: 64000,\n          fragLoadingLoopThreshold: 3,\n          startFragPrefetch: false,\n          fpsDroppedMonitoringPeriod: 5000,\n          fpsDroppedMonitoringThreshold: 0.2,\n          appendErrorMaxRetry: 3,\n          loader: XhrLoader,\n          //loader: FetchLoader,\n          fLoader: undefined,\n          pLoader: undefined,\n          xhrSetup: undefined,\n          fetchSetup: undefined,\n          abrController: AbrController,\n          bufferController: BufferController,\n          capLevelController: CapLevelController,\n          fpsController: FPSController,\n          streamController: StreamController,\n          audioStreamController: AudioStreamController,\n          timelineController: TimelineController,\n          cueHandler: Cues,\n          enableCEA708Captions: true,\n          enableMP2TPassThrough: false,\n          stretchShortVideoTrack: false,\n          forceKeyFrameOnDiscontinuity: true,\n          abrEwmaFastLive: 3,\n          abrEwmaSlowLive: 9,\n          abrEwmaFastVoD: 3,\n          abrEwmaSlowVoD: 9,\n          abrEwmaDefaultEstimate: 5e5, // 500 kbps\n          abrBandWidthFactor : 0.95,\n          abrBandWidthUpFactor : 0.7,\n          maxStarvationDelay : 4,\n          maxLoadingDelay : 4,\n          minAutoBitrate: 0\n        };\n    }\n    return Hls.defaultConfig;\n  }\n\n  static set DefaultConfig(defaultConfig) {\n    Hls.defaultConfig = defaultConfig;\n  }\n\n  constructor(config = {}) {\n    var defaultConfig = Hls.DefaultConfig;\n\n    if ((config.liveSyncDurationCount || config.liveMaxLatencyDurationCount) && (config.liveSyncDuration || config.liveMaxLatencyDuration)) {\n      throw new Error('Illegal hls.js config: don\\'t mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration');\n    }\n\n    for (var prop in defaultConfig) {\n        if (prop in config) { continue; }\n        config[prop] = defaultConfig[prop];\n    }\n\n    if (config.liveMaxLatencyDurationCount !== undefined && config.liveMaxLatencyDurationCount <= config.liveSyncDurationCount) {\n      throw new Error('Illegal hls.js config: \"liveMaxLatencyDurationCount\" must be gt \"liveSyncDurationCount\"');\n    }\n\n    if (config.liveMaxLatencyDuration !== undefined && (config.liveMaxLatencyDuration <= config.liveSyncDuration || config.liveSyncDuration === undefined)) {\n      throw new Error('Illegal hls.js config: \"liveMaxLatencyDuration\" must be gt \"liveSyncDuration\"');\n    }\n\n    enableLogs(config.debug);\n    this.config = config;\n    // observer setup\n    var observer = this.observer = new EventEmitter();\n    observer.trigger = function trigger (event, ...data) {\n      observer.emit(event, event, ...data);\n    };\n\n    observer.off = function off (event, ...data) {\n      observer.removeListener(event, ...data);\n    };\n    this.on = observer.on.bind(observer);\n    this.off = observer.off.bind(observer);\n    this.trigger = observer.trigger.bind(observer);\n    this.playlistLoader = new PlaylistLoader(this);\n    this.fragmentLoader = new FragmentLoader(this);\n    this.levelController = new LevelController(this);\n    this.abrController = new config.abrController(this);\n    this.bufferController = new config.bufferController(this);\n    this.capLevelController = new config.capLevelController(this);\n    this.fpsController = new config.fpsController(this);\n    this.streamController = new config.streamController(this);\n    this.audioStreamController = new config.audioStreamController(this);\n    this.timelineController = new config.timelineController(this);\n    this.audioTrackController = new AudioTrackController(this);\n    this.keyLoader = new KeyLoader(this);\n  }\n\n  destroy() {\n    logger.log('destroy');\n    this.trigger(Event.DESTROYING);\n    this.detachMedia();\n    this.playlistLoader.destroy();\n    this.fragmentLoader.destroy();\n    this.levelController.destroy();\n    this.abrController.destroy();\n    this.bufferController.destroy();\n    this.capLevelController.destroy();\n    this.fpsController.destroy();\n    this.streamController.destroy();\n    this.audioStreamController.destroy();\n    this.timelineController.destroy();\n    this.audioTrackController.destroy();\n    this.keyLoader.destroy();\n    this.url = null;\n    this.observer.removeAllListeners();\n  }\n\n  attachMedia(media) {\n    logger.log('attachMedia');\n    this.media = media;\n    this.trigger(Event.MEDIA_ATTACHING, {media: media});\n  }\n\n  detachMedia() {\n    logger.log('detachMedia');\n    this.trigger(Event.MEDIA_DETACHING);\n    this.media = null;\n  }\n\n  loadSource(url) {\n    logger.log(`loadSource:${url}`);\n    this.url = url;\n    // when attaching to a source URL, trigger a playlist load\n    this.trigger(Event.MANIFEST_LOADING, {url: url});\n  }\n\n  startLoad(startPosition=-1) {\n    logger.log('startLoad');\n    this.levelController.startLoad();\n    this.streamController.startLoad(startPosition);\n    this.audioStreamController.startLoad(startPosition);\n  }\n\n  stopLoad() {\n    logger.log('stopLoad');\n    this.levelController.stopLoad();\n    this.streamController.stopLoad();\n    this.audioStreamController.stopLoad();\n  }\n\n  swapAudioCodec() {\n    logger.log('swapAudioCodec');\n    this.streamController.swapAudioCodec();\n  }\n\n  recoverMediaError() {\n    logger.log('recoverMediaError');\n    var media = this.media;\n    this.detachMedia();\n    this.attachMedia(media);\n  }\n\n  /** Return all quality levels **/\n  get levels() {\n    return this.levelController.levels;\n  }\n\n  /** Return current playback quality level **/\n  get currentLevel() {\n    return this.streamController.currentLevel;\n  }\n\n  /* set quality level immediately (-1 for automatic level selection) */\n  set currentLevel(newLevel) {\n    logger.log(`set currentLevel:${newLevel}`);\n    this.loadLevel = newLevel;\n    this.streamController.immediateLevelSwitch();\n  }\n\n  /** Return next playback quality level (quality level of next fragment) **/\n  get nextLevel() {\n    return this.streamController.nextLevel;\n  }\n\n  /* set quality level for next fragment (-1 for automatic level selection) */\n  set nextLevel(newLevel) {\n    logger.log(`set nextLevel:${newLevel}`);\n    this.levelController.manualLevel = newLevel;\n    this.streamController.nextLevelSwitch();\n  }\n\n  /** Return the quality level of current/last loaded fragment **/\n  get loadLevel() {\n    return this.levelController.level;\n  }\n\n  /* set quality level for current/next loaded fragment (-1 for automatic level selection) */\n  set loadLevel(newLevel) {\n    logger.log(`set loadLevel:${newLevel}`);\n    this.levelController.manualLevel = newLevel;\n  }\n\n  /** Return the quality level of next loaded fragment **/\n  get nextLoadLevel() {\n    return this.levelController.nextLoadLevel;\n  }\n\n  /** set quality level of next loaded fragment **/\n  set nextLoadLevel(level) {\n    this.levelController.nextLoadLevel = level;\n  }\n\n  /** Return first level (index of first level referenced in manifest)\n  **/\n  get firstLevel() {\n    return this.levelController.firstLevel;\n  }\n\n  /** set first level (index of first level referenced in manifest)\n  **/\n  set firstLevel(newLevel) {\n    logger.log(`set firstLevel:${newLevel}`);\n    this.levelController.firstLevel = newLevel;\n  }\n\n  /** Return start level (level of first fragment that will be played back)\n      if not overrided by user, first level appearing in manifest will be used as start level\n      if -1 : automatic start level selection, playback will start from level matching download bandwidth (determined from download of first segment)\n  **/\n  get startLevel() {\n    return this.levelController.startLevel;\n  }\n\n  /** set  start level (level of first fragment that will be played back)\n      if not overrided by user, first level appearing in manifest will be used as start level\n      if -1 : automatic start level selection, playback will start from level matching download bandwidth (determined from download of first segment)\n  **/\n  set startLevel(newLevel) {\n    logger.log(`set startLevel:${newLevel}`);\n    this.levelController.startLevel = newLevel;\n  }\n\n  /** Return the capping/max level value that could be used by automatic level selection algorithm **/\n  get autoLevelCapping() {\n    return this.abrController.autoLevelCapping;\n  }\n\n  /** set the capping/max level value that could be used by automatic level selection algorithm **/\n  set autoLevelCapping(newLevel) {\n    logger.log(`set autoLevelCapping:${newLevel}`);\n    this.abrController.autoLevelCapping = newLevel;\n  }\n\n  /* check if we are in automatic level selection mode */\n  get autoLevelEnabled() {\n    return (this.levelController.manualLevel === -1);\n  }\n\n  /* return manual level */\n  get manualLevel() {\n    return this.levelController.manualLevel;\n  }\n\n  /** get alternate audio tracks list from playlist **/\n  get audioTracks() {\n    return this.audioTrackController.audioTracks;\n  }\n\n  /** get index of the selected audio track (index in audio track lists) **/\n  get audioTrack() {\n   return this.audioTrackController.audioTrack;\n  }\n\n  /** select an audio track, based on its index in audio track lists**/\n  set audioTrack(audioTrackId) {\n    this.audioTrackController.audioTrack = audioTrackId;\n  }\n\n  get liveSyncPosition() {\n      return this.streamController.liveSyncPosition;\n  }\n}\n\nexport default Hls;\n",
    "// This is mostly for support of the es6 module export\n// syntax with the babel compiler, it looks like it doesnt support\n// function exports like we are used to in node/commonjs\nmodule.exports = require('./hls.js').default;\n",
    "/*\n * Fragment Loader\n*/\n\nimport Event from '../events';\nimport EventHandler from '../event-handler';\nimport {ErrorTypes, ErrorDetails} from '../errors';\nimport {logger} from '../utils/logger';\n\nclass FragmentLoader extends EventHandler {\n\n  constructor(hls) {\n    super(hls, Event.FRAG_LOADING);\n    this.loaders = {};\n  }\n\n  destroy() {\n    let loaders = this.loaders;\n    for (let loaderName in loaders) {\n      let loader = loaders[loaderName];\n      if (loader) {\n        loader.destroy();\n      }\n    }\n    this.loaders = {};\n    EventHandler.prototype.destroy.call(this);\n  }\n\n  onFragLoading(data) {\n    let frag = data.frag,\n        type = frag.type,\n        loader = this.loaders[type],\n        config = this.hls.config;\n\n    frag.loaded = 0;\n    if (loader) {\n      logger.warn(`abort previous fragment loader for type:${type}`);\n      loader.abort();\n    }\n    loader  = this.loaders[type] = frag.loader = typeof(config.fLoader) !== 'undefined' ? new config.fLoader(config) : new config.loader(config);\n\n    let loaderContext, loaderConfig, loaderCallbacks;\n    loaderContext = { url : frag.url, frag : frag, responseType : 'arraybuffer', progressData : false};\n    let start = frag.byteRangeStartOffset, end = frag.byteRangeEndOffset;\n    if (!isNaN(start) && !isNaN(end)) {\n      loaderContext.rangeStart = start;\n      loaderContext.rangeEnd = end;\n    }\n    loaderConfig = { timeout : config.fragLoadingTimeOut, maxRetry : 0 , retryDelay : 0, maxRetryDelay : config.fragLoadingMaxRetryTimeout};\n    loaderCallbacks = { onSuccess : this.loadsuccess.bind(this), onError :this.loaderror.bind(this), onTimeout : this.loadtimeout.bind(this), onProgress: this.loadprogress.bind(this)};\n    loader.load(loaderContext,loaderConfig,loaderCallbacks);\n  }\n\n  loadsuccess(response, stats, context) {\n    let payload = response.data, frag = context.frag;\n    // detach fragment loader on load success\n    frag.loader = undefined;\n    this.loaders[frag.type] = undefined;\n    this.hls.trigger(Event.FRAG_LOADED, {payload: payload, frag: frag, stats: stats});\n  }\n\n  loaderror(response, context) {\n    let loader = context.loader;\n    if (loader) {\n      loader.abort();\n    }\n    this.loaders[context.type] = undefined;\n    this.hls.trigger(Event.ERROR, {type: ErrorTypes.NETWORK_ERROR, details: ErrorDetails.FRAG_LOAD_ERROR, fatal: false, frag: context.frag, response: response});\n  }\n\n  loadtimeout(stats, context) {\n    let loader = context.loader;\n    if (loader) {\n      loader.abort();\n    }\n    this.loaders[context.type] = undefined;\n    this.hls.trigger(Event.ERROR, {type: ErrorTypes.NETWORK_ERROR, details: ErrorDetails.FRAG_LOAD_TIMEOUT, fatal: false, frag: context.frag});\n  }\n\n  // data will be used for progressive parsing\n  loadprogress(stats, context, data) { // jshint ignore:line\n    let frag = context.frag;\n    frag.loaded = stats.loaded;\n    this.hls.trigger(Event.FRAG_LOAD_PROGRESS, {frag: frag, stats: stats});\n  }\n}\n\nexport default FragmentLoader;\n",
    "/*\n * Decrypt key Loader\n*/\n\nimport Event from '../events';\nimport EventHandler from '../event-handler';\nimport {ErrorTypes, ErrorDetails} from '../errors';\nimport {logger} from '../utils/logger';\n\nclass KeyLoader extends EventHandler {\n\n  constructor(hls) {\n    super(hls, Event.KEY_LOADING);\n    this.loaders = {};\n    this.decryptkey = null;\n    this.decrypturl = null;\n  }\n\n  destroy() {\n    for (let loaderName in this.loaders) {\n      let loader = this.loaders[loaderName];\n      if (loader) {\n        loader.destroy();\n      }\n    }\n    this.loaders = {};\n    EventHandler.prototype.destroy.call(this);\n  }\n\n  onKeyLoading(data) {\n    let frag = data.frag,\n        type = frag.type,\n        loader = this.loaders[type],\n        decryptdata = frag.decryptdata,\n        uri = decryptdata.uri;\n        // if uri is different from previous one or if decrypt key not retrieved yet\n      if (uri !== this.decrypturl || this.decryptkey === null) {\n        let config = this.hls.config;\n\n        if (loader) {\n          logger.warn(`abort previous key loader for type:${type}`);\n          loader.abort();\n        }\n        frag.loader = this.loaders[type] = new config.loader(config);\n        this.decrypturl = uri;\n        this.decryptkey = null;\n\n        let loaderContext, loaderConfig, loaderCallbacks;\n        loaderContext = { url : uri, frag : frag, responseType : 'arraybuffer'};\n        loaderConfig = { timeout : config.fragLoadingTimeOut, maxRetry : config.fragLoadingMaxRetry , retryDelay : config.fragLoadingRetryDelay, maxRetryDelay : config.fragLoadingMaxRetryTimeout};\n        loaderCallbacks = { onSuccess : this.loadsuccess.bind(this), onError :this.loaderror.bind(this), onTimeout : this.loadtimeout.bind(this)};\n        frag.loader.load(loaderContext,loaderConfig,loaderCallbacks);\n      } else if (this.decryptkey) {\n        // we already loaded this key, return it\n        decryptdata.key = this.decryptkey;\n        this.hls.trigger(Event.KEY_LOADED, {frag: frag});\n      }\n  }\n\n  loadsuccess(response, stats, context) {\n    let frag = context.frag;\n    this.decryptkey = frag.decryptdata.key = new Uint8Array(response.data);\n    // detach fragment loader on load success\n    frag.loader = undefined;\n    this.loaders[frag.type] = undefined;\n    this.hls.trigger(Event.KEY_LOADED, {frag: frag});\n  }\n\n  loaderror(response, context) {\n    let frag = context.frag,\n        loader = frag.loader;\n    if (loader) {\n      loader.abort();\n    }\n    this.loaders[context.type] = undefined;\n    this.hls.trigger(Event.ERROR, {type: ErrorTypes.NETWORK_ERROR, details: ErrorDetails.KEY_LOAD_ERROR, fatal: false, frag: frag, response: response});\n  }\n\n  loadtimeout(stats, context) {\n    let frag = context.frag,\n        loader = frag.loader;\n    if (loader) {\n      loader.abort();\n    }\n    this.loaders[context.type] = undefined;\n    this.hls.trigger(Event.ERROR, {type: ErrorTypes.NETWORK_ERROR, details: ErrorDetails.KEY_LOAD_TIMEOUT, fatal: false, frag: frag});\n  }\n}\n\nexport default KeyLoader;\n",
    "/**\n * Playlist Loader\n*/\n\nimport Event from '../events';\nimport EventHandler from '../event-handler';\nimport {ErrorTypes, ErrorDetails} from '../errors';\nimport URLHelper from '../utils/url';\nimport AttrList from '../utils/attr-list';\nimport {logger} from '../utils/logger';\n\nclass PlaylistLoader extends EventHandler {\n\n  constructor(hls) {\n    super(hls,\n      Event.MANIFEST_LOADING,\n      Event.LEVEL_LOADING,\n      Event.AUDIO_TRACK_LOADING);\n    this.loaders = {};\n  }\n\n  destroy() {\n    for (let loaderName in this.loaders) {\n      let loader = this.loaders[loaderName];\n      if (loader) {\n        loader.destroy();\n      }\n    }\n    this.loaders = {};\n    EventHandler.prototype.destroy.call(this);\n  }\n\n  onManifestLoading(data) {\n    this.load(data.url, { type : 'manifest'});\n  }\n\n  onLevelLoading(data) {\n    this.load(data.url, { type : 'level', level : data.level, id : data.id});\n  }\n\n  onAudioTrackLoading(data) {\n    this.load(data.url, { type : 'audioTrack', id : data.id});\n  }\n\n  load(url, context) {\n    let loader = this.loaders[context.type];\n    if (loader) {\n      let loaderContext = loader.context;\n      if (loaderContext && loaderContext.url === url) {\n        logger.trace(`playlist request ongoing`);\n        return;\n      } else {\n        logger.warn(`abort previous loader for type:${context.type}`);\n        loader.abort();\n      }\n    }\n    let config = this.hls.config,\n        retry,\n        timeout,\n        retryDelay,\n        maxRetryDelay;\n    if(context.type === 'manifest') {\n      retry = config.manifestLoadingMaxRetry;\n      timeout = config.manifestLoadingTimeOut;\n      retryDelay = config.manifestLoadingRetryDelay;\n      maxRetryDelay = config.manifestLoadingMaxRetryTimeOut;\n    } else {\n      retry = config.levelLoadingMaxRetry;\n      timeout = config.levelLoadingTimeOut;\n      retryDelay = config.levelLoadingRetryDelay;\n      maxRetryDelay = config.levelLoadingMaxRetryTimeOut;\n      logger.log(`loading playlist for level ${context.level}`);\n    }\n    loader  = this.loaders[context.type] = context.loader = typeof(config.pLoader) !== 'undefined' ? new config.pLoader(config) : new config.loader(config);\n    context.url = url;\n    context.responseType = '';\n\n    let loaderConfig, loaderCallbacks;\n    loaderConfig = { timeout : timeout, maxRetry : retry , retryDelay : retryDelay, maxRetryDelay : maxRetryDelay};\n    loaderCallbacks = { onSuccess : this.loadsuccess.bind(this), onError :this.loaderror.bind(this), onTimeout : this.loadtimeout.bind(this)};\n    loader.load(context,loaderConfig,loaderCallbacks);\n  }\n\n  resolve(url, baseUrl) {\n    return URLHelper.buildAbsoluteURL(baseUrl, url);\n  }\n\n  parseMasterPlaylist(string, baseurl) {\n    let levels = [], result;\n\n    // https://regex101.com is your friend\n    const re = /#EXT-X-STREAM-INF:([^\\n\\r]*)[\\r\\n]+([^\\r\\n]+)/g;\n    while ((result = re.exec(string)) != null){\n      const level = {};\n\n      var attrs = level.attrs = new AttrList(result[1]);\n      level.url = this.resolve(result[2], baseurl);\n\n      var resolution = attrs.decimalResolution('RESOLUTION');\n      if(resolution) {\n        level.width = resolution.width;\n        level.height = resolution.height;\n      }\n      level.bitrate = attrs.decimalInteger('AVERAGE-BANDWIDTH') || attrs.decimalInteger('BANDWIDTH');\n      level.name = attrs.NAME;\n\n      var codecs = attrs.CODECS;\n      if(codecs) {\n        codecs = codecs.split(/[ ,]+/);\n        for (let i = 0; i < codecs.length; i++) {\n          const codec = codecs[i];\n          if (codec.indexOf('avc1') !== -1) {\n            level.videoCodec = this.avc1toavcoti(codec);\n          } else {\n            level.audioCodec = codec;\n          }\n        }\n      }\n\n      levels.push(level);\n    }\n    return levels;\n  }\n\n  parseMasterPlaylistMedia(string, baseurl, type) {\n    let result, medias = [];\n\n    // https://regex101.com is your friend\n    const re = /#EXT-X-MEDIA:(.*)/g;\n    while ((result = re.exec(string)) != null){\n      const media = {};\n      var attrs = new AttrList(result[1]);\n      if(attrs.TYPE === type) {\n        media.groupId = attrs['GROUP-ID'];\n        media.name = attrs.NAME;\n        media.type = type;\n        media.default = (attrs.DEFAULT === 'YES');\n        media.autoselect = (attrs.AUTOSELECT === 'YES');\n        media.forced = (attrs.FORCED === 'YES');\n        if (attrs.URI) {\n          media.url = this.resolve(attrs.URI, baseurl);\n        }\n        media.lang = attrs.LANGUAGE;\n        if(!media.name) {\n            media.name = media.lang;\n        }\n        medias.push(media);\n      }\n    }\n    return medias;\n  }\n  /**\n   * Utility method for parseLevelPlaylist to create an initialization vector for a given segment\n   * @returns {Uint8Array}\n   */\n  createInitializationVector (segmentNumber) {\n    var uint8View = new Uint8Array(16);\n\n    for (var i = 12; i < 16; i++) {\n      uint8View[i] = (segmentNumber >> 8 * (15 - i)) & 0xff;\n    }\n\n    return uint8View;\n  }\n\n  /**\n   * Utility method for parseLevelPlaylist to get a fragment's decryption data from the currently parsed encryption key data\n   * @param levelkey - a playlist's encryption info\n   * @param segmentNumber - the fragment's segment number\n   * @returns {*} - an object to be applied as a fragment's decryptdata\n   */\n  fragmentDecryptdataFromLevelkey (levelkey, segmentNumber) {\n    var decryptdata = levelkey;\n\n    if (levelkey && levelkey.method && levelkey.uri && !levelkey.iv) {\n      decryptdata = this.cloneObj(levelkey);\n      decryptdata.iv = this.createInitializationVector(segmentNumber);\n    }\n\n    return decryptdata;\n  }\n\n  avc1toavcoti(codec) {\n    var result, avcdata = codec.split('.');\n    if (avcdata.length > 2) {\n      result = avcdata.shift() + '.';\n      result += parseInt(avcdata.shift()).toString(16);\n      result += ('000' + parseInt(avcdata.shift()).toString(16)).substr(-4);\n    } else {\n      result = codec;\n    }\n    return result;\n  }\n\n  cloneObj(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n\n  parseLevelPlaylist(string, baseurl, id, type) {\n    var currentSN = 0,\n        fragdecryptdata,\n        totalduration = 0,\n        level = {type: null, version: null, url: baseurl, fragments: [], live: true, startSN: 0},\n        levelkey = {method : null, key : null, iv : null, uri : null},\n        cc = 0,\n        programDateTime = null,\n        frag = null,\n        result,\n        regexp,\n        duration = null,\n        title = null,\n        byteRangeEndOffset = null,\n        byteRangeStartOffset = null,\n        tagList = [];\n\n    regexp = /(?:(?:#(EXTM3U))|(?:#EXT-X-(PLAYLIST-TYPE):(.+))|(?:#EXT-X-(MEDIA-SEQUENCE):\\s*(\\d+))|(?:#EXT-X-(TARGETDURATION):\\s*(\\d+))|(?:#EXT-X-(KEY):(.+))|(?:#EXT-X-(START):(.+))|(?:#EXT(INF):\\s*(\\d+(?:\\.\\d+)?)(?:,(.*))?)|(?:(?!#)()(\\S.+))|(?:#EXT-X-(BYTERANGE):\\s*(\\d+(?:@\\d+(?:\\.\\d+)?)?)|(?:#EXT-X-(ENDLIST))|(?:#EXT-X-(DIS)CONTINUITY))|(?:#EXT-X-(PROGRAM-DATE-TIME):(.+))|(?:#EXT-X-(VERSION):(\\d+))|(?:(#)(.*):(.*))|(?:(#)(.*)))(?:.*)\\r?\\n?/g;\n    while ((result = regexp.exec(string)) !== null) {\n      result.shift();\n      result = result.filter(function(n) { return (n !== undefined); });\n      switch (result[0]) {\n        case 'PLAYLIST-TYPE':\n          level.type = result[1].toUpperCase();\n          break;\n        case 'MEDIA-SEQUENCE':\n          currentSN = level.startSN = parseInt(result[1]);\n          break;\n        case 'TARGETDURATION':\n          level.targetduration = parseFloat(result[1]);\n          break;\n        case 'VERSION':\n          level.version = parseInt(result[1]);\n          break;\n        case 'EXTM3U':\n          break;\n        case 'ENDLIST':\n          level.live = false;\n          break;\n        case 'DIS':\n          cc++;\n          tagList.push(result);\n          break;\n        case 'BYTERANGE':\n          var params = result[1].split('@');\n          if (params.length === 1) {\n            byteRangeStartOffset = byteRangeEndOffset;\n          } else {\n            byteRangeStartOffset = parseInt(params[1]);\n          }\n          byteRangeEndOffset = parseInt(params[0]) + byteRangeStartOffset;\n          break;\n        case 'INF':\n          duration = parseFloat(result[1]);\n          title = result[2] ? result[2] : null;\n          tagList.push(result);\n          break;\n        case '': // url\n          if (!isNaN(duration)) {\n            var sn = currentSN++;\n            fragdecryptdata = this.fragmentDecryptdataFromLevelkey(levelkey, sn);\n            var url = result[1] ? this.resolve(result[1], baseurl) : null;\n            frag = {url: url,\n                    type : type,\n                    duration: duration,\n                    title: title,\n                    start: totalduration,\n                    sn: sn,\n                    level: id,\n                    cc: cc,\n                    decryptdata : fragdecryptdata,\n                    programDateTime: programDateTime,\n                    tagList: tagList};\n            // only include byte range options if used/needed\n            if(byteRangeStartOffset !== null) {\n              frag.byteRangeStartOffset = byteRangeStartOffset;\n              frag.byteRangeEndOffset = byteRangeEndOffset;\n            }\n            level.fragments.push(frag);\n            totalduration += duration;\n            duration = null;\n            title = null;\n            byteRangeStartOffset = null;\n            programDateTime = null;\n            tagList = [];\n          }\n          break;\n        case 'KEY':\n          // https://tools.ietf.org/html/draft-pantos-http-live-streaming-08#section-3.4.4\n          var decryptparams = result[1];\n          var keyAttrs = new AttrList(decryptparams);\n          var decryptmethod = keyAttrs.enumeratedString('METHOD'),\n              decrypturi = keyAttrs.URI,\n              decryptiv = keyAttrs.hexadecimalInteger('IV');\n          if (decryptmethod) {\n            levelkey = { method: null, key: null, iv: null, uri: null };\n            if ((decrypturi) && (decryptmethod === 'AES-128')) {\n              levelkey.method = decryptmethod;\n              // URI to get the key\n              levelkey.uri = this.resolve(decrypturi, baseurl);\n              levelkey.key = null;\n              // Initialization Vector (IV)\n              levelkey.iv = decryptiv;\n            }\n          }\n          break;\n        case 'START':\n          let startParams = result[1];\n          let startAttrs = new AttrList(startParams);\n          let startTimeOffset = startAttrs.decimalFloatingPoint('TIME-OFFSET');\n          //TIME-OFFSET can be 0\n          if ( !isNaN(startTimeOffset) ) {\n            level.startTimeOffset = startTimeOffset;\n          }\n          break;\n        case 'PROGRAM-DATE-TIME':\n          programDateTime = new Date(Date.parse(result[1]));\n          tagList.push(result);\n          break;\n        case '#':\n          result.shift();\n          tagList.push(result);\n          break;\n        default:\n          logger.warn(`line parsed but not handled: ${result}`);\n          break;\n      }\n    }\n    //logger.log('found ' + level.fragments.length + ' fragments');\n    if(frag && !frag.url) {\n      level.fragments.pop();\n      totalduration-=frag.duration;\n    }\n    level.totalduration = totalduration;\n    level.averagetargetduration = totalduration / level.fragments.length;\n    level.endSN = currentSN - 1;\n    return level;\n  }\n\n  loadsuccess(response, stats, context) {\n    var string = response.data,\n        url = response.url,\n        type = context.type,\n        id = context.id,\n        level = context.level,\n        hls = this.hls;\n\n    this.loaders[type] = undefined;\n    // responseURL not supported on some browsers (it is used to detect URL redirection)\n    // data-uri mode also not supported (but no need to detect redirection)\n    if (url === undefined || url.indexOf('data:') === 0) {\n      // fallback to initial URL\n      url = context.url;\n    }\n    stats.tload = performance.now();\n    //stats.mtime = new Date(target.getResponseHeader('Last-Modified'));\n    if (string.indexOf('#EXTM3U') === 0) {\n      if (string.indexOf('#EXTINF:') > 0) {\n        let isLevel = (type !== 'audioTrack'),\n            levelDetails = this.parseLevelPlaylist(string, url, (isLevel ? level : id) || 0, isLevel ? 'main' : 'audio');\n        if (type === 'manifest') {\n        // first request, stream manifest (no master playlist), fire manifest loaded event with level details\n          hls.trigger(Event.MANIFEST_LOADED, {levels: [{url: url, details : levelDetails}], audioTracks : [], url: url, stats: stats});\n        }\n        stats.tparsed = performance.now();\n        if (isLevel) {\n          hls.trigger(Event.LEVEL_LOADED, {details: levelDetails, level: level || 0, id: id || 0, stats: stats});\n        } else {\n          hls.trigger(Event.AUDIO_TRACK_LOADED, {details: levelDetails, id: id, stats: stats});\n        }\n      } else {\n        let levels = this.parseMasterPlaylist(string, url);\n        // multi level playlist, parse level info\n        if (levels.length) {\n          let audiotracks = this.parseMasterPlaylistMedia(string, url, 'AUDIO');\n          if (audiotracks.length) {\n            // check if we have found an audio track embedded in main playlist (audio track without URI attribute)\n            let embeddedAudioFound = false;\n            audiotracks.forEach(audioTrack => {\n              if(!audioTrack.url) {\n                embeddedAudioFound = true;\n              }\n            });\n            // if no embedded audio track defined, but audio codec signaled in quality level, we need to signal this main audio track\n            // this could happen with playlists with alt audio rendition in which quality levels (main) contains both audio+video. but with mixed audio track not signaled\n            if (embeddedAudioFound === false && levels[0].audioCodec && !levels[0].attrs.AUDIO) {\n              logger.log('audio codec signaled in quality level, but no embedded audio track signaled, create one');\n              audiotracks.unshift({ type : 'main', name : 'main'});\n            }\n          }\n          hls.trigger(Event.MANIFEST_LOADED, {levels: levels, audioTracks : audiotracks, url: url, stats: stats});\n        } else {\n          hls.trigger(Event.ERROR, {type: ErrorTypes.NETWORK_ERROR, details: ErrorDetails.MANIFEST_PARSING_ERROR, fatal: true, url: url, reason: 'no level found in manifest'});\n        }\n      }\n    } else {\n      hls.trigger(Event.ERROR, {type: ErrorTypes.NETWORK_ERROR, details: ErrorDetails.MANIFEST_PARSING_ERROR, fatal: true, url: url, reason: 'no EXTM3U delimiter'});\n    }\n  }\n\n  loaderror(response, context) {\n    var details, fatal,loader = context.loader;\n    switch(context.type) {\n      case 'manifest':\n        details = ErrorDetails.MANIFEST_LOAD_ERROR;\n        fatal = true;\n        break;\n      case 'level':\n        details = ErrorDetails.LEVEL_LOAD_ERROR;\n        fatal = false;\n        break;\n      case 'audioTrack':\n        details = ErrorDetails.AUDIO_TRACK_LOAD_ERROR;\n        fatal = false;\n        break;\n    }\n    if (loader) {\n      loader.abort();\n      this.loaders[context.type] = undefined;\n    }\n    this.hls.trigger(Event.ERROR, {type: ErrorTypes.NETWORK_ERROR, details: details, fatal: fatal, url: context.url, loader: loader, response: response, context : context});\n  }\n\n  loadtimeout(stats, context) {\n    var details, fatal, loader = context.loader;\n    switch(context.type) {\n      case 'manifest':\n        details = ErrorDetails.MANIFEST_LOAD_TIMEOUT;\n        fatal = true;\n        break;\n      case 'level':\n        details = ErrorDetails.LEVEL_LOAD_TIMEOUT;\n        fatal = false;\n        break;\n      case 'audioTrack':\n        details = ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT;\n        fatal = false;\n        break;\n    }\n    if (loader) {\n      loader.abort();\n      this.loaders[context.type] = undefined;\n    }\n    this.hls.trigger(Event.ERROR, {type: ErrorTypes.NETWORK_ERROR, details: details, fatal: fatal, url: context.url, loader: loader, context : context});\n  }\n}\n\nexport default PlaylistLoader;\n",
    "/**\n * Generate MP4 Box\n*/\n\n//import Hex from '../utils/hex';\nclass MP4 {\n  static init() {\n    MP4.types = {\n      avc1: [], // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      mvex: [],\n      mvhd: [],\n      sdtp: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: [],\n      smhd: []\n    };\n\n    var i;\n    for (i in MP4.types) {\n      if (MP4.types.hasOwnProperty(i)) {\n        MP4.types[i] = [\n          i.charCodeAt(0),\n          i.charCodeAt(1),\n          i.charCodeAt(2),\n          i.charCodeAt(3)\n        ];\n      }\n    }\n\n    var videoHdlr = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65,\n      0x6f, 0x48, 0x61, 0x6e,\n      0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]);\n\n    var audioHdlr = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e,\n      0x64, 0x48, 0x61, 0x6e,\n      0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ]);\n\n    MP4.HDLR_TYPES = {\n      'video': videoHdlr,\n      'audio': audioHdlr\n    };\n\n    var dref = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n    ]);\n\n    var stco = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ]);\n\n    MP4.STTS = MP4.STSC = MP4.STCO = stco;\n\n    MP4.STSZ = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00, // sample_count\n    ]);\n    MP4.VMHD = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00,\n      0x00, 0x00,\n      0x00, 0x00 // opcolor\n    ]);\n    MP4.SMHD = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance\n      0x00, 0x00 // reserved\n    ]);\n\n    MP4.STSD = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01]);// entry_count\n\n    var majorBrand = new Uint8Array([105,115,111,109]); // isom\n    var avc1Brand = new Uint8Array([97,118,99,49]); // avc1\n    var minorVersion = new Uint8Array([0, 0, 0, 1]);\n\n    MP4.FTYP = MP4.box(MP4.types.ftyp, majorBrand, minorVersion, majorBrand, avc1Brand);\n    MP4.DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, dref));\n  }\n\n  static box(type) {\n  var\n    payload = Array.prototype.slice.call(arguments, 1),\n    size = 8,\n    i = payload.length,\n    len = i,\n    result;\n    // calculate the total size we need to allocate\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n    result = new Uint8Array(size);\n    result[0] = (size >> 24) & 0xff;\n    result[1] = (size >> 16) & 0xff;\n    result[2] = (size >> 8) & 0xff;\n    result[3] = size  & 0xff;\n    result.set(type, 4);\n    // copy the payload into the result\n    for (i = 0, size = 8; i < len; i++) {\n      // copy payload[i] array @ offset size\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n    return result;\n  }\n\n  static hdlr(type) {\n    return MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type]);\n  }\n\n  static mdat(data) {\n    return MP4.box(MP4.types.mdat, data);\n  }\n\n  static mdhd(timescale, duration) {\n    duration *= timescale;\n    return MP4.box(MP4.types.mdhd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      (timescale >> 24) & 0xFF,\n      (timescale >> 16) & 0xFF,\n      (timescale >>  8) & 0xFF,\n      timescale & 0xFF, // timescale\n      (duration >> 24),\n      (duration >> 16) & 0xFF,\n      (duration >>  8) & 0xFF,\n      duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00\n    ]));\n  }\n\n  static mdia(track) {\n    return MP4.box(MP4.types.mdia, MP4.mdhd(track.timescale, track.duration), MP4.hdlr(track.type), MP4.minf(track));\n  }\n\n  static mfhd(sequenceNumber) {\n    return MP4.box(MP4.types.mfhd, new Uint8Array([\n      0x00,\n      0x00, 0x00, 0x00, // flags\n      (sequenceNumber >> 24),\n      (sequenceNumber >> 16) & 0xFF,\n      (sequenceNumber >>  8) & 0xFF,\n      sequenceNumber & 0xFF, // sequence_number\n    ]));\n  }\n\n  static minf(track) {\n    if (track.type === 'audio') {\n      return MP4.box(MP4.types.minf, MP4.box(MP4.types.smhd, MP4.SMHD), MP4.DINF, MP4.stbl(track));\n    } else {\n      return MP4.box(MP4.types.minf, MP4.box(MP4.types.vmhd, MP4.VMHD), MP4.DINF, MP4.stbl(track));\n    }\n  }\n\n  static moof(sn, baseMediaDecodeTime, track) {\n    return MP4.box(MP4.types.moof, MP4.mfhd(sn), MP4.traf(track,baseMediaDecodeTime));\n  }\n/**\n * @param tracks... (optional) {array} the tracks associated with this movie\n */\n  static moov(tracks) {\n    var\n      i = tracks.length,\n      boxes = [];\n\n    while (i--) {\n      boxes[i] = MP4.trak(tracks[i]);\n    }\n\n    return MP4.box.apply(null, [MP4.types.moov, MP4.mvhd(tracks[0].timescale, tracks[0].duration)].concat(boxes).concat(MP4.mvex(tracks)));\n  }\n\n  static mvex(tracks) {\n    var\n      i = tracks.length,\n      boxes = [];\n\n    while (i--) {\n      boxes[i] = MP4.trex(tracks[i]);\n    }\n    return MP4.box.apply(null, [MP4.types.mvex].concat(boxes));\n  }\n\n  static mvhd(timescale,duration) {\n    duration*=timescale;\n    var\n      bytes = new Uint8Array([\n        0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01, // creation_time\n        0x00, 0x00, 0x00, 0x02, // modification_time\n        (timescale >> 24) & 0xFF,\n        (timescale >> 16) & 0xFF,\n        (timescale >>  8) & 0xFF,\n        timescale & 0xFF, // timescale\n        (duration >> 24) & 0xFF,\n        (duration >> 16) & 0xFF,\n        (duration >>  8) & 0xFF,\n        duration & 0xFF, // duration\n        0x00, 0x01, 0x00, 0x00, // 1.0 rate\n        0x01, 0x00, // 1.0 volume\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x01, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, // pre_defined\n        0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n    return MP4.box(MP4.types.mvhd, bytes);\n  }\n\n  static sdtp(track) {\n    var\n      samples = track.samples || [],\n      bytes = new Uint8Array(4 + samples.length),\n      flags,\n      i;\n    // leave the full box header (4 bytes) all zero\n    // write the sample table\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] = (flags.dependsOn << 4) |\n        (flags.isDependedOn << 2) |\n        (flags.hasRedundancy);\n    }\n\n    return MP4.box(MP4.types.sdtp, bytes);\n  }\n\n  static stbl(track) {\n    return MP4.box(MP4.types.stbl, MP4.stsd(track), MP4.box(MP4.types.stts, MP4.STTS), MP4.box(MP4.types.stsc, MP4.STSC), MP4.box(MP4.types.stsz, MP4.STSZ), MP4.box(MP4.types.stco, MP4.STCO));\n  }\n\n  static avc1(track) {\n    var sps = [], pps = [], i, data, len;\n    // assemble the SPSs\n\n    for (i = 0; i < track.sps.length; i++) {\n      data = track.sps[i];\n      len = data.byteLength;\n      sps.push((len >>> 8) & 0xFF);\n      sps.push((len & 0xFF));\n      sps = sps.concat(Array.prototype.slice.call(data)); // SPS\n    }\n\n    // assemble the PPSs\n    for (i = 0; i < track.pps.length; i++) {\n      data = track.pps[i];\n      len = data.byteLength;\n      pps.push((len >>> 8) & 0xFF);\n      pps.push((len & 0xFF));\n      pps = pps.concat(Array.prototype.slice.call(data));\n    }\n\n    var avcc = MP4.box(MP4.types.avcC, new Uint8Array([\n            0x01,   // version\n            sps[3], // profile\n            sps[4], // profile compat\n            sps[5], // level\n            0xfc | 3, // lengthSizeMinusOne, hard-coded to 4 bytes\n            0xE0 | track.sps.length // 3bit reserved (111) + numOfSequenceParameterSets\n          ].concat(sps).concat([\n            track.pps.length // numOfPictureParameterSets\n          ]).concat(pps))), // \"PPS\"\n        width = track.width,\n        height = track.height;\n    //console.log('avcc:' + Hex.hexDump(avcc));\n    return MP4.box(MP4.types.avc1, new Uint8Array([\n        0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, // pre_defined\n        (width >> 8) & 0xFF,\n        width & 0xff, // width\n        (height >> 8) & 0xFF,\n        height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x12,\n        0x64, 0x61, 0x69, 0x6C, //dailymotion/hls.js\n        0x79, 0x6D, 0x6F, 0x74,\n        0x69, 0x6F, 0x6E, 0x2F,\n        0x68, 0x6C, 0x73, 0x2E,\n        0x6A, 0x73, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18,   // depth = 24\n        0x11, 0x11]), // pre_defined = -1\n          avcc,\n          MP4.box(MP4.types.btrt, new Uint8Array([\n            0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n            0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n            0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n          );\n  }\n\n  static esds(track) {\n    var configlen = track.config.length;\n    return new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n\n      0x03, // descriptor_type\n      0x17+configlen, // length\n      0x00, 0x01, //es_id\n      0x00, // stream_priority\n\n      0x04, // descriptor_type\n      0x0f+configlen, // length\n      0x40, //codec : mpeg4_audio\n      0x15, // stream_type\n      0x00, 0x00, 0x00, // buffer_size\n      0x00, 0x00, 0x00, 0x00, // maxBitrate\n      0x00, 0x00, 0x00, 0x00, // avgBitrate\n\n      0x05 // descriptor_type\n      ].concat([configlen]).concat(track.config).concat([0x06, 0x01, 0x02])); // GASpecificConfig)); // length + audio config descriptor\n  }\n\n  static mp4a(track) {\n    var audiosamplerate = track.audiosamplerate;\n      return MP4.box(MP4.types.mp4a, new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, track.channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      (audiosamplerate >> 8) & 0xFF,\n      audiosamplerate & 0xff, //\n      0x00, 0x00]),\n      MP4.box(MP4.types.esds, MP4.esds(track)));\n  }\n\n  static stsd(track) {\n    if (track.type === 'audio') {\n      return MP4.box(MP4.types.stsd, MP4.STSD, MP4.mp4a(track));\n    } else {\n      return MP4.box(MP4.types.stsd, MP4.STSD, MP4.avc1(track));\n    }\n  }\n\n  static tkhd(track) {\n    var id = track.id,\n        duration = track.duration*track.timescale,\n        width = track.width,\n        height = track.height;\n    return MP4.box(MP4.types.tkhd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (id >> 24) & 0xFF,\n      (id >> 16) & 0xFF,\n      (id >> 8) & 0xFF,\n      id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (duration >> 24),\n      (duration >> 16) & 0xFF,\n      (duration >>  8) & 0xFF,\n      duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x00, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (width >> 8) & 0xFF,\n      width & 0xFF,\n      0x00, 0x00, // width\n      (height >> 8) & 0xFF,\n      height & 0xFF,\n      0x00, 0x00 // height\n    ]));\n  }\n\n  static traf(track,baseMediaDecodeTime) {\n    var sampleDependencyTable = MP4.sdtp(track),\n        id = track.id;\n    return MP4.box(MP4.types.traf,\n               MP4.box(MP4.types.tfhd, new Uint8Array([\n                 0x00, // version 0\n                 0x00, 0x00, 0x00, // flags\n                 (id >> 24),\n                 (id >> 16) & 0XFF,\n                 (id >> 8) & 0XFF,\n                 (id & 0xFF) // track_ID\n               ])),\n               MP4.box(MP4.types.tfdt, new Uint8Array([\n                 0x00, // version 0\n                 0x00, 0x00, 0x00, // flags\n                 (baseMediaDecodeTime >>24),\n                 (baseMediaDecodeTime >> 16) & 0XFF,\n                 (baseMediaDecodeTime >> 8) & 0XFF,\n                 (baseMediaDecodeTime & 0xFF) // baseMediaDecodeTime\n               ])),\n               MP4.trun(track,\n                    sampleDependencyTable.length +\n                    16 + // tfhd\n                    16 + // tfdt\n                    8 +  // traf header\n                    16 + // mfhd\n                    8 +  // moof header\n                    8),  // mdat header\n               sampleDependencyTable);\n  }\n\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n  static trak(track) {\n    track.duration = track.duration || 0xffffffff;\n    return MP4.box(MP4.types.trak, MP4.tkhd(track), MP4.mdia(track));\n  }\n\n  static trex(track) {\n    var id = track.id;\n    return MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n     (id >> 24),\n     (id >> 16) & 0XFF,\n     (id >> 8) & 0XFF,\n     (id & 0xFF), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]));\n  }\n\n  static trun(track, offset) {\n    var samples= track.samples || [],\n        len = samples.length,\n        arraylen = 12 + (16 * len),\n        array = new Uint8Array(arraylen),\n        i,sample,duration,size,flags,cts;\n    offset += 8 + arraylen;\n    array.set([\n      0x00, // version 0\n      0x00, 0x0f, 0x01, // flags\n      (len >>> 24) & 0xFF,\n      (len >>> 16) & 0xFF,\n      (len >>> 8) & 0xFF,\n      len & 0xFF, // sample_count\n      (offset >>> 24) & 0xFF,\n      (offset >>> 16) & 0xFF,\n      (offset >>> 8) & 0xFF,\n      offset & 0xFF // data_offset\n    ],0);\n    for (i = 0; i < len; i++) {\n      sample = samples[i];\n      duration = sample.duration;\n      size = sample.size;\n      flags = sample.flags;\n      cts = sample.cts;\n      array.set([\n        (duration >>> 24) & 0xFF,\n        (duration >>> 16) & 0xFF,\n        (duration >>> 8) & 0xFF,\n        duration & 0xFF, // sample_duration\n        (size >>> 24) & 0xFF,\n        (size >>> 16) & 0xFF,\n        (size >>> 8) & 0xFF,\n        size & 0xFF, // sample_size\n        (flags.isLeading << 2) | flags.dependsOn,\n        (flags.isDependedOn << 6) |\n          (flags.hasRedundancy << 4) |\n          (flags.paddingValue << 1) |\n          flags.isNonSync,\n        flags.degradPrio & 0xF0 << 8,\n        flags.degradPrio & 0x0F, // sample_flags\n        (cts >>> 24) & 0xFF,\n        (cts >>> 16) & 0xFF,\n        (cts >>> 8) & 0xFF,\n        cts & 0xFF // sample_composition_time_offset\n      ],12+16*i);\n    }\n    return MP4.box(MP4.types.trun, array);\n  }\n\n  static initSegment(tracks) {\n    if (!MP4.types) {\n      MP4.init();\n    }\n    var movie = MP4.moov(tracks), result;\n    result = new Uint8Array(MP4.FTYP.byteLength + movie.byteLength);\n    result.set(MP4.FTYP);\n    result.set(movie, MP4.FTYP.byteLength);\n    return result;\n  }\n}\n\nexport default MP4;\n",
    "/**\n * fMP4 remuxer\n*/\n\n\nimport AAC from '../helper/aac';\nimport Event from '../events';\nimport {logger} from '../utils/logger';\nimport MP4 from '../remux/mp4-generator';\nimport {ErrorTypes, ErrorDetails} from '../errors';\nimport '../utils/polyfill';\n\nclass MP4Remuxer {\n  constructor(observer, id, config) {\n    this.observer = observer;\n    this.id = id;\n    this.config = config;\n    this.ISGenerated = false;\n    this.PES2MP4SCALEFACTOR = 4;\n    this.PES_TIMESCALE = 90000;\n    this.MP4_TIMESCALE = this.PES_TIMESCALE / this.PES2MP4SCALEFACTOR;\n  }\n\n  get passthrough() {\n    return false;\n  }\n\n  destroy() {\n  }\n\n  insertDiscontinuity() {\n    this._initPTS = this._initDTS = undefined;\n  }\n\n  switchLevel() {\n    this.ISGenerated = false;\n  }\n\n  remux(level,sn,audioTrack,videoTrack,id3Track,textTrack,timeOffset, contiguous,accurateTimeOffset) {\n    this.level = level;\n    this.sn = sn;\n    // generate Init Segment if needed\n    if (!this.ISGenerated) {\n      this.generateIS(audioTrack,videoTrack,timeOffset);\n    }\n\n    if (this.ISGenerated) {\n      // Purposefully remuxing audio before video, so that remuxVideo can use nextAacPts, which is\n      // calculated in remuxAudio.\n      //logger.log('nb AAC samples:' + audioTrack.samples.length);\n      if (audioTrack.samples.length) {\n        let audioData = this.remuxAudio(audioTrack,timeOffset,contiguous,accurateTimeOffset);\n        //logger.log('nb AVC samples:' + videoTrack.samples.length);\n        if (videoTrack.samples.length) {\n          let audioTrackLength;\n          if (audioData) {\n            audioTrackLength = audioData.endPTS - audioData.startPTS;\n          }\n          this.remuxVideo(videoTrack,timeOffset,contiguous,audioTrackLength);\n        }\n      } else {\n        let videoData;\n        //logger.log('nb AVC samples:' + videoTrack.samples.length);\n        if (videoTrack.samples.length) {\n          videoData = this.remuxVideo(videoTrack,timeOffset,contiguous);\n        }\n        if (videoData && audioTrack.codec) {\n          this.remuxEmptyAudio(audioTrack, timeOffset, contiguous, videoData);\n        }\n      }\n    }\n    //logger.log('nb ID3 samples:' + audioTrack.samples.length);\n    if (id3Track.samples.length) {\n      this.remuxID3(id3Track,timeOffset);\n    }\n    //logger.log('nb ID3 samples:' + audioTrack.samples.length);\n    if (textTrack.samples.length) {\n      this.remuxText(textTrack,timeOffset);\n    }\n    //notify end of parsing\n    this.observer.trigger(Event.FRAG_PARSED, { id : this.id , level : this.level, sn : this.sn});\n  }\n\n  generateIS(audioTrack,videoTrack,timeOffset) {\n    var observer = this.observer,\n        audioSamples = audioTrack.samples,\n        videoSamples = videoTrack.samples,\n        pesTimeScale = this.PES_TIMESCALE,\n        tracks = {},\n        data = { id : this.id, level : this.level, sn : this.sn, tracks : tracks, unique : false },\n        computePTSDTS = (this._initPTS === undefined),\n        initPTS, initDTS;\n\n    if (computePTSDTS) {\n      initPTS = initDTS = Infinity;\n    }\n    if (audioTrack.config && audioSamples.length) {\n      audioTrack.timescale = audioTrack.audiosamplerate;\n      // MP4 duration (track duration in seconds multiplied by timescale) is coded on 32 bits\n      // we know that each AAC sample contains 1024 frames....\n      // in order to avoid overflowing the 32 bit counter for large duration, we use smaller timescale (timescale/gcd)\n      // we just need to ensure that AAC sample duration will still be an integer (will be 1024/gcd)\n      if (audioTrack.timescale * audioTrack.duration > Math.pow(2, 32)) {\n        let greatestCommonDivisor = function(a, b) {\n            if ( ! b) {\n                return a;\n            }\n            return greatestCommonDivisor(b, a % b);\n        };\n        audioTrack.timescale = audioTrack.audiosamplerate / greatestCommonDivisor(audioTrack.audiosamplerate,1024);\n      }\n      logger.log ('audio mp4 timescale :'+ audioTrack.timescale);\n      tracks.audio = {\n        container : 'audio/mp4',\n        codec :  audioTrack.codec,\n        initSegment : MP4.initSegment([audioTrack]),\n        metadata : {\n          channelCount : audioTrack.channelCount\n        }\n      };\n      if (computePTSDTS) {\n        // remember first PTS of this demuxing context. for audio, PTS = DTS\n        initPTS = initDTS = audioSamples[0].pts - pesTimeScale * timeOffset;\n      }\n    }\n\n    if (videoTrack.sps && videoTrack.pps && videoSamples.length) {\n      videoTrack.timescale = this.MP4_TIMESCALE;\n      tracks.video = {\n        container : 'video/mp4',\n        codec :  videoTrack.codec,\n        initSegment : MP4.initSegment([videoTrack]),\n        metadata : {\n          width : videoTrack.width,\n          height : videoTrack.height\n        }\n      };\n      if (computePTSDTS) {\n        initPTS = Math.min(initPTS,videoSamples[0].pts - pesTimeScale * timeOffset);\n        initDTS = Math.min(initDTS,videoSamples[0].dts - pesTimeScale * timeOffset);\n      }\n    }\n\n    if(Object.keys(tracks).length) {\n      observer.trigger(Event.FRAG_PARSING_INIT_SEGMENT,data);\n      this.ISGenerated = true;\n      if (computePTSDTS) {\n        this._initPTS = initPTS;\n        this._initDTS = initDTS;\n      }\n    } else {\n      observer.trigger(Event.ERROR, {type : ErrorTypes.MEDIA_ERROR, id : this.id, details: ErrorDetails.FRAG_PARSING_ERROR, fatal: false, reason: 'no audio/video samples found'});\n    }\n  }\n\n  remuxVideo(track, timeOffset, contiguous, audioTrackLength) {\n    var offset = 8,\n        pesTimeScale = this.PES_TIMESCALE,\n        pes2mp4ScaleFactor = this.PES2MP4SCALEFACTOR,\n        mp4SampleDuration,\n        mdat, moof,\n        firstPTS, firstDTS,\n        nextDTS,\n        lastPTS, lastDTS,\n        inputSamples = track.samples,\n        outputSamples = [];\n\n  // for (let i = 0; i < track.samples.length; i++) {\n  //   let avcSample = track.samples[i];\n  //   let units = avcSample.units.units;\n  //   let unitsString = '';\n  //   for (let j = 0; j < units.length ; j++) {\n  //     unitsString += units[j].type + ',';\n  //     if (units[j].data.length < 500) {\n  //       unitsString += Hex.hexDump(units[j].data);\n  //     }\n  //   }\n  //   logger.log(avcSample.pts + '/' + avcSample.dts + ',' + unitsString + avcSample.units.length);\n  // }\n\n    // handle broken streams with PTS < DTS, tolerance up 200ms (18000 in 90kHz timescale)\n    let PTSDTSshift = inputSamples.reduce( (prev, curr) => Math.max(Math.min(prev,curr.pts-curr.dts),-18000),0);\n    if (PTSDTSshift < 0) {\n      logger.warn(`PTS < DTS detected in video samples, shifting DTS by ${Math.round(PTSDTSshift/90)} ms to overcome this issue`);\n      for (let i = 0; i < inputSamples.length; i++) {\n        inputSamples[i].dts += PTSDTSshift;\n      }\n    }\n\n  // PTS is coded on 33bits, and can loop from -2^32 to 2^32\n  // PTSNormalize will make PTS/DTS value monotonic, we use last known DTS value as reference value\n   let nextAvcDts;\n   // contiguous fragments are consecutive fragments from same quality level (same level, new SN = old SN + 1)\n    if (contiguous) {\n      // if parsed fragment is contiguous with last one, let's use last DTS value as reference\n      nextAvcDts = this.nextAvcDts;\n    } else {\n      // if not contiguous, let's use target timeOffset\n      nextAvcDts = timeOffset*pesTimeScale;\n    }\n\n    // compute first DTS and last DTS, normalize them against reference value\n    let sample = inputSamples[0];\n    firstDTS =  Math.max(this._PTSNormalize(sample.dts - this._initDTS,nextAvcDts),0);\n    firstPTS =  Math.max(this._PTSNormalize(sample.pts - this._initDTS,nextAvcDts),0);\n\n    // check timestamp continuity accross consecutive fragments (this is to remove inter-fragment gap/hole)\n    let delta = Math.round((firstDTS - nextAvcDts) / 90);\n    // if fragment are contiguous, detect hole/overlapping between fragments\n    if (contiguous) {\n      if (delta) {\n        if (delta > 1) {\n          logger.log(`AVC:${delta} ms hole between fragments detected,filling it`);\n        } else if (delta < -1) {\n          logger.log(`AVC:${(-delta)} ms overlapping between fragments detected`);\n        }\n        // remove hole/gap : set DTS to next expected DTS\n        firstDTS = nextAvcDts;\n        inputSamples[0].dts = firstDTS + this._initDTS;\n        // offset PTS as well, ensure that PTS is smaller or equal than new DTS\n        firstPTS = Math.max(firstPTS - delta, nextAvcDts);\n        inputSamples[0].pts = firstPTS + this._initDTS;\n        logger.log(`Video/PTS/DTS adjusted: ${Math.round(firstPTS/90)}/${Math.round(firstDTS/90)},delta:${delta} ms`);\n      }\n    }\n    nextDTS = firstDTS;\n\n    // compute lastPTS/lastDTS\n    sample = inputSamples[inputSamples.length-1];\n    lastDTS = Math.max(this._PTSNormalize(sample.dts - this._initDTS,nextAvcDts) ,0);\n    lastPTS = Math.max(this._PTSNormalize(sample.pts - this._initDTS,nextAvcDts) ,0);\n    lastPTS = Math.max(lastPTS, lastDTS);\n\n    let vendor = navigator.vendor, userAgent = navigator.userAgent,\n        isSafari = vendor && vendor.indexOf('Apple') > -1 && userAgent && !userAgent.match('CriOS');\n\n      // on Safari let's signal the same sample duration for all samples\n      // sample duration (as expected by trun MP4 boxes), should be the delta between sample DTS\n      // set this constant duration as being the avg delta between consecutive DTS.\n    if (isSafari) {\n      mp4SampleDuration = Math.round((lastDTS-firstDTS)/(pes2mp4ScaleFactor*(inputSamples.length-1)));\n    }\n\n    // normalize all PTS/DTS now ...\n    for (let i = 0; i < inputSamples.length; i++) {\n      let sample = inputSamples[i];\n      if (isSafari) {\n        // sample DTS is computed using a constant decoding offset (mp4SampleDuration) between samples\n        sample.dts = firstDTS + i*pes2mp4ScaleFactor*mp4SampleDuration;\n      } else {\n        // ensure sample monotonic DTS\n        sample.dts = Math.max(this._PTSNormalize(sample.dts - this._initDTS, nextAvcDts),firstDTS);\n        // ensure dts is a multiple of scale factor to avoid rounding issues\n        sample.dts = Math.round(sample.dts/pes2mp4ScaleFactor)*pes2mp4ScaleFactor;\n      }\n      // we normalize PTS against nextAvcDts, we also substract initDTS (some streams don't start @ PTS O)\n      // and we ensure that computed value is greater or equal than sample DTS\n      sample.pts = Math.max(this._PTSNormalize(sample.pts - this._initDTS,nextAvcDts) , sample.dts);\n      // ensure pts is a multiple of scale factor to avoid rounding issues\n      sample.pts = Math.round(sample.pts/pes2mp4ScaleFactor)*pes2mp4ScaleFactor;\n    }\n\n    /* concatenate the video data and construct the mdat in place\n      (need 8 more bytes to fill length and mpdat type) */\n    mdat = new Uint8Array(track.len + (4 * track.nbNalu) + 8);\n    let view = new DataView(mdat.buffer);\n    view.setUint32(0, mdat.byteLength);\n    mdat.set(MP4.types.mdat, 4);\n\n    for (let i = 0; i < inputSamples.length; i++) {\n      let avcSample = inputSamples[i],\n          mp4SampleLength = 0,\n          compositionTimeOffset;\n      // convert NALU bitstream to MP4 format (prepend NALU with size field)\n      while (avcSample.units.units.length) {\n        let unit = avcSample.units.units.shift();\n        view.setUint32(offset, unit.data.byteLength);\n        offset += 4;\n        mdat.set(unit.data, offset);\n        offset += unit.data.byteLength;\n        mp4SampleLength += 4 + unit.data.byteLength;\n      }\n\n      if(!isSafari) {\n        // expected sample duration is the Decoding Timestamp diff of consecutive samples\n        if (i < inputSamples.length - 1) {\n          mp4SampleDuration = inputSamples[i+1].dts - avcSample.dts;\n        } else {\n          let config = this.config,\n              lastFrameDuration = avcSample.dts - inputSamples[i > 0 ? i-1 : i].dts;\n          if (config.stretchShortVideoTrack) {\n            // In some cases, a segment's audio track duration may exceed the video track duration.\n            // Since we've already remuxed audio, and we know how long the audio track is, we look to\n            // see if the delta to the next segment is longer than the minimum of maxBufferHole and\n            // maxSeekHole. If so, playback would potentially get stuck, so we artificially inflate\n            // the duration of the last frame to minimize any potential gap between segments.\n            let maxBufferHole = config.maxBufferHole,\n                maxSeekHole = config.maxSeekHole,\n                gapTolerance = Math.floor(Math.min(maxBufferHole, maxSeekHole) * pesTimeScale),\n                deltaToFrameEnd = (audioTrackLength ? firstPTS + audioTrackLength * pesTimeScale : this.nextAacPts) - avcSample.pts;\n            if (deltaToFrameEnd > gapTolerance) {\n              // We subtract lastFrameDuration from deltaToFrameEnd to try to prevent any video\n              // frame overlap. maxBufferHole/maxSeekHole should be >> lastFrameDuration anyway.\n              mp4SampleDuration = deltaToFrameEnd - lastFrameDuration;\n              if (mp4SampleDuration < 0) {\n                mp4SampleDuration = lastFrameDuration;\n              }\n              logger.log(`It is approximately ${deltaToFrameEnd/90} ms to the next segment; using duration ${mp4SampleDuration/90} ms for the last video frame.`);\n            } else {\n              mp4SampleDuration = lastFrameDuration;\n            }\n          } else {\n            mp4SampleDuration = lastFrameDuration;\n          }\n        }\n        mp4SampleDuration /= pes2mp4ScaleFactor;\n        compositionTimeOffset = Math.round((avcSample.pts - avcSample.dts) / pes2mp4ScaleFactor);\n      } else {\n        compositionTimeOffset = Math.max(0,mp4SampleDuration*Math.round((avcSample.pts - avcSample.dts)/(pes2mp4ScaleFactor*mp4SampleDuration)));\n      }\n\n\n      //console.log('PTS/DTS/initDTS/normPTS/normDTS/relative PTS : ${avcSample.pts}/${avcSample.dts}/${this._initDTS}/${ptsnorm}/${dtsnorm}/${(avcSample.pts/4294967296).toFixed(3)}');\n      outputSamples.push({\n        size: mp4SampleLength,\n         // constant duration\n        duration: mp4SampleDuration,\n        cts: compositionTimeOffset,\n        flags: {\n          isLeading: 0,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradPrio: 0,\n          dependsOn : avcSample.key ? 2 : 1,\n          isNonSync : avcSample.key ? 0 : 1\n        }\n      });\n    }\n    // next AVC sample DTS should be equal to last sample DTS + last sample duration (in PES timescale)\n    this.nextAvcDts = lastDTS + mp4SampleDuration*pes2mp4ScaleFactor;\n    let dropped = track.dropped;\n    track.len = 0;\n    track.nbNalu = 0;\n    track.dropped = 0;\n    if(outputSamples.length && navigator.userAgent.toLowerCase().indexOf('chrome') > -1) {\n      let flags = outputSamples[0].flags;\n    // chrome workaround, mark first sample as being a Random Access Point to avoid sourcebuffer append issue\n    // https://code.google.com/p/chromium/issues/detail?id=229412\n      flags.dependsOn = 2;\n      flags.isNonSync = 0;\n    }\n    track.samples = outputSamples;\n    moof = MP4.moof(track.sequenceNumber++, firstDTS / pes2mp4ScaleFactor, track);\n    track.samples = [];\n\n    let data = {\n      id : this.id,\n      level : this.level,\n      sn : this.sn,\n      data1: moof,\n      data2: mdat,\n      startPTS: firstPTS / pesTimeScale,\n      endPTS: (lastPTS + pes2mp4ScaleFactor * mp4SampleDuration) / pesTimeScale,\n      startDTS: firstDTS / pesTimeScale,\n      endDTS: this.nextAvcDts / pesTimeScale,\n      type: 'video',\n      nb: outputSamples.length,\n      dropped : dropped\n    };\n    this.observer.trigger(Event.FRAG_PARSING_DATA, data);\n    return data;\n  }\n\n  remuxAudio(track, timeOffset, contiguous,accurateTimeOffset) {\n    const pesTimeScale = this.PES_TIMESCALE,\n          mp4timeScale = track.timescale,\n          pes2mp4ScaleFactor = pesTimeScale/mp4timeScale,\n          expectedSampleDuration = track.timescale * 1024 / track.audiosamplerate,\n          pesFrameDuration = expectedSampleDuration * pes2mp4ScaleFactor;\n    var view,\n        offset = 8,\n        aacSample, mp4Sample,\n        unit,\n        mdat, moof,\n        firstPTS, firstDTS, lastDTS,\n        pts, dts, ptsnorm, dtsnorm,\n        samples = [],\n        samples0 = [],\n        fillFrame, newStamp,\n        nextAacPts;\n\n    track.samples.sort(function(a, b) {\n      return (a.pts-b.pts);\n    });\n    samples0 = track.samples;\n\n    // for audio samples, also consider consecutive fragments as being contiguous (even if a level switch occurs),\n    // for sake of clarity:\n    // consecutive fragments are frags with\n    //  - less than 100ms gaps between new time offset and next expected PTS OR\n    //  - less than 20 audio frames distance\n    // contiguous fragments are consecutive fragments from same quality level (same level, new SN = old SN + 1)\n    // this helps ensuring audio continuity\n    // and this also avoids audio glitches/cut when switching quality, or reporting wrong duration on first audio frame\n\n    nextAacPts = this.nextAacPts;\n    contiguous |= (samples0.length && nextAacPts &&\n                   (Math.abs(timeOffset-nextAacPts/pesTimeScale) < 0.1 ||\n                    Math.abs((samples0[0].pts-nextAacPts)) < 20*pesFrameDuration)\n                    );\n\n    if (!contiguous) {\n      // if fragments are not contiguous, let's use timeOffset to compute next AAC PTS\n      nextAacPts = timeOffset*pesTimeScale;\n    }\n    // If the audio track is missing samples, the frames seem to get \"left-shifted\" within the\n    // resulting mp4 segment, causing sync issues and leaving gaps at the end of the audio segment.\n    // In an effort to prevent this from happening, we inject frames here where there are gaps.\n    // When possible, we inject a silent frame; when that's not possible, we duplicate the last\n    // frame.\n\n    // only inject/drop audio frames in case time offset is accurate\n    if (accurateTimeOffset) {\n      for (let i = 0, nextPtsNorm = nextAacPts; i < samples0.length; ) {\n        // First, let's see how far off this frame is from where we expect it to be\n        var sample = samples0[i],\n            ptsNorm = this._PTSNormalize(sample.pts - this._initDTS, nextAacPts),\n            delta = ptsNorm - nextPtsNorm;\n\n        // If we're overlapping by more than a duration, drop this sample\n        if (delta <= -pesFrameDuration) {\n          logger.warn(`Dropping 1 audio frame @ ${Math.round(nextPtsNorm/90)/1000}s due to ${Math.round(Math.abs(delta / 90))} ms overlap.`);\n          samples0.splice(i, 1);\n          track.len -= sample.unit.length;\n          // Don't touch nextPtsNorm or i\n        }\n        // Otherwise, if we're more than a frame away from where we should be, insert missing frames\n        else if (delta >= pesFrameDuration) {\n          var missing = Math.round(delta / pesFrameDuration);\n          logger.warn(`Injecting ${missing} audio frame @ ${Math.round(nextPtsNorm/90)/1000}s due to ${Math.round(delta / 90)} ms gap.`);\n          for (var j = 0; j < missing; j++) {\n            newStamp = nextPtsNorm + this._initDTS;\n            newStamp = Math.max(newStamp, this._initDTS);\n            fillFrame = AAC.getSilentFrame(track.channelCount);\n            if (!fillFrame) {\n              logger.log('Unable to get silent frame for given audio codec; duplicating last frame instead.');\n              fillFrame = sample.unit.slice(0);\n            }\n            samples0.splice(i, 0, {unit: fillFrame, pts: newStamp, dts: newStamp});\n            track.len += fillFrame.length;\n            nextPtsNorm += pesFrameDuration;\n            i += 1;\n          }\n\n          // Adjust sample to next expected pts\n          sample.pts = sample.dts = nextPtsNorm + this._initDTS;\n          nextPtsNorm += pesFrameDuration;\n          i += 1;\n        }\n        // Otherwise, we're within half a frame duration, so just adjust pts\n        else {\n          if (Math.abs(delta) > (0.1 * pesFrameDuration)) {\n            //logger.log(`Invalid frame delta ${Math.round(ptsNorm - nextPtsNorm + pesFrameDuration)} at PTS ${Math.round(ptsNorm / 90)} (should be ${Math.round(pesFrameDuration)}).`);\n          }\n          nextPtsNorm += pesFrameDuration;\n          if (i === 0) {\n            sample.pts = sample.dts = this._initDTS + nextAacPts;\n          } else {\n            sample.pts = sample.dts = samples0[i - 1].pts + pesFrameDuration;\n          }\n          i += 1;\n        }\n      }\n    }\n\n\n    while (samples0.length) {\n      aacSample = samples0.shift();\n      unit = aacSample.unit;\n      pts = aacSample.pts - this._initDTS;\n      dts = aacSample.dts - this._initDTS;\n      //logger.log(`Audio/PTS:${Math.round(pts/90)}`);\n      // if not first sample\n      if (lastDTS !== undefined) {\n        ptsnorm = this._PTSNormalize(pts, lastDTS);\n        dtsnorm = this._PTSNormalize(dts, lastDTS);\n        mp4Sample.duration = Math.round((dtsnorm - lastDTS) / pes2mp4ScaleFactor);\n      } else {\n        ptsnorm = this._PTSNormalize(pts, nextAacPts);\n        dtsnorm = this._PTSNormalize(dts, nextAacPts);\n        let delta = Math.round(1000 * (ptsnorm - nextAacPts) / pesTimeScale),\n            numMissingFrames = 0;\n        // if fragment are contiguous, detect hole/overlapping between fragments\n        // contiguous fragments are consecutive fragments from same quality level (same level, new SN = old SN + 1)\n        if (contiguous) {\n          // log delta\n          if (delta) {\n            if (delta > 0) {\n              numMissingFrames = Math.round((ptsnorm - nextAacPts) / pesFrameDuration);\n              logger.log(`${delta} ms hole between AAC samples detected,filling it`);\n              if (numMissingFrames > 0) {\n                fillFrame = AAC.getSilentFrame(track.channelCount);\n                if (!fillFrame) {\n                  fillFrame = unit.slice(0);\n                }\n                track.len += numMissingFrames * fillFrame.length;\n              }\n              // if we have frame overlap, overlapping for more than half a frame duraion\n            } else if (delta < -12) {\n              // drop overlapping audio frames... browser will deal with it\n              logger.log(`${(-delta)} ms overlapping between AAC samples detected, drop frame`);\n              track.len -= unit.byteLength;\n              continue;\n            }\n            // set PTS/DTS to expected PTS/DTS\n            ptsnorm = dtsnorm = nextAacPts;\n          }\n        }\n        // remember first PTS of our aacSamples, ensure value is positive\n        firstPTS = Math.max(0, ptsnorm);\n        firstDTS = Math.max(0, dtsnorm);\n        if(track.len > 0) {\n          /* concatenate the audio data and construct the mdat in place\n            (need 8 more bytes to fill length and mdat type) */\n          mdat = new Uint8Array(track.len + 8);\n          view = new DataView(mdat.buffer);\n          view.setUint32(0, mdat.byteLength);\n          mdat.set(MP4.types.mdat, 4);\n        } else {\n          // no audio samples\n          return;\n        }\n        for (let i = 0; i < numMissingFrames; i++) {\n          newStamp = ptsnorm - (numMissingFrames - i) * pesFrameDuration;\n          fillFrame = AAC.getSilentFrame(track.channelCount);\n          if (!fillFrame) {\n            logger.log('Unable to get silent frame for given audio codec; duplicating this frame instead.');\n            fillFrame = unit.slice(0);\n          }\n          mdat.set(fillFrame, offset);\n          offset += fillFrame.byteLength;\n          mp4Sample = {\n            size: fillFrame.byteLength,\n            cts: 0,\n            duration: 1024,\n            flags: {\n              isLeading: 0,\n              isDependedOn: 0,\n              hasRedundancy: 0,\n              degradPrio: 0,\n              dependsOn: 1,\n            }\n          };\n          samples.push(mp4Sample);\n        }\n      }\n      mdat.set(unit, offset);\n      offset += unit.byteLength;\n      //console.log('PTS/DTS/initDTS/normPTS/normDTS/relative PTS : ${aacSample.pts}/${aacSample.dts}/${this._initDTS}/${ptsnorm}/${dtsnorm}/${(aacSample.pts/4294967296).toFixed(3)}');\n      mp4Sample = {\n        size: unit.byteLength,\n        cts: 0,\n        duration: 0,\n        flags: {\n          isLeading: 0,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradPrio: 0,\n          dependsOn: 1,\n        }\n      };\n      samples.push(mp4Sample);\n      lastDTS = dtsnorm;\n    }\n    var lastSampleDuration = 0;\n    var nbSamples = samples.length;\n    //set last sample duration as being identical to previous sample\n    if (nbSamples >= 2) {\n      lastSampleDuration = samples[nbSamples - 2].duration;\n      mp4Sample.duration = lastSampleDuration;\n    }\n    if (nbSamples) {\n      // next aac sample PTS should be equal to last sample PTS + duration\n      this.nextAacPts = ptsnorm + pes2mp4ScaleFactor * lastSampleDuration;\n      //logger.log('Audio/PTS/PTSend:' + aacSample.pts.toFixed(0) + '/' + this.nextAacDts.toFixed(0));\n      track.len = 0;\n      track.samples = samples;\n      moof = MP4.moof(track.sequenceNumber++, firstDTS / pes2mp4ScaleFactor, track);\n      track.samples = [];\n      let audioData = {\n        id : this.id,\n        level : this.level,\n        sn : this.sn,\n        data1: moof,\n        data2: mdat,\n        startPTS: firstPTS / pesTimeScale,\n        endPTS: this.nextAacPts / pesTimeScale,\n        startDTS: firstDTS / pesTimeScale,\n        endDTS: (dtsnorm + pes2mp4ScaleFactor * lastSampleDuration) / pesTimeScale,\n        type: 'audio',\n        nb: nbSamples\n      };\n      this.observer.trigger(Event.FRAG_PARSING_DATA, audioData);\n      return audioData;\n    }\n    return null;\n  }\n\n  remuxEmptyAudio(track, timeOffset, contiguous, videoData) {\n    let pesTimeScale = this.PES_TIMESCALE,\n        mp4timeScale = track.timescale ? track.timescale : track.audiosamplerate,\n        pes2mp4ScaleFactor = pesTimeScale/mp4timeScale,\n        nextAacPts = this.nextAacPts,\n\n        // sync with video's timestamp\n        startDTS = (nextAacPts !== undefined ? nextAacPts : videoData.startDTS * pesTimeScale) + this._initDTS,\n        endDTS = videoData.endDTS * pesTimeScale + this._initDTS,\n        // one sample's duration value\n        sampleDuration = 1024,\n        frameDuration = pes2mp4ScaleFactor * sampleDuration,\n\n        // samples count of this segment's duration\n        nbSamples = Math.ceil((endDTS - startDTS) / frameDuration),\n\n        // silent frame\n        silentFrame = AAC.getSilentFrame(track.channelCount);\n\n        logger.warn('remux empty Audio');\n    // Can't remux if we can't generate a silent frame...\n    if (!silentFrame) {\n      logger.trace('Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec!');\n      return;\n    }\n\n    let samples = [];\n    for(var i = 0; i < nbSamples; i++) {\n      var stamp = startDTS + i * frameDuration;\n      samples.push({unit: silentFrame.slice(0), pts: stamp, dts: stamp});\n      track.len += silentFrame.length;\n    }\n    track.samples = samples;\n\n    this.remuxAudio(track, timeOffset, contiguous);\n  }\n\n  remuxID3(track,timeOffset) {\n    var length = track.samples.length, sample;\n    // consume samples\n    if(length) {\n      for(var index = 0; index < length; index++) {\n        sample = track.samples[index];\n        // setting id3 pts, dts to relative time\n        // using this._initPTS and this._initDTS to calculate relative time\n        sample.pts = ((sample.pts - this._initPTS) / this.PES_TIMESCALE);\n        sample.dts = ((sample.dts - this._initDTS) / this.PES_TIMESCALE);\n      }\n      this.observer.trigger(Event.FRAG_PARSING_METADATA, {\n        id : this.id,\n        level : this.level,\n        sn : this.sn,\n        samples:track.samples\n      });\n    }\n\n    track.samples = [];\n    timeOffset = timeOffset;\n  }\n\n  remuxText(track,timeOffset) {\n    track.samples.sort(function(a, b) {\n      return (a.pts-b.pts);\n    });\n\n    var length = track.samples.length, sample;\n    // consume samples\n    if(length) {\n      for(var index = 0; index < length; index++) {\n        sample = track.samples[index];\n        // setting text pts, dts to relative time\n        // using this._initPTS and this._initDTS to calculate relative time\n        sample.pts = ((sample.pts - this._initPTS) / this.PES_TIMESCALE);\n      }\n      this.observer.trigger(Event.FRAG_PARSING_USERDATA, {\n        id : this.id,\n        level : this.level,\n        sn : this.sn,\n        samples:track.samples\n      });\n    }\n\n    track.samples = [];\n    timeOffset = timeOffset;\n  }\n\n  _PTSNormalize(value, reference) {\n    var offset;\n    if (reference === undefined) {\n      return value;\n    }\n    if (reference < value) {\n      // - 2^33\n      offset = -8589934592;\n    } else {\n      // + 2^33\n      offset = 8589934592;\n    }\n    /* PTS is 33bit (from 0 to 2^33 -1)\n      if diff between value and reference is bigger than half of the amplitude (2^32) then it means that\n      PTS looping occured. fill the gap */\n    while (Math.abs(value - reference) > 4294967296) {\n        value += offset;\n    }\n    return value;\n  }\n\n}\n\nexport default MP4Remuxer;\n",
    "/**\n * passthrough remuxer\n*/\nimport Event from '../events';\n\nclass PassThroughRemuxer {\n  constructor(observer,id) {\n    this.observer = observer;\n    this.id = id;\n    this.ISGenerated = false;\n  }\n\n  get passthrough() {\n    return true;\n  }\n\n  destroy() {\n  }\n\n  insertDiscontinuity() {\n  }\n\n  switchLevel() {\n    this.ISGenerated = false;\n  }\n\n  remux(audioTrack,videoTrack,id3Track,textTrack,timeOffset,rawData) {\n    var observer = this.observer;\n    // generate Init Segment if needed\n    if (!this.ISGenerated) {\n      var tracks = {},\n          data = { id : this.id, tracks : tracks, unique : true },\n          track = videoTrack,\n          codec = track.codec;\n\n      if (codec) {\n        data.tracks.video = {\n          container : track.container,\n          codec :  codec,\n          metadata : {\n            width : track.width,\n            height : track.height\n          }\n        };\n      }\n\n      track = audioTrack;\n      codec = track.codec;\n      if (codec) {\n        data.tracks.audio = {\n          container : track.container,\n          codec :  codec,\n          metadata : {\n            channelCount : track.channelCount\n          }\n        };\n      }\n      this.ISGenerated = true;\n      observer.trigger(Event.FRAG_PARSING_INIT_SEGMENT,data);\n    }\n    observer.trigger(Event.FRAG_PARSING_DATA, {\n      id : this.id,\n      data1: rawData,\n      startPTS: timeOffset,\n      startDTS: timeOffset,\n      type: 'audiovideo',\n      nb: 1,\n      dropped : 0\n    });\n  }\n}\n\nexport default PassThroughRemuxer;\n",
    "\n// adapted from https://github.com/kanongil/node-m3u8parse/blob/master/attrlist.js\nclass AttrList {\n\n  constructor(attrs) {\n    if (typeof attrs === 'string') {\n      attrs = AttrList.parseAttrList(attrs);\n    }\n    for(var attr in attrs){\n      if(attrs.hasOwnProperty(attr)) {\n        this[attr] = attrs[attr];\n      }\n    }\n  }\n\n  decimalInteger(attrName) {\n    const intValue = parseInt(this[attrName], 10);\n    if (intValue > Number.MAX_SAFE_INTEGER) {\n      return Infinity;\n    }\n    return intValue;\n  }\n\n  hexadecimalInteger(attrName) {\n    if(this[attrName]) {\n      let stringValue = (this[attrName] || '0x').slice(2);\n      stringValue = ((stringValue.length & 1) ? '0' : '') + stringValue;\n\n      const value = new Uint8Array(stringValue.length / 2);\n      for (let i = 0; i < stringValue.length / 2; i++) {\n        value[i] = parseInt(stringValue.slice(i * 2, i * 2 + 2), 16);\n      }\n      return value;\n    } else {\n      return null;\n    }\n  }\n\n  hexadecimalIntegerAsNumber(attrName) {\n    const intValue = parseInt(this[attrName], 16);\n    if (intValue > Number.MAX_SAFE_INTEGER) {\n      return Infinity;\n    }\n    return intValue;\n  }\n\n  decimalFloatingPoint(attrName) {\n    return parseFloat(this[attrName]);\n  }\n\n  enumeratedString(attrName) {\n    return this[attrName];\n  }\n\n  decimalResolution(attrName) {\n    const res = /^(\\d+)x(\\d+)$/.exec(this[attrName]);\n    if (res === null) {\n      return undefined;\n    }\n    return {\n      width: parseInt(res[1], 10),\n      height: parseInt(res[2], 10)\n    };\n  }\n\n  static parseAttrList(input) {\n    const re = /\\s*(.+?)\\s*=((?:\\\".*?\\\")|.*?)(?:,|$)/g;\n    var match, attrs = {};\n    while ((match = re.exec(input)) !== null) {\n      var value = match[2], quote = '\"';\n\n      if (value.indexOf(quote) === 0 &&\n          value.lastIndexOf(quote) === (value.length-1)) {\n        value = value.slice(1, -1);\n      }\n      attrs[match[1]] = value;\n    }\n    return attrs;\n  }\n\n}\n\nexport default AttrList;\n",
    "var BinarySearch = {\n    /**\n     * Searches for an item in an array which matches a certain condition.\n     * This requires the condition to only match one item in the array,\n     * and for the array to be ordered.\n     *\n     * @param {Array} list The array to search.\n     * @param {Function} comparisonFunction\n     *      Called and provided a candidate item as the first argument.\n     *      Should return:\n     *          > -1 if the item should be located at a lower index than the provided item.\n     *          > 1 if the item should be located at a higher index than the provided item.\n     *          > 0 if the item is the item you're looking for.\n     *\n     * @return {*} The object if it is found or null otherwise.\n     */\n    search: function(list, comparisonFunction) {\n        var minIndex = 0;\n        var maxIndex = list.length - 1;\n        var currentIndex = null;\n        var currentElement = null;\n     \n        while (minIndex <= maxIndex) {\n            currentIndex = (minIndex + maxIndex) / 2 | 0;\n            currentElement = list[currentIndex];\n            \n            var comparisonResult = comparisonFunction(currentElement);\n            if (comparisonResult > 0) {\n                minIndex = currentIndex + 1;\n            }\n            else if (comparisonResult < 0) {\n                maxIndex = currentIndex - 1;\n            }\n            else {\n                return currentElement;\n            }\n        }\n     \n        return null;\n    }\n};\n\nmodule.exports = BinarySearch;\n",
    "/**\n *\n * This code was ported from the dash.js project at:\n *   https://github.com/Dash-Industry-Forum/dash.js/blob/development/externals/cea608-parser.js\n *   https://github.com/Dash-Industry-Forum/dash.js/commit/8269b26a761e0853bb21d78780ed945144ecdd4d#diff-71bc295a2d6b6b7093a1d3290d53a4b2\n *\n * The original copyright appears below:\n *\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2015-2016, DASH Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  1. Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  2. Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n    /**\n     *  Exceptions from regular ASCII. CodePoints are mapped to UTF-16 codes\n     */\n\nvar specialCea608CharsCodes = {\n    0x2a : 0xe1, // lowercase a, acute accent\n    0x5c : 0xe9, // lowercase e, acute accent\n    0x5e : 0xed, // lowercase i, acute accent\n    0x5f : 0xf3, // lowercase o, acute accent\n    0x60 : 0xfa, // lowercase u, acute accent\n    0x7b : 0xe7, // lowercase c with cedilla\n    0x7c : 0xf7, // division symbol\n    0x7d : 0xd1, // uppercase N tilde\n    0x7e : 0xf1, // lowercase n tilde\n    0x7f : 0x2588, // Full block\n    // THIS BLOCK INCLUDES THE 16 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n    // THAT COME FROM HI BYTE=0x11 AND LOW BETWEEN 0x30 AND 0x3F\n    // THIS MEANS THAT \\x50 MUST BE ADDED TO THE VALUES\n    0x80 : 0xae, // Registered symbol (R)\n    0x81 : 0xb0, // degree sign\n    0x82 : 0xbd, // 1/2 symbol\n    0x83 : 0xbf, // Inverted (open) question mark\n    0x84 : 0x2122, // Trademark symbol (TM)\n    0x85 : 0xa2, // Cents symbol\n    0x86 : 0xa3, // Pounds sterling\n    0x87 : 0x266a, // Music 8'th note\n    0x88 : 0xe0, // lowercase a, grave accent\n    0x89 : 0x20, // transparent space (regular)\n    0x8a : 0xe8, // lowercase e, grave accent\n    0x8b : 0xe2, // lowercase a, circumflex accent\n    0x8c : 0xea, // lowercase e, circumflex accent\n    0x8d : 0xee, // lowercase i, circumflex accent\n    0x8e : 0xf4, // lowercase o, circumflex accent\n    0x8f : 0xfb, // lowercase u, circumflex accent\n    // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n    // THAT COME FROM HI BYTE=0x12 AND LOW BETWEEN 0x20 AND 0x3F\n    0x90 : 0xc1, // capital letter A with acute\n    0x91 : 0xc9, // capital letter E with acute\n    0x92 : 0xd3, // capital letter O with acute\n    0x93 : 0xda, // capital letter U with acute\n    0x94 : 0xdc, // capital letter U with diaresis\n    0x95 : 0xfc, // lowercase letter U with diaeresis\n    0x96 : 0x2018, // opening single quote\n    0x97 : 0xa1, // inverted exclamation mark\n    0x98 : 0x2a, // asterisk\n    0x99 : 0x2019, // closing single quote\n    0x9a : 0x2501, // box drawings heavy horizontal\n    0x9b : 0xa9, // copyright sign\n    0x9c : 0x2120, // Service mark\n    0x9d : 0x2022, // (round) bullet\n    0x9e : 0x201c, // Left double quotation mark\n    0x9f : 0x201d, // Right double quotation mark\n    0xa0 : 0xc0, // uppercase A, grave accent\n    0xa1 : 0xc2, // uppercase A, circumflex\n    0xa2 : 0xc7, // uppercase C with cedilla\n    0xa3 : 0xc8, // uppercase E, grave accent\n    0xa4 : 0xca, // uppercase E, circumflex\n    0xa5 : 0xcb, // capital letter E with diaresis\n    0xa6 : 0xeb, // lowercase letter e with diaresis\n    0xa7 : 0xce, // uppercase I, circumflex\n    0xa8 : 0xcf, // uppercase I, with diaresis\n    0xa9 : 0xef, // lowercase i, with diaresis\n    0xaa : 0xd4, // uppercase O, circumflex\n    0xab : 0xd9, // uppercase U, grave accent\n    0xac : 0xf9, // lowercase u, grave accent\n    0xad : 0xdb, // uppercase U, circumflex\n    0xae : 0xab, // left-pointing double angle quotation mark\n    0xaf : 0xbb, // right-pointing double angle quotation mark\n    // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n    // THAT COME FROM HI BYTE=0x13 AND LOW BETWEEN 0x20 AND 0x3F\n    0xb0 : 0xc3, // Uppercase A, tilde\n    0xb1 : 0xe3, // Lowercase a, tilde\n    0xb2 : 0xcd, // Uppercase I, acute accent\n    0xb3 : 0xcc, // Uppercase I, grave accent\n    0xb4 : 0xec, // Lowercase i, grave accent\n    0xb5 : 0xd2, // Uppercase O, grave accent\n    0xb6 : 0xf2, // Lowercase o, grave accent\n    0xb7 : 0xd5, // Uppercase O, tilde\n    0xb8 : 0xf5, // Lowercase o, tilde\n    0xb9 : 0x7b, // Open curly brace\n    0xba : 0x7d, // Closing curly brace\n    0xbb : 0x5c, // Backslash\n    0xbc : 0x5e, // Caret\n    0xbd : 0x5f, // Underscore\n    0xbe : 0x7c, // Pipe (vertical line)\n    0xbf : 0x223c, // Tilde operator\n    0xc0 : 0xc4, // Uppercase A, umlaut\n    0xc1 : 0xe4, // Lowercase A, umlaut\n    0xc2 : 0xd6, // Uppercase O, umlaut\n    0xc3 : 0xf6, // Lowercase o, umlaut\n    0xc4 : 0xdf, // Esszett (sharp S)\n    0xc5 : 0xa5, // Yen symbol\n    0xc6 : 0xa4, // Generic currency sign\n    0xc7 : 0x2503, // Box drawings heavy vertical\n    0xc8 : 0xc5, // Uppercase A, ring\n    0xc9 : 0xe5, // Lowercase A, ring\n    0xca : 0xd8, // Uppercase O, stroke\n    0xcb : 0xf8, // Lowercase o, strok\n    0xcc : 0x250f, // Box drawings heavy down and right\n    0xcd : 0x2513, // Box drawings heavy down and left\n    0xce : 0x2517, // Box drawings heavy up and right\n    0xcf : 0x251b // Box drawings heavy up and left\n};\n\n/**\n * Utils\n */\nvar getCharForByte = function(byte) {\n    var charCode = byte;\n    if (specialCea608CharsCodes.hasOwnProperty(byte)) {\n        charCode = specialCea608CharsCodes[byte];\n    }\n    return String.fromCharCode(charCode);\n};\n\nvar NR_ROWS = 15,\n    NR_COLS = 32;\n// Tables to look up row from PAC data\nvar rowsLowCh1 = {0x11 : 1, 0x12 : 3, 0x15 : 5, 0x16 : 7, 0x17 : 9, 0x10 : 11, 0x13 : 12, 0x14 : 14};\nvar rowsHighCh1 = {0x11 : 2, 0x12 : 4, 0x15 : 6, 0x16 : 8, 0x17 : 10, 0x13 : 13, 0x14 : 15};\nvar rowsLowCh2 = {0x19 : 1, 0x1A : 3, 0x1D : 5, 0x1E : 7, 0x1F : 9, 0x18 : 11, 0x1B : 12, 0x1C : 14};\nvar rowsHighCh2 = {0x19 : 2, 0x1A : 4, 0x1D : 6, 0x1E : 8, 0x1F : 10, 0x1B : 13, 0x1C : 15};\n\nvar backgroundColors = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'black', 'transparent'];\n\n/**\n * Simple logger class to be able to write with time-stamps and filter on level.\n */\nvar logger = {\n    verboseFilter : {'DATA' : 3, 'DEBUG' : 3, 'INFO' : 2, 'WARNING' : 2, 'TEXT' : 1, 'ERROR' : 0},\n    time : null,\n    verboseLevel : 0, // Only write errors\n    setTime : function(newTime) {\n        this.time = newTime;\n    },\n    log : function(severity, msg) {\n        var minLevel = this.verboseFilter[severity];\n        if (this.verboseLevel >= minLevel) {\n            console.log(this.time + ' [' + severity + '] ' + msg);\n        }\n    }\n};\n\nvar numArrayToHexArray = function(numArray) {\n    var hexArray = [];\n    for (var j = 0; j < numArray.length; j++) {\n        hexArray.push(numArray[j].toString(16));\n    }\n    return hexArray;\n};\n\nclass PenState {\n\n    constructor(foreground, underline, italics, background, flash) {\n        this.foreground = foreground || 'white';\n        this.underline = underline || false;\n        this.italics = italics || false;\n        this.background = background || 'black';\n        this.flash = flash || false;\n    }\n\n    reset() {\n        this.foreground = 'white';\n        this.underline = false;\n        this.italics = false;\n        this.background = 'black';\n        this.flash = false;\n    }\n\n    setStyles(styles) {\n        var attribs = ['foreground', 'underline', 'italics', 'background', 'flash'];\n        for (var i = 0 ; i < attribs.length; i++) {\n            var style = attribs[i];\n            if (styles.hasOwnProperty(style)) {\n                this[style] = styles[style];\n            }\n        }\n    }\n\n    isDefault() {\n        return (this.foreground === 'white' && !this.underline && !this.italics &&\n                this.background === 'black' && !this.flash);\n    }\n\n    equals(other) {\n        return ( (this.foreground === other.foreground) &&\n                 (this.underline === other.underline) &&\n                 (this.italics === other.italics) &&\n                 (this.background === other.background) &&\n                 (this.flash === other.flash) );\n    }\n\n    copy(newPenState) {\n        this.foreground = newPenState.foreground;\n        this.underline = newPenState.underline;\n        this.italics = newPenState.italics;\n        this.background = newPenState.background;\n        this.flash = newPenState.flash;\n    }\n\n    toString() {\n        return ('color=' + this.foreground + ', underline=' + this.underline + ', italics=' + this.italics +\n            ', background=' + this.background + ', flash=' + this.flash);\n    }\n}\n\n/**\n * Unicode character with styling and background.\n * @constructor\n */\nclass StyledUnicodeChar\n{\n\n    constructor(uchar, foreground, underline, italics, background, flash) {\n        this.uchar = uchar || ' '; // unicode character\n        this.penState = new PenState(foreground, underline,italics, background, flash);\n    }\n\n    reset() {\n        this.uchar = ' ';\n        this.penState.reset();\n    }\n\n    setChar(uchar, newPenState) {\n        this.uchar = uchar;\n        this.penState.copy(newPenState);\n    }\n\n    setPenState(newPenState) {\n        this.penState.copy(newPenState);\n    }\n\n    equals(other) {\n        return this.uchar === other.uchar && this.penState.equals(other.penState);\n    }\n\n    copy(newChar) {\n        this.uchar = newChar.uchar;\n        this.penState.copy(newChar.penState);\n    }\n\n    isEmpty() {\n        return this.uchar === ' ' && this.penState.isDefault();\n    }\n}\n\n/**\n * CEA-608 row consisting of NR_COLS instances of StyledUnicodeChar.\n * @constructor\n */\nclass Row {\n    constructor() {\n        this.chars = [];\n        for (var i = 0 ; i < NR_COLS ; i++) {\n            this.chars.push(new StyledUnicodeChar());\n        }\n        this.pos = 0;\n        this.currPenState = new PenState();\n    }\n\n    equals(other) {\n        var equal = true;\n        for (var i = 0 ; i < NR_COLS; i ++) {\n            if (!this.chars[i].equals(other.chars[i])) {\n                equal = false;\n                break;\n            }\n        }\n        return equal;\n    }\n\n    copy(other) {\n        for (var i = 0 ; i < NR_COLS; i ++) {\n            this.chars[i].copy(other.chars[i]);\n        }\n    }\n\n    isEmpty() {\n        var empty = true;\n        for (var i = 0 ; i < NR_COLS; i ++) {\n            if (!this.chars[i].isEmpty()) {\n                empty = false;\n                break;\n            }\n        }\n        return empty;\n    }\n\n    /**\n     *  Set the cursor to a valid column.\n     */\n    setCursor(absPos) {\n        if (this.pos !== absPos) {\n            this.pos = absPos;\n        }\n        if (this.pos < 0) {\n            logger.log('ERROR', 'Negative cursor position ' + this.pos);\n            this.pos = 0;\n        } else if (this.pos > NR_COLS) {\n            logger.log('ERROR', 'Too large cursor position ' + this.pos);\n            this.pos = NR_COLS;\n        }\n    }\n\n    /**\n     * Move the cursor relative to current position.\n     */\n    moveCursor(relPos) {\n        var newPos = this.pos + relPos;\n        if (relPos > 1) {\n            for (var i = this.pos+1; i < newPos+1 ; i++) {\n                this.chars[i].setPenState(this.currPenState);\n            }\n        }\n        this.setCursor(newPos);\n    }\n\n    /**\n     * Backspace, move one step back and clear character.\n     */\n    backSpace() {\n        this.moveCursor(-1);\n        this.chars[this.pos].setChar(' ', this.currPenState);\n    }\n\n    insertChar(byte) {\n        if (byte >= 0x90) { //Extended char\n            this.backSpace();\n        }\n        var char = getCharForByte(byte);\n        if (this.pos >= NR_COLS) {\n            logger.log('ERROR', 'Cannot insert ' + byte.toString(16) +\n                        ' (' + char + ') at position ' + this.pos + '. Skipping it!');\n            return;\n        }\n        this.chars[this.pos].setChar(char, this.currPenState);\n        this.moveCursor(1);\n    }\n\n    clearFromPos(startPos) {\n        var i;\n        for (i = startPos ; i < NR_COLS ; i++) {\n            this.chars[i].reset();\n        }\n    }\n\n    clear() {\n        this.clearFromPos(0);\n        this.pos = 0;\n        this.currPenState.reset();\n    }\n\n    clearToEndOfRow() {\n        this.clearFromPos(this.pos);\n    }\n\n    getTextString() {\n        var chars = [];\n        var empty = true;\n        for (var i = 0 ; i < NR_COLS ; i++) {\n            var char = this.chars[i].uchar;\n            if (char !== ' ') {\n                empty = false;\n            }\n            chars.push(char);\n        }\n        if (empty) {\n            return '';\n        } else {\n            return chars.join('');\n        }\n    }\n\n    setPenStyles(styles) {\n        this.currPenState.setStyles(styles);\n        var currChar = this.chars[this.pos];\n        currChar.setPenState(this.currPenState);\n    }\n}\n\n/**\n * Keep a CEA-608 screen of 32x15 styled characters\n * @constructor\n*/\nclass CaptionScreen {\n\n    constructor() {\n        this.rows = [];\n        for (var i = 0 ; i <  NR_ROWS; i++) {\n            this.rows.push(new Row()); // Note that we use zero-based numbering (0-14)\n        }\n        this.currRow = NR_ROWS - 1;\n        this.nrRollUpRows = null;\n        this.reset();\n    }\n\n    reset() {\n        for (var i = 0 ; i < NR_ROWS ; i++) {\n            this.rows[i].clear();\n        }\n        this.currRow = NR_ROWS - 1;\n    }\n\n    equals(other) {\n        var equal = true;\n        for (var i = 0 ; i < NR_ROWS ; i++) {\n            if (!this.rows[i].equals(other.rows[i])) {\n                equal = false;\n                break;\n            }\n        }\n        return equal;\n    }\n\n    copy(other) {\n        for (var i = 0 ; i < NR_ROWS ; i++) {\n            this.rows[i].copy(other.rows[i]);\n        }\n    }\n\n    isEmpty() {\n        var empty = true;\n        for (var i = 0 ; i < NR_ROWS ; i++) {\n            if (!this.rows[i].isEmpty()) {\n                empty = false;\n                break;\n            }\n        }\n        return empty;\n    }\n\n    backSpace() {\n        var row = this.rows[this.currRow];\n        row.backSpace();\n    }\n\n    clearToEndOfRow() {\n        var row = this.rows[this.currRow];\n        row.clearToEndOfRow();\n    }\n\n    /**\n     * Insert a character (without styling) in the current row.\n     */\n    insertChar(char) {\n        var row = this.rows[this.currRow];\n        row.insertChar(char);\n    }\n\n    setPen(styles) {\n        var row = this.rows[this.currRow];\n        row.setPenStyles(styles);\n    }\n\n    moveCursor(relPos) {\n        var row = this.rows[this.currRow];\n        row.moveCursor(relPos);\n    }\n\n    setCursor(absPos) {\n        logger.log('INFO', 'setCursor: ' + absPos);\n        var row = this.rows[this.currRow];\n        row.setCursor(absPos);\n    }\n\n    setPAC(pacData, lastOutputScreen) {\n        logger.log('INFO', 'pacData = ' + JSON.stringify(pacData));\n        var newRow = pacData.row - 1;\n        if (this.nrRollUpRows  && newRow < this.nrRollUpRows - 1) {\n                newRow = this.nrRollUpRows-1;\n        }\n\n        if (this.currRow !== newRow) {\n          //clear all rows first\n          for (var i = 0; i < NR_ROWS; i++) {\n            this.rows[i].clear();\n          }\n\n          //Copy this.nrRollUpRows rows from lastOutputScreen and place it in the newRow location\n          //topRowIndex - the start of rows to copy (inclusive index)\n          var topRowIndex = this.currRow + 1 - (this.nrRollUpRows);\n          //We only copy if the last position was already shown.\n          //We use the cueStartTime to check this.\n          var prevLineTime = lastOutputScreen.rows[topRowIndex].cueStartTime;\n          if(prevLineTime && prevLineTime < logger.time) {\n            for (i = 0; i < this.nrRollUpRows; i++) {\n              this.rows[newRow-this.nrRollUpRows+i+1].copy(lastOutputScreen.rows[topRowIndex+i]);\n            }\n          }\n        }\n\n        this.currRow = newRow;\n        var row = this.rows[this.currRow];\n        if (pacData.indent !== null) {\n            var indent = pacData.indent;\n            var prevPos = Math.max(indent-1, 0);\n            row.setCursor(pacData.indent);\n            pacData.color = row.chars[prevPos].penState.foreground;\n        }\n        var styles = {foreground : pacData.color, underline : pacData.underline, italics : pacData.italics, background : 'black', flash : false};\n        this.setPen(styles);\n    }\n\n    /**\n     * Set background/extra foreground, but first do back_space, and then insert space (backwards compatibility).\n     */\n    setBkgData(bkgData) {\n\n        logger.log('INFO', 'bkgData = ' + JSON.stringify(bkgData));\n        this.backSpace();\n        this.setPen(bkgData);\n        this.insertChar(0x20); //Space\n    }\n\n    setRollUpRows(nrRows) {\n        this.nrRollUpRows = nrRows;\n    }\n\n    rollUp() {\n        if (this.nrRollUpRows === null) {\n            logger.log('DEBUG', 'roll_up but nrRollUpRows not set yet');\n            return; //Not properly setup\n        }\n        logger.log('TEXT', this.getDisplayText());\n        var topRowIndex = this.currRow + 1 - this.nrRollUpRows;\n        var topRow = this.rows.splice(topRowIndex, 1)[0];\n        topRow.clear();\n        this.rows.splice(this.currRow, 0, topRow);\n        logger.log('INFO', 'Rolling up');\n        //logger.log('TEXT', this.get_display_text())\n    }\n\n   /**\n    * Get all non-empty rows with as unicode text.\n    */\n    getDisplayText(asOneRow) {\n        asOneRow = asOneRow || false;\n        var displayText = [];\n        var text = '';\n        var rowNr = -1;\n        for (var i = 0 ; i < NR_ROWS ; i++) {\n            var rowText = this.rows[i].getTextString();\n            if (rowText) {\n                rowNr = i+1;\n                if (asOneRow) {\n                    displayText.push('Row ' + rowNr + ': \\'' + rowText + '\\'');\n                } else {\n                    displayText.push(rowText.trim());\n                }\n            }\n        }\n        if (displayText.length > 0) {\n            if (asOneRow) {\n                text = '[' + displayText.join(' | ') + ']';\n            } else {\n                text = displayText.join('\\n');\n            }\n        }\n        return text;\n    }\n\n    getTextAndFormat() {\n        return this.rows;\n    }\n}\n\n//var modes = ['MODE_ROLL-UP', 'MODE_POP-ON', 'MODE_PAINT-ON', 'MODE_TEXT'];\n\nclass Cea608Channel\n{\n    constructor(channelNumber, outputFilter) {\n\n        this.chNr = channelNumber;\n        this.outputFilter = outputFilter;\n        this.mode = null;\n        this.verbose = 0;\n        this.displayedMemory = new CaptionScreen();\n        this.nonDisplayedMemory = new CaptionScreen();\n        this.lastOutputScreen = new CaptionScreen();\n        this.currRollUpRow = this.displayedMemory.rows[NR_ROWS-1];\n        this.writeScreen = this.displayedMemory;\n        this.mode = null;\n        this.cueStartTime = null; // Keeps track of where a cue started.\n    }\n\n    reset() {\n        this.mode = null;\n        this.displayedMemory.reset();\n        this.nonDisplayedMemory.reset();\n        this.lastOutputScreen.reset();\n        this.currRollUpRow = this.displayedMemory.rows[NR_ROWS-1];\n        this.writeScreen = this.displayedMemory;\n        this.mode = null;\n        this.cueStartTime = null;\n        this.lastCueEndTime = null;\n    }\n\n    getHandler() {\n        return this.outputFilter;\n    }\n\n    setHandler(newHandler) {\n        this.outputFilter = newHandler;\n    }\n\n    setPAC(pacData) {\n        this.writeScreen.setPAC(pacData, this.lastOutputScreen);\n    }\n\n    setBkgData(bkgData) {\n        this.writeScreen.setBkgData(bkgData);\n    }\n\n    setMode(newMode) {\n        if (newMode === this.mode) {\n            return;\n        }\n        this.mode = newMode;\n        logger.log('INFO', 'MODE=' + newMode);\n        if (this.mode === 'MODE_POP-ON') {\n            this.writeScreen = this.nonDisplayedMemory;\n        } else {\n            this.writeScreen = this.displayedMemory;\n            this.writeScreen.reset();\n            this.lastOutputScreen.reset();\n        }\n        if (this.mode !== 'MODE_ROLL-UP') {\n            this.displayedMemory.nrRollUpRows = null;\n            this.nonDisplayedMemory.nrRollUpRows = null;\n        }\n        this.mode = newMode;\n    }\n\n    insertChars(chars) {\n        for (var i = 0 ; i < chars.length ; i++) {\n            this.writeScreen.insertChar(chars[i]);\n        }\n        var screen = this.writeScreen === this.displayedMemory ? 'DISP' : 'NON_DISP';\n        logger.log('INFO', screen + ': ' + this.writeScreen.getDisplayText(true));\n        if (this.mode === 'MODE_PAINT-ON' || this.mode === 'MODE_ROLL-UP') {\n            logger.log('TEXT', 'DISPLAYED: ' + this.displayedMemory.getDisplayText(true));\n            this.outputDataUpdate();\n        }\n    }\n\n    ccRCL() { // Resume Caption Loading (switch mode to Pop On)\n        logger.log('INFO', 'RCL - Resume Caption Loading');\n        this.setMode('MODE_POP-ON');\n    }\n\n    ccBS() { // BackSpace\n        logger.log('INFO', 'BS - BackSpace');\n        if (this.mode === 'MODE_TEXT') {\n            return;\n        }\n        this.writeScreen.backSpace();\n        if (this.writeScreen === this.displayedMemory) {\n            this.outputDataUpdate();\n        }\n    }\n\n    ccAOF() { // Reserved (formerly Alarm Off)\n        return;\n    }\n\n    ccAON() { // Reserved (formerly Alarm On)\n        return;\n    }\n\n    ccDER() { // Delete to End of Row\n        logger.log('INFO', 'DER- Delete to End of Row');\n        this.writeScreen.clearToEndOfRow();\n        this.outputDataUpdate();\n    }\n\n    ccRU(nrRows) { //Roll-Up Captions-2,3,or 4 Rows\n        logger.log('INFO', 'RU(' + nrRows +') - Roll Up');\n        this.writeScreen = this.displayedMemory;\n        this.setMode('MODE_ROLL-UP');\n        this.writeScreen.setRollUpRows(nrRows);\n    }\n\n    ccFON() { //Flash On\n        logger.log('INFO', 'FON - Flash On');\n        this.writeScreen.setPen({flash : true});\n    }\n\n    ccRDC() { // Resume Direct Captioning (switch mode to PaintOn)\n        logger.log('INFO', 'RDC - Resume Direct Captioning');\n        this.setMode('MODE_PAINT-ON');\n    }\n\n    ccTR() { // Text Restart in text mode (not supported, however)\n        logger.log('INFO', 'TR');\n        this.setMode('MODE_TEXT');\n    }\n\n    ccRTD() { // Resume Text Display in Text mode (not supported, however)\n        logger.log('INFO', 'RTD');\n        this.setMode('MODE_TEXT');\n    }\n\n    ccEDM() { // Erase Displayed Memory\n        logger.log('INFO', 'EDM - Erase Displayed Memory');\n        this.displayedMemory.reset();\n        this.outputDataUpdate();\n    }\n\n    ccCR() { // Carriage Return\n        logger.log('CR - Carriage Return');\n        this.writeScreen.rollUp();\n        this.outputDataUpdate();\n    }\n\n    ccENM() { //Erase Non-Displayed Memory\n        logger.log('INFO', 'ENM - Erase Non-displayed Memory');\n        this.nonDisplayedMemory.reset();\n    }\n\n    ccEOC() { //End of Caption (Flip Memories)\n        logger.log('INFO', 'EOC - End Of Caption');\n        if (this.mode === 'MODE_POP-ON') {\n            var tmp = this.displayedMemory;\n            this.displayedMemory = this.nonDisplayedMemory;\n            this.nonDisplayedMemory = tmp;\n            this.writeScreen = this.nonDisplayedMemory;\n            logger.log('TEXT', 'DISP: ' + this.displayedMemory.getDisplayText());\n        }\n        this.outputDataUpdate();\n    }\n\n    ccTO(nrCols) { // Tab Offset 1,2, or 3 columns\n        logger.log('INFO', 'TO(' + nrCols + ') - Tab Offset');\n        this.writeScreen.moveCursor(nrCols);\n    }\n\n    ccMIDROW(secondByte) { // Parse MIDROW command\n        var styles = {flash : false};\n        styles.underline = secondByte % 2 === 1;\n        styles.italics = secondByte >= 0x2e;\n        if (!styles.italics) {\n            var colorIndex = Math.floor(secondByte/2) - 0x10;\n            var colors = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta'];\n            styles.foreground = colors[colorIndex];\n        } else {\n            styles.foreground = 'white';\n        }\n        logger.log('INFO', 'MIDROW: ' + JSON.stringify(styles));\n        this.writeScreen.setPen(styles);\n    }\n\n    outputDataUpdate() {\n        var t = logger.time;\n        if (t === null) {\n            return;\n        }\n        if (this.outputFilter) {\n            if (this.outputFilter.updateData) {\n                this.outputFilter.updateData(t, this.displayedMemory);\n            }\n            if (this.cueStartTime === null && !this.displayedMemory.isEmpty()) { // Start of a new cue\n                this.cueStartTime = t;\n            } else {\n                if (!this.displayedMemory.equals(this.lastOutputScreen)) {\n                    if (this.outputFilter.newCue) {\n                        this.outputFilter.newCue(this.cueStartTime, t, this.lastOutputScreen);\n                    }\n                    this.cueStartTime = this.displayedMemory.isEmpty() ? null : t;\n                }\n            }\n            this.lastOutputScreen.copy(this.displayedMemory);\n        }\n    }\n\n    cueSplitAtTime(t) {\n        if (this.outputFilter) {\n            if (!this.displayedMemory.isEmpty()) {\n                if (this.outputFilter.newCue) {\n                    this.outputFilter.newCue(this.cueStartTime, t, this.displayedMemory);\n                }\n                this.cueStartTime = t;\n            }\n        }\n    }\n}\n\nclass Cea608Parser {\n\n    constructor(field, out1, out2) {\n        this.field = field || 1;\n        this.outputs = [out1, out2];\n        this.channels = [new Cea608Channel(1, out1), new Cea608Channel(2, out2)];\n        this.currChNr = -1; // Will be 1 or 2\n        this.lastCmdA = null; // First byte of last command\n        this.lastCmdB = null; // Second byte of last command\n        this.bufferedData = [];\n        this.startTime = null;\n        this.lastTime = null;\n        this.dataCounters = {'padding' : 0, 'char' : 0, 'cmd' : 0, 'other' : 0};\n    }\n\n    getHandler(index) {\n        return this.channels[index].getHandler();\n    }\n\n    setHandler(index, newHandler) {\n        this.channels[index].setHandler(newHandler);\n    }\n\n    /**\n     * Add data for time t in forms of list of bytes (unsigned ints). The bytes are treated as pairs.\n     */\n    addData(t, byteList) {\n        var cmdFound, a, b,\n        charsFound = false;\n\n        this.lastTime = t;\n        logger.setTime(t);\n\n        for (var i = 0 ; i < byteList.length ; i+=2) {\n            a = byteList[i] & 0x7f;\n            b = byteList[i+1] & 0x7f;\n            if (a === 0 && b === 0) {\n                this.dataCounters.padding += 2;\n                continue;\n            } else {\n                logger.log('DATA', '[' + numArrayToHexArray([byteList[i], byteList[i+1]]) +'] -> (' + numArrayToHexArray([a, b]) + ')');\n            }\n            cmdFound = this.parseCmd(a, b);\n            if (!cmdFound) {\n                cmdFound = this.parseMidrow(a, b);\n            }\n            if (!cmdFound) {\n                cmdFound = this.parsePAC(a, b);\n            }\n            if (!cmdFound) {\n                cmdFound = this.parseBackgroundAttributes(a, b);\n            }\n            if (!cmdFound) {\n                charsFound = this.parseChars(a, b);\n                if (charsFound) {\n                    if (this.currChNr && this.currChNr >=0) {\n                        var channel = this.channels[this.currChNr-1];\n                        channel.insertChars(charsFound);\n                    } else {\n                        logger.log('WARNING', 'No channel found yet. TEXT-MODE?');\n                    }\n                }\n            }\n            if (cmdFound) {\n                this.dataCounters.cmd += 2;\n            } else if (charsFound) {\n                this.dataCounters.char += 2;\n            } else {\n                this.dataCounters.other += 2;\n                logger.log('WARNING', 'Couldn\\'t parse cleaned data ' + numArrayToHexArray([a, b]) +\n                            ' orig: ' + numArrayToHexArray([byteList[i], byteList[i+1]]));\n            }\n        }\n    }\n\n    /**\n     * Parse Command.\n     * @returns {Boolean} Tells if a command was found\n     */\n    parseCmd(a, b) {\n        var chNr = null;\n\n        var cond1 = (a === 0x14 || a === 0x1C) && (0x20 <= b && b <= 0x2F);\n        var cond2 = (a === 0x17 || a === 0x1F) && (0x21 <= b && b <= 0x23);\n        if (!(cond1 || cond2)) {\n            return false;\n        }\n\n        if (a === this.lastCmdA && b === this.lastCmdB) {\n            this.lastCmdA = null;\n            this.lastCmdB = null; // Repeated commands are dropped (once)\n            logger.log('DEBUG', 'Repeated command (' + numArrayToHexArray([a, b]) + ') is dropped');\n            return true;\n        }\n\n        if (a === 0x14 || a === 0x17) {\n            chNr = 1;\n        } else {\n            chNr = 2; // (a === 0x1C || a=== 0x1f)\n        }\n\n        var channel = this.channels[chNr - 1];\n\n        if (a === 0x14 || a === 0x1C) {\n            if (b === 0x20) {\n                channel.ccRCL();\n            } else if (b === 0x21) {\n                channel.ccBS();\n            } else if (b === 0x22) {\n                channel.ccAOF();\n            } else if (b === 0x23) {\n                channel.ccAON();\n            } else if (b === 0x24) {\n                channel.ccDER();\n            } else if (b === 0x25) {\n                channel.ccRU(2);\n            } else if (b === 0x26) {\n                channel.ccRU(3);\n            } else if (b === 0x27) {\n                channel.ccRU(4);\n            } else if (b === 0x28) {\n                channel.ccFON();\n            } else if (b === 0x29) {\n                channel.ccRDC();\n            } else if (b === 0x2A) {\n                channel.ccTR();\n            } else if (b === 0x2B) {\n                channel.ccRTD();\n            } else if (b === 0x2C) {\n                channel.ccEDM();\n            } else if (b === 0x2D) {\n                channel.ccCR();\n            } else if (b === 0x2E) {\n                channel.ccENM();\n            } else if (b === 0x2F) {\n                channel.ccEOC();\n            }\n        } else { //a == 0x17 || a == 0x1F\n            channel.ccTO(b - 0x20);\n        }\n        this.lastCmdA = a;\n        this.lastCmdB = b;\n        this.currChNr = chNr;\n        return true;\n    }\n\n    /**\n     * Parse midrow styling command\n     * @returns {Boolean}\n     */\n    parseMidrow(a, b) {\n        var chNr = null;\n\n        if ( ((a === 0x11) || (a === 0x19)) && 0x20 <= b && b <= 0x2f) {\n            if (a === 0x11) {\n                chNr = 1;\n            } else  {\n                chNr = 2;\n            }\n            if (chNr !== this.currChNr) {\n                logger.log('ERROR', 'Mismatch channel in midrow parsing');\n                return false;\n            }\n            var channel = this.channels[chNr-1];\n            channel.ccMIDROW(b);\n            logger.log('DEBUG', 'MIDROW (' + numArrayToHexArray([a, b]) + ')');\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Parse Preable Access Codes (Table 53).\n     * @returns {Boolean} Tells if PAC found\n     */\n    parsePAC(a, b) {\n\n       var chNr = null;\n       var row = null;\n\n        var case1 = ((0x11 <= a  && a <= 0x17) || (0x19 <= a && a <= 0x1F)) && (0x40 <= b && b <= 0x7F);\n        var case2 = (a === 0x10 || a === 0x18) && (0x40 <= b && b <= 0x5F);\n        if (! (case1 || case2)) {\n            return false;\n        }\n\n        if (a === this.lastCmdA && b === this.lastCmdB) {\n            this.lastCmdA = null;\n            this.lastCmdB = null;\n            return true; // Repeated commands are dropped (once)\n        }\n\n        chNr = (a <= 0x17) ? 1 : 2;\n\n        if (0x40 <= b && b <= 0x5F) {\n            row = (chNr === 1) ? rowsLowCh1[a] : rowsLowCh2[a];\n        } else { // 0x60 <= b <= 0x7F\n            row = (chNr === 1) ? rowsHighCh1[a] : rowsHighCh2[a];\n        }\n        var pacData = this.interpretPAC(row, b);\n        var channel = this.channels[chNr-1];\n        channel.setPAC(pacData);\n        this.lastCmdA = a;\n        this.lastCmdB = b;\n        this.currChNr = chNr;\n        return true;\n    }\n\n    /**\n     * Interpret the second byte of the pac, and return the information.\n     * @returns {Object} pacData with style parameters.\n     */\n    interpretPAC(row, byte) {\n        var pacIndex = byte;\n        var pacData = {color : null, italics : false, indent : null, underline : false, row : row};\n\n        if (byte > 0x5F) {\n            pacIndex = byte - 0x60;\n        } else {\n            pacIndex = byte - 0x40;\n        }\n        pacData.underline = (pacIndex & 1) === 1;\n        if (pacIndex <= 0xd) {\n            pacData.color = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'white'][Math.floor(pacIndex/2)];\n        } else if (pacIndex <= 0xf) {\n            pacData.italics = true;\n            pacData.color = 'white';\n        } else {\n            pacData.indent = (Math.floor((pacIndex-0x10)/2))*4;\n        }\n        return pacData; // Note that row has zero offset. The spec uses 1.\n    }\n\n    /**\n     * Parse characters.\n     * @returns An array with 1 to 2 codes corresponding to chars, if found. null otherwise.\n     */\n    parseChars(a, b) {\n\n       var  channelNr = null,\n            charCodes = null,\n            charCode1 = null;\n\n        if (a >= 0x19) {\n            channelNr = 2;\n            charCode1 = a - 8;\n        } else {\n            channelNr = 1;\n            charCode1 = a;\n        }\n        if (0x11 <= charCode1 && charCode1 <= 0x13) {\n            // Special character\n            var oneCode = b;\n            if (charCode1 === 0x11) {\n                oneCode = b + 0x50;\n            } else if (charCode1 === 0x12) {\n                oneCode = b + 0x70;\n            } else {\n                oneCode = b + 0x90;\n            }\n            logger.log('INFO', 'Special char \\'' + getCharForByte(oneCode) + '\\' in channel ' + channelNr);\n            charCodes = [oneCode];\n        } else if (0x20 <= a && a <= 0x7f) {\n            charCodes = (b === 0) ? [a] : [a, b];\n        }\n        if (charCodes) {\n            var hexCodes = numArrayToHexArray(charCodes);\n            logger.log('DEBUG', 'Char codes =  ' + hexCodes.join(','));\n            this.lastCmdA = null;\n            this.lastCmdB = null;\n        }\n        return charCodes;\n    }\n\n    /**\n    * Parse extended background attributes as well as new foreground color black.\n    * @returns{Boolean} Tells if background attributes are found\n    */\n    parseBackgroundAttributes(a, b) {\n       var  bkgData,\n            index,\n            chNr,\n            channel;\n\n        var case1 = (a === 0x10 || a === 0x18) && (0x20 <= b && b <= 0x2f);\n        var case2 = (a === 0x17 || a === 0x1f) && (0x2d <=b && b <= 0x2f);\n        if (!(case1 || case2)) {\n            return false;\n        }\n        bkgData = {};\n        if (a  === 0x10 || a === 0x18) {\n            index = Math.floor((b-0x20)/2);\n            bkgData.background = backgroundColors[index];\n            if (b % 2 === 1) {\n                bkgData.background = bkgData.background + '_semi';\n            }\n        } else if (b === 0x2d) {\n            bkgData.background = 'transparent';\n        } else {\n            bkgData.foreground = 'black';\n            if (b === 0x2f) {\n                bkgData.underline = true;\n            }\n        }\n        chNr = (a < 0x18) ? 1 : 2;\n        channel = this.channels[chNr-1];\n        channel.setBkgData(bkgData);\n        this.lastCmdA = null;\n        this.lastCmdB = null;\n        return true;\n    }\n\n    /**\n     * Reset state of parser and its channels.\n     */\n    reset() {\n        for (var i=0 ; i < this.channels.length ; i++) {\n            if (this.channels[i]) {\n                this.channels[i].reset();\n            }\n        }\n        this.lastCmdA = null;\n        this.lastCmdB = null;\n    }\n\n    /**\n     * Trigger the generation of a cue, and the start of a new one if displayScreens are not empty.\n     */\n    cueSplitAtTime(t) {\n        for (var i=0 ; i < this.channels.length ; i++) {\n            if (this.channels[i]) {\n                this.channels[i].cueSplitAtTime(t);\n            }\n        }\n    }\n}\n\nexport default Cea608Parser;\n",
    "var Cues = {\n\n  newCue: function(track, startTime, endTime, captionScreen) {\n    var row;\n    var cue;\n    var indenting;\n    var indent;\n    var text;\n    var VTTCue = window.VTTCue || window.TextTrackCue;\n\n    for (var r=0; r<captionScreen.rows.length; r++)\n    {\n      row = captionScreen.rows[r];\n      indenting = true;\n      indent = 0;\n      text = '';\n\n      if (!row.isEmpty())\n      {\n        for (var c=0; c<row.chars.length; c++)\n        {\n          if (row.chars[c].uchar.match(/\\s/) && indenting)\n          {\n            indent++;\n          }\n          else\n          {\n            text += row.chars[c].uchar;\n            indenting = false;\n          }\n        }\n        //To be used for cleaning-up orphaned roll-up captions\n        row.cueStartTime = startTime;\n        cue = new VTTCue(startTime, endTime, text.trim());\n\n        if (indent >= 16)\n        {\n          indent--;\n        }\n        else\n        {\n          indent++;\n        }\n\n        // VTTCue.line get's flakey when using controls, so let's now include line 13&14\n        // also, drop line 1 since it's to close to the top\n        if (navigator.userAgent.match(/Firefox\\//))\n        {\n          cue.line = r + 1;\n        }\n        else\n        {\n          cue.line = (r > 7 ? r - 2 : r + 1);\n        }\n        cue.align = 'left';\n        // Clamp the position between 0 and 100 - if out of these bounds, Firefox throws an exception and captions break\n        cue.position = Math.max(0, Math.min(100, 100 * (indent / 32) + (navigator.userAgent.match(/Firefox\\//) ? 50 : 0)));\n        track.addCue(cue);\n      }\n    }\n  }\n\n};\n\nmodule.exports = Cues;\n",
    "/*\n * compute an Exponential Weighted moving average\n * - https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n *  - heavily inspired from shaka-player\n */\n\nclass EWMA {\n\n //  About half of the estimated value will be from the last |halfLife| samples by weight.\n  constructor(halfLife) {\n    // Larger values of alpha expire historical data more slowly.\n    this.alpha_ = halfLife ? Math.exp(Math.log(0.5) / halfLife) : 0;\n    this.estimate_ = 0;\n    this.totalWeight_ = 0;\n  }\n\n  sample(weight,value) {\n    var adjAlpha = Math.pow(this.alpha_, weight);\n    this.estimate_ = value * (1 - adjAlpha) + adjAlpha * this.estimate_;\n    this.totalWeight_ += weight;\n  }\n\n  getTotalWeight() {\n    return this.totalWeight_;\n  }\n\n  getEstimate() {\n    if (this.alpha_) {\n      var zeroFactor = 1 - Math.pow(this.alpha_, this.totalWeight_);\n      return this.estimate_ / zeroFactor;\n    } else {\n      return this.estimate_;\n    }\n  }\n}\n\nexport default EWMA;\n",
    "'use strict';\n\nfunction noop() {}\n\nconst fakeLogger = {\n  trace: noop,\n  debug: noop,\n  log: noop,\n  warn: noop,\n  info: noop,\n  error: noop\n};\n\nlet exportedLogger = fakeLogger;\n\n/*globals self: false */\n\n//let lastCallTime;\n// function formatMsgWithTimeInfo(type, msg) {\n//   const now = Date.now();\n//   const diff = lastCallTime ? '+' + (now - lastCallTime) : '0';\n//   lastCallTime = now;\n//   msg = (new Date(now)).toISOString() + ' | [' +  type + '] > ' + msg + ' ( ' + diff + ' ms )';\n//   return msg;\n// }\n\nfunction formatMsg(type, msg) {\n  msg = '[' +  type + '] > ' + msg;\n  return msg;\n}\n\nfunction consolePrintFn(type) {\n  const func = self.console[type];\n  if (func) {\n    return function(...args) {\n      if(args[0]) {\n        args[0] = formatMsg(type, args[0]);\n      }\n      func.apply(self.console, args);\n    };\n  }\n  return noop;\n}\n\nfunction exportLoggerFunctions(debugConfig, ...functions) {\n  functions.forEach(function(type) {\n    exportedLogger[type] = debugConfig[type] ? debugConfig[type].bind(debugConfig) : consolePrintFn(type);\n  });\n}\n\nexport var enableLogs = function(debugConfig) {\n  if (debugConfig === true || typeof debugConfig === 'object') {\n    exportLoggerFunctions(debugConfig,\n      // Remove out from list here to hard-disable a log-level\n      //'trace',\n      'debug',\n      'log',\n      'info',\n      'warn',\n      'error'\n    );\n    // Some browsers don't allow to use bind on console object anyway\n    // fallback to default if needed\n    try {\n     exportedLogger.log();\n    } catch (e) {\n      exportedLogger = fakeLogger;\n    }\n  }\n  else {\n    exportedLogger = fakeLogger;\n  }\n};\n\nexport var logger = exportedLogger;\n",
    "if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n  ArrayBuffer.prototype.slice = function (start, end) {\n    var that = new Uint8Array(this);\n    if (end === undefined) {\n      end = that.length;\n    }\n    var result = new ArrayBuffer(end - start);\n    var resultArray = new Uint8Array(result);\n    for (var i = 0; i < resultArray.length; i++) {\n      resultArray[i] = that[i + start];\n    }\n    return result;\n  };\n}\n",
    "/**\n *  TimeRanges to string helper\n */\n\nclass TimeRanges {\n  static toString(r) {\n    var log = '', len = r.length;\n    for (var i=0; i<len; i++) {\n      log += '[' + r.start(i).toFixed(3) + ',' + r.end(i).toFixed(3) + ']';\n    }\n    return log;\n  }\n}\n\nexport default TimeRanges;\n",
    "var URLHelper = {\n  // build an absolute URL from a relative one using the provided baseURL\n  // if relativeURL is an absolute URL it will be returned as is.\n  buildAbsoluteURL: function(baseURL, relativeURL) {\n    // remove any remaining space and CRLF\n    relativeURL = relativeURL.trim();\n    if (/^[a-z]+:/i.test(relativeURL)) {\n      // complete url, not relative\n      return relativeURL;\n    }\n\n    var relativeURLQuery = null;\n    var relativeURLHash = null;\n\n    var relativeURLHashSplit = /^([^#]*)(.*)$/.exec(relativeURL);\n    if (relativeURLHashSplit) {\n      relativeURLHash = relativeURLHashSplit[2];\n      relativeURL = relativeURLHashSplit[1];\n    }\n    var relativeURLQuerySplit = /^([^\\?]*)(.*)$/.exec(relativeURL);\n    if (relativeURLQuerySplit) {\n      relativeURLQuery = relativeURLQuerySplit[2];\n      relativeURL = relativeURLQuerySplit[1];\n    }\n\n    var baseURLHashSplit = /^([^#]*)(.*)$/.exec(baseURL);\n    if (baseURLHashSplit) {\n      baseURL = baseURLHashSplit[1];\n    }\n    var baseURLQuerySplit = /^([^\\?]*)(.*)$/.exec(baseURL);\n    if (baseURLQuerySplit) {\n      baseURL = baseURLQuerySplit[1];\n    }\n\n    var baseURLDomainSplit = /^(([a-z]+:)?\\/\\/[a-z0-9\\.\\-_~]+(:[0-9]+)?)?(\\/.*)$/i.exec(baseURL);\n    if (!baseURLDomainSplit) {\n      throw new Error('Error trying to parse base URL.');\n    }\n    \n    // e.g. 'http:', 'https:', ''\n    var baseURLProtocol = baseURLDomainSplit[2] || '';\n    // e.g. 'http://example.com', '//example.com', ''\n    var baseURLProtocolDomain = baseURLDomainSplit[1] || '';\n    // e.g. '/a/b/c/playlist.m3u8'\n    var baseURLPath = baseURLDomainSplit[4];\n\n    var builtURL = null;\n    if (/^\\/\\//.test(relativeURL)) {\n      // relative url starts wth '//' so copy protocol (which may be '' if baseUrl didn't provide one)\n      builtURL = baseURLProtocol+'//'+URLHelper.buildAbsolutePath('', relativeURL.substring(2));\n    }\n    else if (/^\\//.test(relativeURL)) {\n      // relative url starts with '/' so start from root of domain\n      builtURL = baseURLProtocolDomain+'/'+URLHelper.buildAbsolutePath('', relativeURL.substring(1));\n    }\n    else {\n      builtURL = URLHelper.buildAbsolutePath(baseURLProtocolDomain+baseURLPath, relativeURL);\n    }\n\n    // put the query and hash parts back\n    if (relativeURLQuery) {\n      builtURL += relativeURLQuery;\n    }\n    if (relativeURLHash) {\n      builtURL += relativeURLHash;\n    }\n    return builtURL;\n  },\n\n  // build an absolute path using the provided basePath\n  // adapted from https://developer.mozilla.org/en-US/docs/Web/API/document/cookie#Using_relative_URLs_in_the_path_parameter\n  // this does not handle the case where relativePath is \"/\" or \"//\". These cases should be handled outside this.\n  buildAbsolutePath: function(basePath, relativePath) {\n    var sRelPath = relativePath;\n    var nUpLn, sDir = '', sPath = basePath.replace(/[^\\/]*$/, sRelPath.replace(/(\\/|^)(?:\\.?\\/+)+/g, '$1'));\n    for (var nEnd, nStart = 0; nEnd = sPath.indexOf('/../', nStart), nEnd > -1; nStart = nEnd + nUpLn) {\n      nUpLn = /^\\/(?:\\.\\.\\/)*/.exec(sPath.slice(nEnd))[0].length;\n      sDir = (sDir + sPath.substring(nStart, nEnd)).replace(new RegExp('(?:\\\\\\/+[^\\\\\\/]*){0,' + ((nUpLn - 1) / 3) + '}$'), '/');\n    }\n    return sDir + sPath.substr(nStart);\n  }\n};\n\nmodule.exports = URLHelper;\n",
    "/**\n * XHR based logger\n*/\n\nimport {logger} from '../utils/logger';\n\nclass XhrLoader {\n\n  constructor(config) {\n    if (config && config.xhrSetup) {\n      this.xhrSetup = config.xhrSetup;\n    }\n  }\n\n  destroy() {\n    this.abort();\n    this.loader = null;\n  }\n\n  abort() {\n    var loader = this.loader;\n    if (loader && loader.readyState !== 4) {\n      this.stats.aborted = true;\n      loader.abort();\n    }\n\n    window.clearTimeout(this.requestTimeout);\n    this.requestTimeout = null;\n    window.clearTimeout(this.retryTimeout);\n    this.retryTimeout = null;\n  }\n\n  load(context, config, callbacks) {\n    this.context = context;\n    this.config = config;\n    this.callbacks = callbacks;\n    this.stats = {trequest: performance.now(), retry: 0};\n    this.retryDelay = config.retryDelay;\n    this.loadInternal();\n  }\n\n  loadInternal() {\n    var xhr, context = this.context;\n\n    if (typeof XDomainRequest !== 'undefined') {\n       xhr = this.loader = new XDomainRequest();\n    } else {\n       xhr = this.loader = new XMLHttpRequest();\n    }\n\n    xhr.onreadystatechange = this.readystatechange.bind(this);\n    xhr.onprogress = this.loadprogress.bind(this);\n\n    xhr.open('GET', context.url, true);\n\n    if (context.rangeEnd) {\n      xhr.setRequestHeader('Range','bytes=' + context.rangeStart + '-' + (context.rangeEnd-1));\n    }\n    xhr.responseType = context.responseType;\n    let stats = this.stats;\n    stats.tfirst = 0;\n    stats.loaded = 0;\n    if (this.xhrSetup) {\n      this.xhrSetup(xhr, context.url);\n    }\n    // setup timeout before we perform request\n    this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), this.config.timeout);\n    xhr.send();\n  }\n\n  readystatechange(event) {\n    var xhr = event.currentTarget,\n        readyState = xhr.readyState,\n        stats = this.stats,\n        context = this.context,\n        config = this.config;\n\n    // don't proceed if xhr has been aborted\n    if (stats.aborted) {\n      return;\n    }\n\n    // in any case clear the current xhrs timeout\n    window.clearTimeout(this.requestTimeout);\n\n    // HEADERS_RECEIVED\n    if (readyState >=2) {\n      if (stats.tfirst === 0) {\n        stats.tfirst = Math.max(performance.now(), stats.trequest);\n        // reset timeout to total timeout duration minus the time it took to receive headers\n        this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), config.timeout - (stats.tfirst-stats.trequest));\n      }\n      if (readyState === 4) {\n        let status = xhr.status;\n        // http status between 200 to 299 are all successful\n        if (status >= 200 && status < 300)  {\n          stats.tload = Math.max(stats.tfirst,performance.now());\n          let data,len;\n          if (context.responseType === 'arraybuffer') {\n            data = xhr.response;\n            len = data.byteLength;\n          } else {\n            data = xhr.responseText;\n            len = data.length;\n          }\n          stats.loaded = stats.total = len;\n          let response = { url : xhr.responseURL, data : data };\n          this.callbacks.onSuccess(response, stats, context);\n        } else {\n            // if max nb of retries reached or if http status between 400 and 499 (such error cannot be recovered, retrying is useless), return error\n          if (stats.retry >= config.maxRetry || (status >= 400 && status < 499)) {\n            logger.error(`${status} while loading ${context.url}` );\n            this.callbacks.onError({ code : status, text : xhr.statusText}, context);\n          } else {\n            // retry\n            logger.warn(`${status} while loading ${context.url}, retrying in ${this.retryDelay}...`);\n            // aborts and resets internal state\n            this.destroy();\n            // schedule retry\n            this.retryTimeout = window.setTimeout(this.loadInternal.bind(this), this.retryDelay);\n            // set exponential backoff\n            this.retryDelay = Math.min(2 * this.retryDelay, config.maxRetryDelay);\n            stats.retry++;\n          }\n        }\n      }\n    }\n  }\n\n  loadtimeout() {\n    logger.warn(`timeout while loading ${this.context.url}` );\n    this.callbacks.onTimeout(this.stats, this.context);\n  }\n\n  loadprogress(event) {\n    var stats = this.stats;\n    stats.loaded = event.loaded;\n    if (event.lengthComputable) {\n      stats.total = event.total;\n    }\n    let onProgress = this.callbacks.onProgress;\n    if (onProgress) {\n      // last args is to provide on progress data\n      onProgress(stats, this.context, null);\n    }\n  }\n}\n\nexport default XhrLoader;\n"
  ]
}